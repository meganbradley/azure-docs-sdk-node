### YamlMime:TSType
name: AnomalyDetectorClient
uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient'
package: '@azure/cognitiveservices-anomalydetector'
summary: ''
fullName: AnomalyDetectorClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      AnomalyDetectorClient(ServiceClientCredentials, string,
      ServiceClientOptions)
    uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.constructor'
    package: '@azure/cognitiveservices-anomalydetector'
    summary: Initializes a new instance of the AnomalyDetectorClient class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new AnomalyDetectorClient(credentials: ServiceClientCredentials,
        endpoint: string, options?: ServiceClientOptions)
      parameters:
        - id: credentials
          type: <xref uid="@azure/ms-rest-js.ServiceClientCredentials" />
          description: >-
            Subscription credentials which uniquely identify client
            subscription.
        - id: endpoint
          type: string
          description: >-
            Supported Cognitive Services endpoints (protocol and hostname, for
            example:

            https://westus2.api.cognitive.microsoft.com).
        - id: options
          type: <xref uid="@azure/ms-rest-js.ServiceClientOptions" />
          description: The parameter options
inheritedProperties:
  - name: credentials
    uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.credentials'
    package: '@azure/cognitiveservices-anomalydetector'
    summary: ''
    fullName: credentials
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        description: ''
        type: <xref uid="@azure/ms-rest-js.ServiceClientCredentials" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AnomalyDetectorClientContext.credentials](xref:@azure/cognitiveservices-anomalydetector.AnomalyDetectorClientContext.credentials)
  - name: endpoint
    uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.endpoint'
    package: '@azure/cognitiveservices-anomalydetector'
    summary: ''
    fullName: endpoint
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'endpoint: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AnomalyDetectorClientContext.endpoint](xref:@azure/cognitiveservices-anomalydetector.AnomalyDetectorClientContext.endpoint)
inheritedMethods:
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: >-
      @azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.sendOperationRequest
    package: '@azure/cognitiveservices-anomalydetector'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>):
        Promise<RestResponse>
      parameters:
        - id: operationArguments
          type: <xref uid="@azure/ms-rest-js.OperationArguments" />
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: <xref uid="@azure/ms-rest-js.OperationSpec" />
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;any&gt;
          description: The callback to call when the response is received.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AnomalyDetectorClientContext.sendOperationRequest](xref:@azure/cognitiveservices-anomalydetector.AnomalyDetectorClientContext.sendOperationRequest)
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.sendRequest'
    package: '@azure/cognitiveservices-anomalydetector'
    summary: Send the provided httpRequest.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest(options: RequestPrepareOptions | WebResourceLike):
        Promise<HttpOperationResponse>
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/ms-rest-js.RequestPrepareOptions" /> | <xref
            uid="@azure/ms-rest-js.WebResourceLike" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/ms-rest-js.HttpOperationResponse" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AnomalyDetectorClientContext.sendRequest](xref:@azure/cognitiveservices-anomalydetector.AnomalyDetectorClientContext.sendRequest)
methods:
  - name: changePointDetect(ChangePointDetectRequest, RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.changePointDetect
    package: '@azure/cognitiveservices-anomalydetector'
    summary: Evaluate change point score of every series point
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function changePointDetect(body: ChangePointDetectRequest, options?:
        RequestOptionsBase): Promise<ChangePointDetectResponse2>
      parameters:
        - id: body
          type: >-
            <xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.ChangePointDetectRequest"
            />
          description: >-
            Time series points and granularity is needed. Advanced model
            parameters can also be

            set in the request if needed.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.ChangePointDetectResponse2>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.ChangePointDetectResponse2"
          />&gt;
  - name: >-
      changePointDetect(ChangePointDetectRequest, RequestOptionsBase,
      ServiceCallback<ChangePointDetectResponse>)
    uid: >-
      @azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.changePointDetect_2
    package: '@azure/cognitiveservices-anomalydetector'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function changePointDetect(body: ChangePointDetectRequest, options:
        RequestOptionsBase, callback:
        ServiceCallback<ChangePointDetectResponse>)
      parameters:
        - id: body
          type: >-
            <xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.ChangePointDetectRequest"
            />
          description: >-
            Time series points and granularity is needed. Advanced model
            parameters can also be

            set in the request if needed.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.ChangePointDetectResponse"
            />&gt;
          description: The callback
  - name: >-
      changePointDetect(ChangePointDetectRequest,
      ServiceCallback<ChangePointDetectResponse>)
    uid: >-
      @azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.changePointDetect_1
    package: '@azure/cognitiveservices-anomalydetector'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function changePointDetect(body: ChangePointDetectRequest, callback:
        ServiceCallback<ChangePointDetectResponse>)
      parameters:
        - id: body
          type: >-
            <xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.ChangePointDetectRequest"
            />
          description: >-
            Time series points and granularity is needed. Advanced model
            parameters can also be

            set in the request if needed.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.ChangePointDetectResponse"
            />&gt;
          description: The callback
  - name: entireDetect(Request, RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.entireDetect
    package: '@azure/cognitiveservices-anomalydetector'
    summary: >-
      This operation generates a model using an entire series, each point is
      detected with the same

      model. With this method, points before and after a certain point are used
      to determine whether

      it is an anomaly. The entire detection can give user an overall status of
      the time series.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function entireDetect(body: Request, options?: RequestOptionsBase):
        Promise<EntireDetectResponse2>
      parameters:
        - id: body
          type: >-
            <xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.Request"
            />
          description: >-
            Time series points and period if needed. Advanced model parameters
            can also be set

            in the request.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.EntireDetectResponse2>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.EntireDetectResponse2"
          />&gt;
  - name: >-
      entireDetect(Request, RequestOptionsBase,
      ServiceCallback<EntireDetectResponse>)
    uid: >-
      @azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.entireDetect_2
    package: '@azure/cognitiveservices-anomalydetector'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function entireDetect(body: Request, options: RequestOptionsBase,
        callback: ServiceCallback<EntireDetectResponse>)
      parameters:
        - id: body
          type: >-
            <xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.Request"
            />
          description: >-
            Time series points and period if needed. Advanced model parameters
            can also be set

            in the request.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.EntireDetectResponse"
            />&gt;
          description: The callback
  - name: entireDetect(Request, ServiceCallback<EntireDetectResponse>)
    uid: >-
      @azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.entireDetect_1
    package: '@azure/cognitiveservices-anomalydetector'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function entireDetect(body: Request, callback:
        ServiceCallback<EntireDetectResponse>)
      parameters:
        - id: body
          type: >-
            <xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.Request"
            />
          description: >-
            Time series points and period if needed. Advanced model parameters
            can also be set

            in the request.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.EntireDetectResponse"
            />&gt;
          description: The callback
  - name: lastDetect(Request, RequestOptionsBase)
    uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.lastDetect'
    package: '@azure/cognitiveservices-anomalydetector'
    summary: >-
      This operation generates a model using points before the latest one. With
      this method, only

      historical points are used to determine whether the target point is an
      anomaly. The latest point

      detecting operation matches the scenario of real-time monitoring of
      business metrics.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function lastDetect(body: Request, options?: RequestOptionsBase):
        Promise<LastDetectResponse2>
      parameters:
        - id: body
          type: >-
            <xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.Request"
            />
          description: >-
            Time series points and period if needed. Advanced model parameters
            can also be set

            in the request.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.LastDetectResponse2>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.LastDetectResponse2"
          />&gt;
  - name: >-
      lastDetect(Request, RequestOptionsBase,
      ServiceCallback<LastDetectResponse>)
    uid: >-
      @azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.lastDetect_2
    package: '@azure/cognitiveservices-anomalydetector'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function lastDetect(body: Request, options: RequestOptionsBase,
        callback: ServiceCallback<LastDetectResponse>)
      parameters:
        - id: body
          type: >-
            <xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.Request"
            />
          description: >-
            Time series points and period if needed. Advanced model parameters
            can also be set

            in the request.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.LastDetectResponse"
            />&gt;
          description: The callback
  - name: lastDetect(Request, ServiceCallback<LastDetectResponse>)
    uid: >-
      @azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.lastDetect_1
    package: '@azure/cognitiveservices-anomalydetector'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function lastDetect(body: Request, callback:
        ServiceCallback<LastDetectResponse>)
      parameters:
        - id: body
          type: >-
            <xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.Request"
            />
          description: >-
            Time series points and period if needed. Advanced model parameters
            can also be set

            in the request.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorModels.LastDetectResponse"
            />&gt;
          description: The callback
extends: >-
  <xref
  uid="@azure/cognitiveservices-anomalydetector.AnomalyDetectorClientContext" />
