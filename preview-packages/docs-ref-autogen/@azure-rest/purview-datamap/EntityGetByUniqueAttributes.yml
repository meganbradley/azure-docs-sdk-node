### YamlMime:TSType
name: EntityGetByUniqueAttributes
uid: '@azure-rest/purview-datamap.EntityGetByUniqueAttributes'
package: '@azure-rest/purview-datamap'
summary: ''
fullName: EntityGetByUniqueAttributes
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: delete(EntityDeleteByUniqueAttributeParameters)
    uid: '@azure-rest/purview-datamap.EntityGetByUniqueAttributes.delete'
    package: '@azure-rest/purview-datamap'
    summary: >-
      Delete an entity identified by its type and unique attributes.

      In addition to

      the typeName path parameter, attribute key-value pair(s) can be provided
      in the

      following format:

      attr:\<attrName>=\<attrValue>.

      NOTE: The attrName and

      attrValue should be unique across entities, eg. qualifiedName.


      The REST

      request would look something like this:

      DELETE

      /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(options?: EntityDeleteByUniqueAttributeParameters):
        StreamableMethod<EntityDeleteByUniqueAttribute200Response |
        EntityDeleteByUniqueAttributeDefaultResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure-rest/purview-datamap.EntityDeleteByUniqueAttributeParameters"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/purview-datamap.EntityDeleteByUniqueAttribute200Response"
          /> | <xref
          uid="@azure-rest/purview-datamap.EntityDeleteByUniqueAttributeDefaultResponse"
          />&gt;
  - name: get(EntityGetByUniqueAttributesParameters)
    uid: '@azure-rest/purview-datamap.EntityGetByUniqueAttributes.get'
    package: '@azure-rest/purview-datamap'
    summary: >-
      Get complete definition of an entity given its type and unique attribute.


      In

      addition to the typeName path parameter, attribute key-value pair(s) can
      be

      provided in the following format:

      attr:\<attrName>=<attrValue>.


      NOTE: The

      attrName and attrValue should be unique across entities, eg.

      qualifiedName.


      The REST request would look something like this:

      GET

      /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(options?: EntityGetByUniqueAttributesParameters):
        StreamableMethod<EntityGetByUniqueAttributes200Response |
        EntityGetByUniqueAttributesDefaultResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure-rest/purview-datamap.EntityGetByUniqueAttributesParameters"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/purview-datamap.EntityGetByUniqueAttributes200Response"
          /> | <xref
          uid="@azure-rest/purview-datamap.EntityGetByUniqueAttributesDefaultResponse"
          />&gt;
  - name: put(EntityPartialUpdateByUniqueAttributesParameters)
    uid: '@azure-rest/purview-datamap.EntityGetByUniqueAttributes.put'
    package: '@azure-rest/purview-datamap'
    summary: >-
      Update entity partially - Allow a subset of attributes to be updated on an

      entity which is identified by its type and unique attribute eg:

      Referenceable.qualifiedName. Null updates are not possible.


      In addition to the

      typeName path parameter, attribute key-value pair(s) can be provided in
      the

      following format:


      attr:<attrName>=<attrValue>.

      NOTE: The attrName and

      attrValue should be unique across entities, eg. qualifiedName.


      The REST

      request would look something like this:

      PUT

      /v2/entity/uniqueAttribute/type/aType?attr:aTypeAttribute=someValue.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function put(options?: EntityPartialUpdateByUniqueAttributesParameters):
        StreamableMethod<EntityPartialUpdateByUniqueAttributes200Response |
        EntityPartialUpdateByUniqueAttributesDefaultResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure-rest/purview-datamap.EntityPartialUpdateByUniqueAttributesParameters"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/core-client.StreamableMethod" />&lt;<xref
          uid="@azure-rest/purview-datamap.EntityPartialUpdateByUniqueAttributes200Response"
          /> | <xref
          uid="@azure-rest/purview-datamap.EntityPartialUpdateByUniqueAttributesDefaultResponse"
          />&gt;
