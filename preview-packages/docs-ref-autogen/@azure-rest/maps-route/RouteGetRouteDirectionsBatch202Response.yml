### YamlMime:TSType
name: RouteGetRouteDirectionsBatch202Response
uid: '@azure-rest/maps-route.RouteGetRouteDirectionsBatch202Response'
package: '@azure-rest/maps-route'
summary: >-
  **Applies to**: see pricing [tiers](https://aka.ms/AzureMapsPricingTier).


  ### Download Asynchronous Batch Results

  To download the async batch results you will issue a `GET` request to the
  batch download endpoint. This _download URL_ can be obtained from the
  `Location` header of a successful `POST` batch request and looks like the
  following:


  ```

  https://atlas.microsoft.com/route/directions/batch/{batch-id}?api-version=1.0&subscription-key={subscription-key}

  ```

  Here's the typical sequence of operations for downloading the batch results:

  1. Client sends a `GET` request using the _download URL_.

  2. The server will respond with one of the following:

      > HTTP `202 Accepted` - Batch request was accepted but is still being processed. Please try again in some time.

      > HTTP `200 OK` - Batch request successfully processed. The response body contains all the batch results.



  ### Batch Response Model

  The returned data content is similar for async and sync requests. When
  downloading the results of an async batch request, if the batch has finished
  processing, the response body contains the batch response. This batch response
  contains a `summary` component that indicates the `totalRequests` that were
  part of the original batch request and `successfulRequests`i.e. queries which
  were executed successfully. The batch response also includes a `batchItems`
  array which contains a response for each and every query in the batch request.
  The `batchItems` will contain the results in the exact same order the original
  queries were sent in the batch request. Each item in `batchItems` contains
  `statusCode` and `response` fields. Each `response` in `batchItems` is of one
  of the following types:

    - [`RouteDirections`](https://docs.microsoft.com/rest/api/maps/route/getroutedirections#routedirections) - If the query completed successfully.

    - `Error` - If the query failed. The response will contain a `code` and a `message` in this case.


  Here's a sample Batch Response with 1 _successful_ and 1 _failed_ result:



  ```json

  {
      "summary": {
          "successfulRequests": 1,
          "totalRequests": 2
      },
      "batchItems": [
          {
              "statusCode": 200,
              "response": {
                  "routes": [
                      {
                          "summary": {
                              "lengthInMeters": 1758,
                              "travelTimeInSeconds": 387,
                              "trafficDelayInSeconds": 0,
                              "departureTime": "2018-07-17T00:49:56+00:00",
                              "arrivalTime": "2018-07-17T00:56:22+00:00"
                          },
                          "legs": [
                              {
                                  "summary": {
                                      "lengthInMeters": 1758,
                                      "travelTimeInSeconds": 387,
                                      "trafficDelayInSeconds": 0,
                                      "departureTime": "2018-07-17T00:49:56+00:00",
                                      "arrivalTime": "2018-07-17T00:56:22+00:00"
                                  },
                                  "points": [
                                      {
                                          "latitude": 47.62094,
                                          "longitude": -122.34892
                                      },
                                      {
                                          "latitude": 47.62094,
                                          "longitude": -122.3485
                                      },
                                      {
                                          "latitude": 47.62095,
                                          "longitude": -122.3476
                                      }
                                  ]
                              }
                          ],
                          "sections": [
                              {
                                  "startPointIndex": 0,
                                  "endPointIndex": 40,
                                  "sectionType": "TRAVEL_MODE",
                                  "travelMode": "bicycle"
                              }
                          ]
                      }
                  ]
              }
          },
          {
              "statusCode": 400,
              "response":
              {
                  "error":
                  {
                      "code": "400 BadRequest",
                      "message": "Bad request: one or more parameters were incorrectly specified or are mutually exclusive."
                  }
              }
          }
      ]
  }

  ```
fullName: RouteGetRouteDirectionsBatch202Response
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: body
    uid: '@azure-rest/maps-route.RouteGetRouteDirectionsBatch202Response.body'
    package: '@azure-rest/maps-route'
    summary: ''
    fullName: body
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'body: Record<string, unknown>'
      return:
        description: ''
        type: Record&lt;string, unknown&gt;
  - name: headers
    uid: '@azure-rest/maps-route.RouteGetRouteDirectionsBatch202Response.headers'
    package: '@azure-rest/maps-route'
    summary: ''
    fullName: headers
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'headers: RawHttpHeaders & RouteGetRouteDirectionsBatch202Headers'
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-rest-pipeline.RawHttpHeaders" /> & <xref
          uid="@azure-rest/maps-route.RouteGetRouteDirectionsBatch202Headers" />
  - name: status
    uid: '@azure-rest/maps-route.RouteGetRouteDirectionsBatch202Response.status'
    package: '@azure-rest/maps-route'
    summary: ''
    fullName: status
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'status: "202"'
      return:
        description: ''
        type: '"202"'
inheritedProperties:
  - name: request
    uid: '@azure-rest/maps-route.RouteGetRouteDirectionsBatch202Response.request'
    package: '@azure-rest/maps-route'
    summary: The request that generated this response.
    fullName: request
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'request: PipelineRequest'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.PipelineRequest" />
    inheritanceDescription: <b>Inherited From</b> HttpResponse.request
extends: <xref uid="@azure-rest/core-client.HttpResponse" />
