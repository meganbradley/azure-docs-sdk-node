### YamlMime:TSType
name: Clusters
uid: '@azure/arm-cosmosdbforpostgresql.Clusters'
package: '@azure/arm-cosmosdbforpostgresql'
summary: Interface representing a Clusters.
fullName: Clusters
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: beginCreate(string, string, Cluster, ClustersCreateOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginCreate'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Creates a new cluster with servers.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, clusterName: string,
        parameters: Cluster, options?: ClustersCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<Cluster>, Cluster>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdbforpostgresql.Cluster" />
          description: The required parameters for creating or updating a cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.Cluster" />&gt;, <xref
          uid="@azure/arm-cosmosdbforpostgresql.Cluster" />&gt;&gt;
  - name: beginCreateAndWait(string, string, Cluster, ClustersCreateOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginCreateAndWait'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Creates a new cluster with servers.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, clusterName:
        string, parameters: Cluster, options?: ClustersCreateOptionalParams):
        Promise<Cluster>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdbforpostgresql.Cluster" />
          description: The required parameters for creating or updating a cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdbforpostgresql.Cluster" />&gt;
  - name: beginDelete(string, string, ClustersDeleteOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginDelete'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Deletes a cluster together with servers in it.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, clusterName: string,
        options?: ClustersDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: beginDeleteAndWait(string, string, ClustersDeleteOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginDeleteAndWait'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Deletes a cluster together with servers in it.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, clusterName:
        string, options?: ClustersDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginPromoteReadReplica(string, string,
      ClustersPromoteReadReplicaOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginPromoteReadReplica'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Promotes read replica cluster to an independent read-write cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPromoteReadReplica(resourceGroupName: string, clusterName:
        string, options?: ClustersPromoteReadReplicaOptionalParams):
        Promise<SimplePollerLike<OperationState<ClustersPromoteReadReplicaHeaders>,
        ClustersPromoteReadReplicaHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersPromoteReadReplicaOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.ClustersPromoteReadReplicaHeaders"
          />&gt;, <xref
          uid="@azure/arm-cosmosdbforpostgresql.ClustersPromoteReadReplicaHeaders"
          />&gt;&gt;
  - name: >-
      beginPromoteReadReplicaAndWait(string, string,
      ClustersPromoteReadReplicaOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginPromoteReadReplicaAndWait'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Promotes read replica cluster to an independent read-write cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPromoteReadReplicaAndWait(resourceGroupName: string,
        clusterName: string, options?:
        ClustersPromoteReadReplicaOptionalParams):
        Promise<ClustersPromoteReadReplicaHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersPromoteReadReplicaOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.ClustersPromoteReadReplicaHeaders"
          />&gt;
  - name: beginRestart(string, string, ClustersRestartOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginRestart'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Restarts all nodes in the cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, clusterName: string,
        options?: ClustersRestartOptionalParams):
        Promise<SimplePollerLike<OperationState<ClustersRestartHeaders>,
        ClustersRestartHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersRestartOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.ClustersRestartHeaders" />&gt;,
          <xref uid="@azure/arm-cosmosdbforpostgresql.ClustersRestartHeaders"
          />&gt;&gt;
  - name: beginRestartAndWait(string, string, ClustersRestartOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginRestartAndWait'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Restarts all nodes in the cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRestartAndWait(resourceGroupName: string, clusterName:
        string, options?: ClustersRestartOptionalParams):
        Promise<ClustersRestartHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersRestartOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.ClustersRestartHeaders" />&gt;
  - name: beginStart(string, string, ClustersStartOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginStart'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Starts stopped compute on all cluster nodes.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, clusterName: string,
        options?: ClustersStartOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersStartOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: beginStartAndWait(string, string, ClustersStartOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginStartAndWait'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Starts stopped compute on all cluster nodes.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStartAndWait(resourceGroupName: string, clusterName:
        string, options?: ClustersStartOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersStartOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginStop(string, string, ClustersStopOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginStop'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Stops compute on all cluster nodes.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, clusterName: string,
        options?: ClustersStopOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersStopOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: beginStopAndWait(string, string, ClustersStopOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginStopAndWait'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Stops compute on all cluster nodes.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStopAndWait(resourceGroupName: string, clusterName:
        string, options?: ClustersStopOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersStopOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, ClusterForUpdate,
      ClustersUpdateOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginUpdate'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: >-
      Updates an existing cluster. The request body can contain one or several
      properties from the cluster

      definition.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, clusterName: string,
        parameters: ClusterForUpdate, options?: ClustersUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Cluster>, Cluster>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdbforpostgresql.ClusterForUpdate" />
          description: The parameters for updating a cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.Cluster" />&gt;, <xref
          uid="@azure/arm-cosmosdbforpostgresql.Cluster" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, ClusterForUpdate,
      ClustersUpdateOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.beginUpdateAndWait'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: >-
      Updates an existing cluster. The request body can contain one or several
      properties from the cluster

      definition.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, clusterName:
        string, parameters: ClusterForUpdate, options?:
        ClustersUpdateOptionalParams): Promise<Cluster>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdbforpostgresql.ClusterForUpdate" />
          description: The parameters for updating a cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdbforpostgresql.Cluster" />&gt;
  - name: >-
      checkNameAvailability(NameAvailabilityRequest,
      ClustersCheckNameAvailabilityOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.checkNameAvailability'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: >-
      Checks availability of a cluster name. Cluster names should be globally
      unique; at least 3

      characters and at most 40 characters long; they must only contain
      lowercase letters, numbers, and

      hyphens; and must not start or end with a hyphen.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(nameAvailabilityRequest:
        NameAvailabilityRequest, options?:
        ClustersCheckNameAvailabilityOptionalParams): Promise<NameAvailability>
      parameters:
        - id: nameAvailabilityRequest
          type: >-
            <xref uid="@azure/arm-cosmosdbforpostgresql.NameAvailabilityRequest"
            />
          description: The required parameters for checking if cluster name is available.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersCheckNameAvailabilityOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.NameAvailability" />&gt;
  - name: get(string, string, ClustersGetOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.get'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: >-
      Gets information about a cluster such as compute and storage configuration
      and cluster lifecycle

      metadata such as cluster creation date and time.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, clusterName: string, options?:
        ClustersGetOptionalParams): Promise<Cluster>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdbforpostgresql.Cluster" />&gt;
  - name: list(ClustersListOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.list'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Lists all clusters in a subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: ClustersListOptionalParams):
        PagedAsyncIterableIterator<Cluster, Cluster[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.Cluster" />, <xref
          uid="@azure/arm-cosmosdbforpostgresql.Cluster" />[], PageSettings&gt;
  - name: listByResourceGroup(string, ClustersListByResourceGroupOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Clusters.listByResourceGroup'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Lists all clusters in a resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        ClustersListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Cluster, Cluster[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.ClustersListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.Cluster" />, <xref
          uid="@azure/arm-cosmosdbforpostgresql.Cluster" />[], PageSettings&gt;
