### YamlMime:TSType
name: Roles
uid: '@azure/arm-cosmosdbforpostgresql.Roles'
package: '@azure/arm-cosmosdbforpostgresql'
summary: Interface representing a Roles.
fullName: Roles
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: beginCreate(string, string, string, Role, RolesCreateOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Roles.beginCreate'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Creates a new role or updates an existing role.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, clusterName: string,
        roleName: string, parameters: Role, options?:
        RolesCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<Role>, Role>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: roleName
          type: string
          description: The name of the cluster role.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdbforpostgresql.Role" />
          description: The required parameters for creating or updating a role.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.RolesCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.Role" />&gt;, <xref
          uid="@azure/arm-cosmosdbforpostgresql.Role" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, string, Role,
      RolesCreateOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Roles.beginCreateAndWait'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Creates a new role or updates an existing role.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, clusterName:
        string, roleName: string, parameters: Role, options?:
        RolesCreateOptionalParams): Promise<Role>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: roleName
          type: string
          description: The name of the cluster role.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdbforpostgresql.Role" />
          description: The required parameters for creating or updating a role.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.RolesCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdbforpostgresql.Role" />&gt;
  - name: beginDelete(string, string, string, RolesDeleteOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Roles.beginDelete'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Deletes a cluster role.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, clusterName: string,
        roleName: string, options?: RolesDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<RolesDeleteHeaders>,
        RolesDeleteHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: roleName
          type: string
          description: The name of the cluster role.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.RolesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.RolesDeleteHeaders" />&gt;,
          <xref uid="@azure/arm-cosmosdbforpostgresql.RolesDeleteHeaders"
          />&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, RolesDeleteOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Roles.beginDeleteAndWait'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Deletes a cluster role.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, clusterName:
        string, roleName: string, options?: RolesDeleteOptionalParams):
        Promise<RolesDeleteHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: roleName
          type: string
          description: The name of the cluster role.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.RolesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.RolesDeleteHeaders" />&gt;
  - name: get(string, string, string, RolesGetOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Roles.get'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: Gets information about a cluster role.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, clusterName: string, roleName:
        string, options?: RolesGetOptionalParams): Promise<Role>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: roleName
          type: string
          description: The name of the cluster role.
        - id: options
          type: >-
            <xref uid="@azure/arm-cosmosdbforpostgresql.RolesGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdbforpostgresql.Role" />&gt;
  - name: listByCluster(string, string, RolesListByClusterOptionalParams)
    uid: '@azure/arm-cosmosdbforpostgresql.Roles.listByCluster'
    package: '@azure/arm-cosmosdbforpostgresql'
    summary: List all the roles in a given cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByCluster(resourceGroupName: string, clusterName: string,
        options?: RolesListByClusterOptionalParams):
        PagedAsyncIterableIterator<Role, Role[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: The name of the cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdbforpostgresql.RolesListByClusterOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-cosmosdbforpostgresql.Role" />, <xref
          uid="@azure/arm-cosmosdbforpostgresql.Role" />[], PageSettings&gt;
