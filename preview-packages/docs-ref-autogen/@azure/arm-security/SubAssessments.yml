### YamlMime:TSType
name: SubAssessments
uid: '@azure/arm-security.SubAssessments'
package: '@azure/arm-security'
summary: Interface representing a SubAssessments.
fullName: SubAssessments
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: get(string, string, string, SubAssessmentsGetOptionalParams)
    uid: '@azure/arm-security.SubAssessments.get'
    package: '@azure/arm-security'
    summary: Get a security sub-assessment on your scanned resource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, assessmentName: string, subAssessmentName:
        string, options?: SubAssessmentsGetOptionalParams):
        Promise<SecuritySubAssessment>
      parameters:
        - id: scope
          type: string
          description: |-
            Scope of the query, can be subscription
                         (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
                         (/providers/Microsoft.Management/managementGroups/mgName).
        - id: assessmentName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: subAssessmentName
          type: string
          description: The Sub-Assessment Key - Unique key for the sub-assessment type
        - id: options
          type: <xref uid="@azure/arm-security.SubAssessmentsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-security.SecuritySubAssessment"
          />&gt;
  - name: list(string, string, SubAssessmentsListOptionalParams)
    uid: '@azure/arm-security.SubAssessments.list'
    package: '@azure/arm-security'
    summary: Get security sub-assessments on all your scanned resources inside a scope
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(scope: string, assessmentName: string, options?:
        SubAssessmentsListOptionalParams):
        PagedAsyncIterableIterator<SecuritySubAssessment,
        SecuritySubAssessment[], PageSettings>
      parameters:
        - id: scope
          type: string
          description: |-
            Scope of the query, can be subscription
                         (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
                         (/providers/Microsoft.Management/managementGroups/mgName).
        - id: assessmentName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type: <xref uid="@azure/arm-security.SubAssessmentsListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-security.SecuritySubAssessment" />, <xref
          uid="@azure/arm-security.SecuritySubAssessment" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listAll(string, SubAssessmentsListAllOptionalParams)
    uid: '@azure/arm-security.SubAssessments.listAll'
    package: '@azure/arm-security'
    summary: >-
      Get security sub-assessments on all your scanned resources inside a
      subscription scope
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAll(scope: string, options?:
        SubAssessmentsListAllOptionalParams):
        PagedAsyncIterableIterator<SecuritySubAssessment,
        SecuritySubAssessment[], PageSettings>
      parameters:
        - id: scope
          type: string
          description: |-
            Scope of the query, can be subscription
                         (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
                         (/providers/Microsoft.Management/managementGroups/mgName).
        - id: options
          type: >-
            <xref uid="@azure/arm-security.SubAssessmentsListAllOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-security.SecuritySubAssessment" />, <xref
          uid="@azure/arm-security.SecuritySubAssessment" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
