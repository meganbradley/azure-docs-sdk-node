### YamlMime:TSType
name: Assessments
uid: '@azure/arm-security.Assessments'
package: '@azure/arm-security'
summary: Interface representing a Assessments.
fullName: Assessments
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, SecurityAssessment,
      AssessmentsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-security.Assessments.createOrUpdate'
    package: '@azure/arm-security'
    summary: >-
      Create a security assessment on your resource. An assessment metadata that
      describes this assessment

      must be predefined with the same name before inserting the assessment
      result
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceId: string, assessmentName: string,
        assessment: SecurityAssessment, options?:
        AssessmentsCreateOrUpdateOptionalParams):
        Promise<SecurityAssessmentResponse>
      parameters:
        - id: resourceId
          type: string
          description: The identifier of the resource.
        - id: assessmentName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: assessment
          type: <xref uid="@azure/arm-security.SecurityAssessment" />
          description: Calculated assessment on a pre-defined assessment metadata
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.AssessmentsCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-security.SecurityAssessmentResponse"
          />&gt;
  - name: delete(string, string, AssessmentsDeleteOptionalParams)
    uid: '@azure/arm-security.Assessments.delete'
    package: '@azure/arm-security'
    summary: >-
      Delete a security assessment on your resource. An assessment metadata that
      describes this assessment

      must be predefined with the same name before inserting the assessment
      result
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceId: string, assessmentName: string, options?:
        AssessmentsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceId
          type: string
          description: The identifier of the resource.
        - id: assessmentName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type: <xref uid="@azure/arm-security.AssessmentsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, AssessmentsGetOptionalParams)
    uid: '@azure/arm-security.Assessments.get'
    package: '@azure/arm-security'
    summary: Get a security assessment on your scanned resource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceId: string, assessmentName: string, options?:
        AssessmentsGetOptionalParams): Promise<SecurityAssessmentResponse>
      parameters:
        - id: resourceId
          type: string
          description: The identifier of the resource.
        - id: assessmentName
          type: string
          description: The Assessment Key - Unique key for the assessment type
        - id: options
          type: <xref uid="@azure/arm-security.AssessmentsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-security.SecurityAssessmentResponse"
          />&gt;
  - name: list(string, AssessmentsListOptionalParams)
    uid: '@azure/arm-security.Assessments.list'
    package: '@azure/arm-security'
    summary: Get security assessments on all your scanned resources inside a scope
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(scope: string, options?: AssessmentsListOptionalParams):
        PagedAsyncIterableIterator<SecurityAssessmentResponse,
        SecurityAssessmentResponse[], PageSettings>
      parameters:
        - id: scope
          type: string
          description: |-
            Scope of the query, can be subscription
                         (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group
                         (/providers/Microsoft.Management/managementGroups/mgName).
        - id: options
          type: <xref uid="@azure/arm-security.AssessmentsListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-security.SecurityAssessmentResponse" />, <xref
          uid="@azure/arm-security.SecurityAssessmentResponse" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
