### YamlMime:TSType
name: GovernanceAssignments
uid: '@azure/arm-security.GovernanceAssignments'
package: '@azure/arm-security'
summary: Interface representing a GovernanceAssignments.
fullName: GovernanceAssignments
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, GovernanceAssignment,
      GovernanceAssignmentsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-security.GovernanceAssignments.createOrUpdate'
    package: '@azure/arm-security'
    summary: Creates or updates a governance assignment on the given subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(scope: string, assessmentName: string,
        assignmentKey: string, governanceAssignment: GovernanceAssignment,
        options?: GovernanceAssignmentsCreateOrUpdateOptionalParams):
        Promise<GovernanceAssignment>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the Governance assignments. Valid scopes are:
            subscription (format:
                         'subscriptions/{subscriptionId}'), or security connector (format:
                         'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
        - id: assessmentName
          type: string
          description: The Assessment Key - A unique key for the assessment type
        - id: assignmentKey
          type: string
          description: >-
            The governance assignment key - the assessment key of the required
            governance
                                 assignment
        - id: governanceAssignment
          type: <xref uid="@azure/arm-security.GovernanceAssignment" />
          description: Governance assignment over a subscription scope
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.GovernanceAssignmentsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-security.GovernanceAssignment" />&gt;
  - name: delete(string, string, string, GovernanceAssignmentsDeleteOptionalParams)
    uid: '@azure/arm-security.GovernanceAssignments.delete'
    package: '@azure/arm-security'
    summary: Delete a GovernanceAssignment over a given scope
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(scope: string, assessmentName: string, assignmentKey:
        string, options?: GovernanceAssignmentsDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the Governance assignments. Valid scopes are:
            subscription (format:
                         'subscriptions/{subscriptionId}'), or security connector (format:
                         'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
        - id: assessmentName
          type: string
          description: The Assessment Key - A unique key for the assessment type
        - id: assignmentKey
          type: string
          description: >-
            The governance assignment key - the assessment key of the required
            governance
                                 assignment
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.GovernanceAssignmentsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, GovernanceAssignmentsGetOptionalParams)
    uid: '@azure/arm-security.GovernanceAssignments.get'
    package: '@azure/arm-security'
    summary: >-
      Get a specific governanceAssignment for the requested scope by
      AssignmentKey
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, assessmentName: string, assignmentKey:
        string, options?: GovernanceAssignmentsGetOptionalParams):
        Promise<GovernanceAssignment>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the Governance assignments. Valid scopes are:
            subscription (format:
                         'subscriptions/{subscriptionId}'), or security connector (format:
                         'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
        - id: assessmentName
          type: string
          description: The Assessment Key - A unique key for the assessment type
        - id: assignmentKey
          type: string
          description: >-
            The governance assignment key - the assessment key of the required
            governance
                                 assignment
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.GovernanceAssignmentsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-security.GovernanceAssignment" />&gt;
  - name: list(string, string, GovernanceAssignmentsListOptionalParams)
    uid: '@azure/arm-security.GovernanceAssignments.list'
    package: '@azure/arm-security'
    summary: Get governance assignments on all of your resources inside a scope
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(scope: string, assessmentName: string, options?:
        GovernanceAssignmentsListOptionalParams):
        PagedAsyncIterableIterator<GovernanceAssignment, GovernanceAssignment[],
        PageSettings>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the Governance assignments. Valid scopes are:
            subscription (format:
                         'subscriptions/{subscriptionId}'), or security connector (format:
                         'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName})'
        - id: assessmentName
          type: string
          description: The Assessment Key - A unique key for the assessment type
        - id: options
          type: >-
            <xref
            uid="@azure/arm-security.GovernanceAssignmentsListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-security.GovernanceAssignment" />, <xref
          uid="@azure/arm-security.GovernanceAssignment" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
