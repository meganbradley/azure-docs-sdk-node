### YamlMime:TSType
name: Ledger
uid: '@azure/arm-confidentialledger.Ledger'
package: '@azure/arm-confidentialledger'
summary: Interface representing a Ledger.
fullName: Ledger
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, string, ConfidentialLedger,
      LedgerCreateOptionalParams)
    uid: '@azure/arm-confidentialledger.Ledger.beginCreate'
    package: '@azure/arm-confidentialledger'
    summary: Creates a  Confidential Ledger with the specified ledger parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, ledgerName: string,
        confidentialLedger: ConfidentialLedger, options?:
        LedgerCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<ConfidentialLedger>,
        ConfidentialLedger>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: ledgerName
          type: string
          description: Name of the Confidential Ledger
        - id: confidentialLedger
          type: <xref uid="@azure/arm-confidentialledger.ConfidentialLedger" />
          description: Confidential Ledger Create Request Body
        - id: options
          type: >-
            <xref uid="@azure/arm-confidentialledger.LedgerCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-confidentialledger.ConfidentialLedger" />&gt;, <xref
          uid="@azure/arm-confidentialledger.ConfidentialLedger" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, ConfidentialLedger,
      LedgerCreateOptionalParams)
    uid: '@azure/arm-confidentialledger.Ledger.beginCreateAndWait'
    package: '@azure/arm-confidentialledger'
    summary: Creates a  Confidential Ledger with the specified ledger parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, ledgerName:
        string, confidentialLedger: ConfidentialLedger, options?:
        LedgerCreateOptionalParams): Promise<ConfidentialLedger>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: ledgerName
          type: string
          description: Name of the Confidential Ledger
        - id: confidentialLedger
          type: <xref uid="@azure/arm-confidentialledger.ConfidentialLedger" />
          description: Confidential Ledger Create Request Body
        - id: options
          type: >-
            <xref uid="@azure/arm-confidentialledger.LedgerCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-confidentialledger.ConfidentialLedger" />&gt;
  - name: beginDelete(string, string, LedgerDeleteOptionalParams)
    uid: '@azure/arm-confidentialledger.Ledger.beginDelete'
    package: '@azure/arm-confidentialledger'
    summary: Deletes an existing Confidential Ledger.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, ledgerName: string,
        options?: LedgerDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: ledgerName
          type: string
          description: Name of the Confidential Ledger
        - id: options
          type: >-
            <xref uid="@azure/arm-confidentialledger.LedgerDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, LedgerDeleteOptionalParams)
    uid: '@azure/arm-confidentialledger.Ledger.beginDeleteAndWait'
    package: '@azure/arm-confidentialledger'
    summary: Deletes an existing Confidential Ledger.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, ledgerName:
        string, options?: LedgerDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: ledgerName
          type: string
          description: Name of the Confidential Ledger
        - id: options
          type: >-
            <xref uid="@azure/arm-confidentialledger.LedgerDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, ConfidentialLedger,
      LedgerUpdateOptionalParams)
    uid: '@azure/arm-confidentialledger.Ledger.beginUpdate'
    package: '@azure/arm-confidentialledger'
    summary: Updates properties of Confidential Ledger
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, ledgerName: string,
        confidentialLedger: ConfidentialLedger, options?:
        LedgerUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<ConfidentialLedger>,
        ConfidentialLedger>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: ledgerName
          type: string
          description: Name of the Confidential Ledger
        - id: confidentialLedger
          type: <xref uid="@azure/arm-confidentialledger.ConfidentialLedger" />
          description: Confidential Ledger request body for Updating Ledger
        - id: options
          type: >-
            <xref uid="@azure/arm-confidentialledger.LedgerUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-confidentialledger.ConfidentialLedger" />&gt;, <xref
          uid="@azure/arm-confidentialledger.ConfidentialLedger" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, ConfidentialLedger,
      LedgerUpdateOptionalParams)
    uid: '@azure/arm-confidentialledger.Ledger.beginUpdateAndWait'
    package: '@azure/arm-confidentialledger'
    summary: Updates properties of Confidential Ledger
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, ledgerName:
        string, confidentialLedger: ConfidentialLedger, options?:
        LedgerUpdateOptionalParams): Promise<ConfidentialLedger>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: ledgerName
          type: string
          description: Name of the Confidential Ledger
        - id: confidentialLedger
          type: <xref uid="@azure/arm-confidentialledger.ConfidentialLedger" />
          description: Confidential Ledger request body for Updating Ledger
        - id: options
          type: >-
            <xref uid="@azure/arm-confidentialledger.LedgerUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-confidentialledger.ConfidentialLedger" />&gt;
  - name: get(string, string, LedgerGetOptionalParams)
    uid: '@azure/arm-confidentialledger.Ledger.get'
    package: '@azure/arm-confidentialledger'
    summary: Retrieves the properties of a Confidential Ledger.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, ledgerName: string, options?:
        LedgerGetOptionalParams): Promise<ConfidentialLedger>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: ledgerName
          type: string
          description: Name of the Confidential Ledger
        - id: options
          type: <xref uid="@azure/arm-confidentialledger.LedgerGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-confidentialledger.ConfidentialLedger" />&gt;
  - name: listByResourceGroup(string, LedgerListByResourceGroupOptionalParams)
    uid: '@azure/arm-confidentialledger.Ledger.listByResourceGroup'
    package: '@azure/arm-confidentialledger'
    summary: Retrieves the properties of all Confidential Ledgers.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        LedgerListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<ConfidentialLedger, ConfidentialLedger[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-confidentialledger.LedgerListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-confidentialledger.ConfidentialLedger" />, <xref
          uid="@azure/arm-confidentialledger.ConfidentialLedger" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscription(LedgerListBySubscriptionOptionalParams)
    uid: '@azure/arm-confidentialledger.Ledger.listBySubscription'
    package: '@azure/arm-confidentialledger'
    summary: Retrieves the properties of all Confidential Ledgers.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        LedgerListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<ConfidentialLedger, ConfidentialLedger[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-confidentialledger.LedgerListBySubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-confidentialledger.ConfidentialLedger" />, <xref
          uid="@azure/arm-confidentialledger.ConfidentialLedger" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
