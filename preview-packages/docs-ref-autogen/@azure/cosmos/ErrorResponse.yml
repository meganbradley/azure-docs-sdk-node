### YamlMime:TSType
name: ErrorResponse
uid: '@azure/cosmos.ErrorResponse'
package: '@azure/cosmos'
summary: ''
fullName: ErrorResponse
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: ErrorResponse(string)
    uid: '@azure/cosmos.ErrorResponse.constructor'
    package: '@azure/cosmos'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new ErrorResponse(message?: string)'
      parameters:
        - id: message
          type: string
          description: ''
properties:
  - name: activityId
    uid: '@azure/cosmos.ErrorResponse.activityId'
    package: '@azure/cosmos'
    summary: ''
    fullName: activityId
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'activityId?: string'
      return:
        description: ''
        type: string
  - name: body
    uid: '@azure/cosmos.ErrorResponse.body'
    package: '@azure/cosmos'
    summary: ''
    fullName: body
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'body?: ErrorBody'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.ErrorBody" />
  - name: code
    uid: '@azure/cosmos.ErrorResponse.code'
    package: '@azure/cosmos'
    summary: ''
    fullName: code
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'code?: string | number'
      return:
        description: ''
        type: string | number
  - name: diagnostics
    uid: '@azure/cosmos.ErrorResponse.diagnostics'
    package: '@azure/cosmos'
    summary: ''
    fullName: diagnostics
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'diagnostics?: CosmosDiagnostics'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.CosmosDiagnostics" />
  - name: headers
    uid: '@azure/cosmos.ErrorResponse.headers'
    package: '@azure/cosmos'
    summary: ''
    fullName: headers
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'headers?: CosmosHeaders'
      return:
        description: ''
        type: <xref uid="@azure/cosmos.CosmosHeaders" />
  - name: retryAfterInMilliseconds
    uid: '@azure/cosmos.ErrorResponse.retryAfterInMilliseconds'
    package: '@azure/cosmos'
    summary: ''
    fullName: retryAfterInMilliseconds
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'retryAfterInMilliseconds?: number'
      return:
        description: ''
        type: number
  - name: retryAfterInMs
    uid: '@azure/cosmos.ErrorResponse.retryAfterInMs'
    package: '@azure/cosmos'
    summary: ''
    fullName: retryAfterInMs
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'retryAfterInMs?: number'
      return:
        description: ''
        type: number
  - name: substatus
    uid: '@azure/cosmos.ErrorResponse.substatus'
    package: '@azure/cosmos'
    summary: ''
    fullName: substatus
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'substatus?: number'
      return:
        description: ''
        type: number
inheritedProperties:
  - name: message
    uid: '@azure/cosmos.ErrorResponse.message'
    package: '@azure/cosmos'
    summary: ''
    fullName: message
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'message: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Error.message
  - name: name
    uid: '@azure/cosmos.ErrorResponse.name'
    package: '@azure/cosmos'
    summary: ''
    fullName: name
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'name: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Error.name
  - name: prepareStackTrace
    uid: '@azure/cosmos.ErrorResponse.prepareStackTrace'
    package: '@azure/cosmos'
    summary: |-
      Optional override for formatting stack traces

      See https://v8.dev/docs/stack-trace-api#customizing-stack-traces
    fullName: prepareStackTrace
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static prepareStackTrace?: (err: Error, stackTraces: CallSite[]) => any'
      return:
        description: ''
        type: '(err: Error, stackTraces: CallSite[]) =&gt; any'
    inheritanceDescription: <b>Inherited From</b> Error.prepareStackTrace
  - name: stack
    uid: '@azure/cosmos.ErrorResponse.stack'
    package: '@azure/cosmos'
    summary: ''
    fullName: stack
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'stack?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Error.stack
  - name: stackTraceLimit
    uid: '@azure/cosmos.ErrorResponse.stackTraceLimit'
    package: '@azure/cosmos'
    summary: ''
    fullName: stackTraceLimit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static stackTraceLimit: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Error.stackTraceLimit
inheritedMethods:
  - name: captureStackTrace(object, Function)
    uid: '@azure/cosmos.ErrorResponse.captureStackTrace'
    package: '@azure/cosmos'
    summary: Create .stack property on a target object
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function captureStackTrace(targetObject: object, constructorOpt?:
        Function)
      parameters:
        - id: targetObject
          type: object
          description: ''
        - id: constructorOpt
          type: Function
          description: ''
    inheritanceDescription: <b>Inherited From</b> Error.captureStackTrace
extends: Error
