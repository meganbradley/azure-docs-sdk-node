### YamlMime:TSType
name: AbortError
uid: '@azure/cosmos.AbortError'
package: '@azure/cosmos'
summary: |+
  This error is thrown when an asynchronous operation has been aborted.
  Check for this error by testing the `name` that the name property of the
  error matches `"AbortError"`.

  **Example**

  ```ts
  const controller = new AbortController();
  controller.abort();
  try {
    doAsyncWork(controller.signal)
  } catch (e) {
    if (e.name === 'AbortError') {
      // handle abort error here.
    }
  }
  ```

fullName: AbortError
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: AbortError(string)
    uid: '@azure/cosmos.AbortError.constructor'
    package: '@azure/cosmos'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new AbortError(message?: string)'
      parameters:
        - id: message
          type: string
          description: ''
inheritedProperties:
  - name: message
    uid: '@azure/cosmos.AbortError.message'
    package: '@azure/cosmos'
    summary: ''
    fullName: message
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'message: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Error.message
  - name: name
    uid: '@azure/cosmos.AbortError.name'
    package: '@azure/cosmos'
    summary: ''
    fullName: name
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'name: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Error.name
  - name: prepareStackTrace
    uid: '@azure/cosmos.AbortError.prepareStackTrace'
    package: '@azure/cosmos'
    summary: |-
      Optional override for formatting stack traces

      See https://v8.dev/docs/stack-trace-api#customizing-stack-traces
    fullName: prepareStackTrace
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static prepareStackTrace?: (err: Error, stackTraces: CallSite[]) => any'
      return:
        description: ''
        type: '(err: Error, stackTraces: CallSite[]) =&gt; any'
    inheritanceDescription: <b>Inherited From</b> Error.prepareStackTrace
  - name: stack
    uid: '@azure/cosmos.AbortError.stack'
    package: '@azure/cosmos'
    summary: ''
    fullName: stack
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'stack?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: <b>Inherited From</b> Error.stack
  - name: stackTraceLimit
    uid: '@azure/cosmos.AbortError.stackTraceLimit'
    package: '@azure/cosmos'
    summary: ''
    fullName: stackTraceLimit
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'static stackTraceLimit: number'
      return:
        description: ''
        type: number
    inheritanceDescription: <b>Inherited From</b> Error.stackTraceLimit
inheritedMethods:
  - name: captureStackTrace(object, Function)
    uid: '@azure/cosmos.AbortError.captureStackTrace'
    package: '@azure/cosmos'
    summary: Create .stack property on a target object
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function captureStackTrace(targetObject: object, constructorOpt?:
        Function)
      parameters:
        - id: targetObject
          type: object
          description: ''
        - id: constructorOpt
          type: Function
          description: ''
    inheritanceDescription: <b>Inherited From</b> Error.captureStackTrace
extends: Error
