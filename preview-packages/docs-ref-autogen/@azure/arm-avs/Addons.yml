### YamlMime:TSType
name: Addons
uid: '@azure/arm-avs.Addons'
package: '@azure/arm-avs'
summary: Interface representing a Addons.
fullName: Addons
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, Addon,
      AddonsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-avs.Addons.beginCreateOrUpdate'
    package: '@azure/arm-avs'
    summary: Create or update a addon in a private cloud
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        privateCloudName: string, addonName: string, addon: Addon, options?:
        AddonsCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Addon>, Addon>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: privateCloudName
          type: string
          description: The name of the private cloud.
        - id: addonName
          type: string
          description: Name of the addon for the private cloud
        - id: addon
          type: <xref uid="@azure/arm-avs.Addon" />
          description: A addon in the private cloud
        - id: options
          type: <xref uid="@azure/arm-avs.AddonsCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-avs.Addon" />&gt;, <xref uid="@azure/arm-avs.Addon"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, Addon,
      AddonsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-avs.Addons.beginCreateOrUpdateAndWait'
    package: '@azure/arm-avs'
    summary: Create or update a addon in a private cloud
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        privateCloudName: string, addonName: string, addon: Addon, options?:
        AddonsCreateOrUpdateOptionalParams): Promise<Addon>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: privateCloudName
          type: string
          description: The name of the private cloud.
        - id: addonName
          type: string
          description: Name of the addon for the private cloud
        - id: addon
          type: <xref uid="@azure/arm-avs.Addon" />
          description: A addon in the private cloud
        - id: options
          type: <xref uid="@azure/arm-avs.AddonsCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-avs.Addon" />&gt;
  - name: beginDelete(string, string, string, AddonsDeleteOptionalParams)
    uid: '@azure/arm-avs.Addons.beginDelete'
    package: '@azure/arm-avs'
    summary: Delete a addon in a private cloud
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, privateCloudName:
        string, addonName: string, options?: AddonsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: privateCloudName
          type: string
          description: Name of the private cloud
        - id: addonName
          type: string
          description: Name of the addon for the private cloud
        - id: options
          type: <xref uid="@azure/arm-avs.AddonsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, AddonsDeleteOptionalParams)
    uid: '@azure/arm-avs.Addons.beginDeleteAndWait'
    package: '@azure/arm-avs'
    summary: Delete a addon in a private cloud
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, privateCloudName:
        string, addonName: string, options?: AddonsDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: privateCloudName
          type: string
          description: Name of the private cloud
        - id: addonName
          type: string
          description: Name of the addon for the private cloud
        - id: options
          type: <xref uid="@azure/arm-avs.AddonsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, AddonsGetOptionalParams)
    uid: '@azure/arm-avs.Addons.get'
    package: '@azure/arm-avs'
    summary: Get an addon by name in a private cloud
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, privateCloudName: string,
        addonName: string, options?: AddonsGetOptionalParams): Promise<Addon>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: privateCloudName
          type: string
          description: Name of the private cloud
        - id: addonName
          type: string
          description: Name of the addon for the private cloud
        - id: options
          type: <xref uid="@azure/arm-avs.AddonsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-avs.Addon" />&gt;
  - name: list(string, string, AddonsListOptionalParams)
    uid: '@azure/arm-avs.Addons.list'
    package: '@azure/arm-avs'
    summary: List addons in a private cloud
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, privateCloudName: string,
        options?: AddonsListOptionalParams): PagedAsyncIterableIterator<Addon,
        Addon[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: privateCloudName
          type: string
          description: Name of the private cloud
        - id: options
          type: <xref uid="@azure/arm-avs.AddonsListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-avs.Addon" />,
          <xref uid="@azure/arm-avs.Addon" />[], PageSettings&gt;
