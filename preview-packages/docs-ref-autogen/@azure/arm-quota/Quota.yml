### YamlMime:TSType
name: Quota
uid: '@azure/arm-quota.Quota'
package: '@azure/arm-quota'
summary: Interface representing a Quota.
fullName: Quota
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, CurrentQuotaLimitBase,
      QuotaCreateOrUpdateOptionalParams)
    uid: '@azure/arm-quota.Quota.beginCreateOrUpdate'
    package: '@azure/arm-quota'
    summary: >-
      Create or update the quota limit for the specified resource with the
      requested value. To update the

      quota, follow these steps:

      1. Use the GET operation for quotas and usages to determine how much quota
      remains for the specific

      resource and to calculate the new quota limit. These steps are detailed in
      [this

      example](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670).

      2. Use this PUT operation to update the quota limit. Please check the URI
      in location header for the

      detailed status of the request.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceName: string, scope: string,
        createQuotaRequest: CurrentQuotaLimitBase, options?:
        QuotaCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<CurrentQuotaLimitBase>,
        CurrentQuotaLimitBase>>
      parameters:
        - id: resourceName
          type: string
          description: |-
            Resource name for a given resource provider. For example:
                                - SKU name for Microsoft.Compute
                                - SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices
                                 For Microsoft.Network PublicIPAddresses.
        - id: scope
          type: string
          description: |-
            The target Azure resource URI. For example,
                         `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
                         This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added
                         after `/quotas`, then it's the target Azure resource URI in the GET operation for the specific
                         resource.
        - id: createQuotaRequest
          type: <xref uid="@azure/arm-quota.CurrentQuotaLimitBase" />
          description: Quota request payload.
        - id: options
          type: <xref uid="@azure/arm-quota.QuotaCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-quota.CurrentQuotaLimitBase" />&gt;, <xref
          uid="@azure/arm-quota.CurrentQuotaLimitBase" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, CurrentQuotaLimitBase,
      QuotaCreateOrUpdateOptionalParams)
    uid: '@azure/arm-quota.Quota.beginCreateOrUpdateAndWait'
    package: '@azure/arm-quota'
    summary: >-
      Create or update the quota limit for the specified resource with the
      requested value. To update the

      quota, follow these steps:

      1. Use the GET operation for quotas and usages to determine how much quota
      remains for the specific

      resource and to calculate the new quota limit. These steps are detailed in
      [this

      example](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670).

      2. Use this PUT operation to update the quota limit. Please check the URI
      in location header for the

      detailed status of the request.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceName: string, scope: string,
        createQuotaRequest: CurrentQuotaLimitBase, options?:
        QuotaCreateOrUpdateOptionalParams): Promise<CurrentQuotaLimitBase>
      parameters:
        - id: resourceName
          type: string
          description: |-
            Resource name for a given resource provider. For example:
                                - SKU name for Microsoft.Compute
                                - SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices
                                 For Microsoft.Network PublicIPAddresses.
        - id: scope
          type: string
          description: |-
            The target Azure resource URI. For example,
                         `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
                         This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added
                         after `/quotas`, then it's the target Azure resource URI in the GET operation for the specific
                         resource.
        - id: createQuotaRequest
          type: <xref uid="@azure/arm-quota.CurrentQuotaLimitBase" />
          description: Quota request payload.
        - id: options
          type: <xref uid="@azure/arm-quota.QuotaCreateOrUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-quota.CurrentQuotaLimitBase" />&gt;
  - name: >-
      beginUpdate(string, string, CurrentQuotaLimitBase,
      QuotaUpdateOptionalParams)
    uid: '@azure/arm-quota.Quota.beginUpdate'
    package: '@azure/arm-quota'
    summary: >-
      Update the quota limit for a specific resource to the specified value:

      1. Use the Usages-GET and Quota-GET operations to determine the remaining
      quota for the specific

      resource and to calculate the new quota limit. These steps are detailed in
      [this

      example](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670).

      2. Use this PUT operation to update the quota limit. Please check the URI
      in location header for the

      detailed status of the request.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceName: string, scope: string,
        createQuotaRequest: CurrentQuotaLimitBase, options?:
        QuotaUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<CurrentQuotaLimitBase>,
        CurrentQuotaLimitBase>>
      parameters:
        - id: resourceName
          type: string
          description: |-
            Resource name for a given resource provider. For example:
                                - SKU name for Microsoft.Compute
                                - SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices
                                 For Microsoft.Network PublicIPAddresses.
        - id: scope
          type: string
          description: |-
            The target Azure resource URI. For example,
                         `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
                         This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added
                         after `/quotas`, then it's the target Azure resource URI in the GET operation for the specific
                         resource.
        - id: createQuotaRequest
          type: <xref uid="@azure/arm-quota.CurrentQuotaLimitBase" />
          description: Quota requests payload.
        - id: options
          type: <xref uid="@azure/arm-quota.QuotaUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-quota.CurrentQuotaLimitBase" />&gt;, <xref
          uid="@azure/arm-quota.CurrentQuotaLimitBase" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, CurrentQuotaLimitBase,
      QuotaUpdateOptionalParams)
    uid: '@azure/arm-quota.Quota.beginUpdateAndWait'
    package: '@azure/arm-quota'
    summary: >-
      Update the quota limit for a specific resource to the specified value:

      1. Use the Usages-GET and Quota-GET operations to determine the remaining
      quota for the specific

      resource and to calculate the new quota limit. These steps are detailed in
      [this

      example](https://techcommunity.microsoft.com/t5/azure-governance-and-management/using-the-new-quota-rest-api/ba-p/2183670).

      2. Use this PUT operation to update the quota limit. Please check the URI
      in location header for the

      detailed status of the request.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceName: string, scope: string,
        createQuotaRequest: CurrentQuotaLimitBase, options?:
        QuotaUpdateOptionalParams): Promise<CurrentQuotaLimitBase>
      parameters:
        - id: resourceName
          type: string
          description: |-
            Resource name for a given resource provider. For example:
                                - SKU name for Microsoft.Compute
                                - SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices
                                 For Microsoft.Network PublicIPAddresses.
        - id: scope
          type: string
          description: |-
            The target Azure resource URI. For example,
                         `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
                         This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added
                         after `/quotas`, then it's the target Azure resource URI in the GET operation for the specific
                         resource.
        - id: createQuotaRequest
          type: <xref uid="@azure/arm-quota.CurrentQuotaLimitBase" />
          description: Quota requests payload.
        - id: options
          type: <xref uid="@azure/arm-quota.QuotaUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-quota.CurrentQuotaLimitBase" />&gt;
  - name: get(string, string, QuotaGetOptionalParams)
    uid: '@azure/arm-quota.Quota.get'
    package: '@azure/arm-quota'
    summary: >-
      Get the quota limit of a resource. The response can be used to determine
      the remaining quota to

      calculate a new quota limit that can be submitted with a PUT request.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceName: string, scope: string, options?:
        QuotaGetOptionalParams): Promise<QuotaGetResponse>
      parameters:
        - id: resourceName
          type: string
          description: |-
            Resource name for a given resource provider. For example:
                                - SKU name for Microsoft.Compute
                                - SKU or TotalLowPriorityCores for Microsoft.MachineLearningServices
                                 For Microsoft.Network PublicIPAddresses.
        - id: scope
          type: string
          description: |-
            The target Azure resource URI. For example,
                         `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
                         This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added
                         after `/quotas`, then it's the target Azure resource URI in the GET operation for the specific
                         resource.
        - id: options
          type: <xref uid="@azure/arm-quota.QuotaGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-quota.QuotaGetResponse" />&gt;
  - name: list(string, QuotaListOptionalParams)
    uid: '@azure/arm-quota.Quota.list'
    package: '@azure/arm-quota'
    summary: >-
      Get a list of current quota limits of all resources for the specified
      scope. The response from this

      GET operation can be leveraged to submit requests to update a quota.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(scope: string, options?: QuotaListOptionalParams):
        PagedAsyncIterableIterator<CurrentQuotaLimitBase,
        CurrentQuotaLimitBase[], PageSettings>
      parameters:
        - id: scope
          type: string
          description: |-
            The target Azure resource URI. For example,
                         `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/qms-test/providers/Microsoft.Batch/batchAccounts/testAccount/`.
                         This is the target Azure resource URI for the List GET operation. If a `{resourceName}` is added
                         after `/quotas`, then it's the target Azure resource URI in the GET operation for the specific
                         resource.
        - id: options
          type: <xref uid="@azure/arm-quota.QuotaListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-quota.CurrentQuotaLimitBase" />, <xref
          uid="@azure/arm-quota.CurrentQuotaLimitBase" />[], PageSettings&gt;
