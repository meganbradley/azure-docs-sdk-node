### YamlMime:TSType
name: GroupQuotaLimitsRequest
uid: '@azure/arm-quota.GroupQuotaLimitsRequest'
package: '@azure/arm-quota'
summary: Interface representing a GroupQuotaLimitsRequest.
fullName: GroupQuotaLimitsRequest
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, string,
      GroupQuotaLimitsRequestCreateOrUpdateOptionalParams)
    uid: '@azure/arm-quota.GroupQuotaLimitsRequest.beginCreateOrUpdate'
    package: '@azure/arm-quota'
    summary: >-
      Put the GroupQuota requests for a specific
      ResourceProvider/Location/Resource. the location and

      resourceName ("name": {"value" : "resourceName") properties are specified
      in the request body. Only

      1 resource quota can be requested.

      Use the polling API - OperationsStatus URI specified in
      Azure-AsyncOperation header field, with

      retry-after duration in seconds to check the intermediate status. This API
      provides the finals

      status with the request details and status.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(managementGroupId: string, groupQuotaName:
        string, resourceProviderName: string, resourceName: string, options?:
        GroupQuotaLimitsRequestCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<SubmittedResourceRequestStatus>,
        SubmittedResourceRequestStatus>>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: resourceProviderName
          type: string
          description: >-
            The resource provider name, such as - Microsoft.Compute. Currently
            only
                                        Microsoft.Compute resource provider supports this API.
        - id: resourceName
          type: string
          description: Resource name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-quota.GroupQuotaLimitsRequestCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-quota.SubmittedResourceRequestStatus" />&gt;, <xref
          uid="@azure/arm-quota.SubmittedResourceRequestStatus" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, string,
      GroupQuotaLimitsRequestCreateOrUpdateOptionalParams)
    uid: '@azure/arm-quota.GroupQuotaLimitsRequest.beginCreateOrUpdateAndWait'
    package: '@azure/arm-quota'
    summary: >-
      Put the GroupQuota requests for a specific
      ResourceProvider/Location/Resource. the location and

      resourceName ("name": {"value" : "resourceName") properties are specified
      in the request body. Only

      1 resource quota can be requested.

      Use the polling API - OperationsStatus URI specified in
      Azure-AsyncOperation header field, with

      retry-after duration in seconds to check the intermediate status. This API
      provides the finals

      status with the request details and status.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(managementGroupId: string,
        groupQuotaName: string, resourceProviderName: string, resourceName:
        string, options?: GroupQuotaLimitsRequestCreateOrUpdateOptionalParams):
        Promise<SubmittedResourceRequestStatus>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: resourceProviderName
          type: string
          description: >-
            The resource provider name, such as - Microsoft.Compute. Currently
            only
                                        Microsoft.Compute resource provider supports this API.
        - id: resourceName
          type: string
          description: Resource name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-quota.GroupQuotaLimitsRequestCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-quota.SubmittedResourceRequestStatus"
          />&gt;
  - name: >-
      beginUpdate(string, string, string, string,
      GroupQuotaLimitsRequestUpdateOptionalParams)
    uid: '@azure/arm-quota.GroupQuotaLimitsRequest.beginUpdate'
    package: '@azure/arm-quota'
    summary: >-
      Create the GroupQuota requests for a specific
      ResourceProvider/Location/Resource. the location and

      resourceName properties are specified in the request body. Only 1 resource
      quota can be requested.

      Please note that patch request creates a new groupQuota request.

      Use the polling API - OperationsStatus URI specified in
      Azure-AsyncOperation header field, with

      retry-after duration in seconds to check the intermediate status. This API
      provides the finals

      status with the request details and status.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(managementGroupId: string, groupQuotaName: string,
        resourceProviderName: string, resourceName: string, options?:
        GroupQuotaLimitsRequestUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<SubmittedResourceRequestStatus>,
        SubmittedResourceRequestStatus>>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: resourceProviderName
          type: string
          description: >-
            The resource provider name, such as - Microsoft.Compute. Currently
            only
                                        Microsoft.Compute resource provider supports this API.
        - id: resourceName
          type: string
          description: Resource name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-quota.GroupQuotaLimitsRequestUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-quota.SubmittedResourceRequestStatus" />&gt;, <xref
          uid="@azure/arm-quota.SubmittedResourceRequestStatus" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, string,
      GroupQuotaLimitsRequestUpdateOptionalParams)
    uid: '@azure/arm-quota.GroupQuotaLimitsRequest.beginUpdateAndWait'
    package: '@azure/arm-quota'
    summary: >-
      Create the GroupQuota requests for a specific
      ResourceProvider/Location/Resource. the location and

      resourceName properties are specified in the request body. Only 1 resource
      quota can be requested.

      Please note that patch request creates a new groupQuota request.

      Use the polling API - OperationsStatus URI specified in
      Azure-AsyncOperation header field, with

      retry-after duration in seconds to check the intermediate status. This API
      provides the finals

      status with the request details and status.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(managementGroupId: string, groupQuotaName:
        string, resourceProviderName: string, resourceName: string, options?:
        GroupQuotaLimitsRequestUpdateOptionalParams):
        Promise<SubmittedResourceRequestStatus>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: resourceProviderName
          type: string
          description: >-
            The resource provider name, such as - Microsoft.Compute. Currently
            only
                                        Microsoft.Compute resource provider supports this API.
        - id: resourceName
          type: string
          description: Resource name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-quota.GroupQuotaLimitsRequestUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-quota.SubmittedResourceRequestStatus"
          />&gt;
  - name: get(string, string, string, GroupQuotaLimitsRequestGetOptionalParams)
    uid: '@azure/arm-quota.GroupQuotaLimitsRequest.get'
    package: '@azure/arm-quota'
    summary: Get API to check the status of a GroupQuota request by requestId.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(managementGroupId: string, groupQuotaName: string,
        requestId: string, options?: GroupQuotaLimitsRequestGetOptionalParams):
        Promise<SubmittedResourceRequestStatus>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: requestId
          type: string
          description: Request Id.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-quota.GroupQuotaLimitsRequestGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-quota.SubmittedResourceRequestStatus"
          />&gt;
  - name: >-
      list(string, string, string, string,
      GroupQuotaLimitsRequestListOptionalParams)
    uid: '@azure/arm-quota.GroupQuotaLimitsRequest.list'
    package: '@azure/arm-quota'
    summary: Get API to check the status of a GroupQuota request by requestId.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(managementGroupId: string, groupQuotaName: string,
        resourceProviderName: string, filter: string, options?:
        GroupQuotaLimitsRequestListOptionalParams):
        PagedAsyncIterableIterator<SubmittedResourceRequestStatus,
        SubmittedResourceRequestStatus[], PageSettings>
      parameters:
        - id: managementGroupId
          type: string
          description: Management Group Id.
        - id: groupQuotaName
          type: string
          description: >-
            The GroupQuota name. The name should be unique for the provided
            context
                                  tenantId/MgId.
        - id: resourceProviderName
          type: string
          description: >-
            The resource provider name, such as - Microsoft.Compute. Currently
            only
                                        Microsoft.Compute resource provider supports this API.
        - id: filter
          type: string
          description: |-
            | Field | Supported operators
                          |---------------------|------------------------

                           location eq {location} and resource eq {resourceName}
                           Example: $filter=location eq eastus and resourceName eq cores
        - id: options
          type: >-
            <xref
            uid="@azure/arm-quota.GroupQuotaLimitsRequestListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-quota.SubmittedResourceRequestStatus" />, <xref
          uid="@azure/arm-quota.SubmittedResourceRequestStatus" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
