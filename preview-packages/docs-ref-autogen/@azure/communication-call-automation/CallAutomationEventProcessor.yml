### YamlMime:TSType
name: CallAutomationEventProcessor
uid: '@azure/communication-call-automation.CallAutomationEventProcessor'
package: '@azure/communication-call-automation'
summary: Call Automation's EventProcessor for incoming events for ease of use.
fullName: CallAutomationEventProcessor
remarks: ''
isDeprecated: false
type: class
methods:
  - name: >-
      attachOngoingEventProcessor(string, "AddParticipantFailed" |
      "AddParticipantSucceeded" | "RemoveParticipantSucceeded" |
      "RemoveParticipantFailed" | "CallConnected" | "CallDisconnected" |
      "CallTransferAccepted" | "CallTransferFailed" | "ParticipantsUpdated" |
      "RecordingStateChanged" | "TeamsComplianceRecordingStateChanged" |
      "TeamsRecordingStateChanged" | "PlayCompleted" | "PlayFailed" |
      "PlayCanceled" | "RecognizeCompleted" | "RecognizeCanceled" |
      "RecognizeFailed" | "ContinuousDtmfRecognitionToneReceived" |
      "ContinuousDtmfRecognitionToneFailed" | "ContinuousDtmfRecognitionStopped"
      | "SendDtmfTonesCompleted" | "SendDtmfTonesFailed" |
      "CancelAddParticipantSucceeded" | "CancelAddParticipantFailed" |
      "TranscriptionStarted" | "TranscriptionStopped" | "TranscriptionUpdated" |
      "TranscriptionFailed", (event: CallAutomationEvent) => Promise<void>)
    uid: >-
      @azure/communication-call-automation.CallAutomationEventProcessor.attachOngoingEventProcessor
    package: '@azure/communication-call-automation'
    summary: Attach Ongoing EventProcessor for specific event for a call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function attachOngoingEventProcessor(callConnectionId: string,
        eventTypeKind: "AddParticipantFailed" | "AddParticipantSucceeded" |
        "RemoveParticipantSucceeded" | "RemoveParticipantFailed" |
        "CallConnected" | "CallDisconnected" | "CallTransferAccepted" |
        "CallTransferFailed" | "ParticipantsUpdated" | "RecordingStateChanged" |
        "TeamsComplianceRecordingStateChanged" | "TeamsRecordingStateChanged" |
        "PlayCompleted" | "PlayFailed" | "PlayCanceled" | "RecognizeCompleted" |
        "RecognizeCanceled" | "RecognizeFailed" |
        "ContinuousDtmfRecognitionToneReceived" |
        "ContinuousDtmfRecognitionToneFailed" |
        "ContinuousDtmfRecognitionStopped" | "SendDtmfTonesCompleted" |
        "SendDtmfTonesFailed" | "CancelAddParticipantSucceeded" |
        "CancelAddParticipantFailed" | "TranscriptionStarted" |
        "TranscriptionStopped" | "TranscriptionUpdated" | "TranscriptionFailed",
        eventProcessor: (event: CallAutomationEvent) => Promise<void>):
        Promise<void>
      parameters:
        - id: callConnectionId
          type: string
          description: CallConnectionId of the call.
        - id: eventTypeKind
          type: >-
            "AddParticipantFailed" | "AddParticipantSucceeded" |
            "RemoveParticipantSucceeded" | "RemoveParticipantFailed" |
            "CallConnected" | "CallDisconnected" | "CallTransferAccepted" |
            "CallTransferFailed" | "ParticipantsUpdated" |
            "RecordingStateChanged" | "TeamsComplianceRecordingStateChanged" |
            "TeamsRecordingStateChanged" | "PlayCompleted" | "PlayFailed" |
            "PlayCanceled" | "RecognizeCompleted" | "RecognizeCanceled" |
            "RecognizeFailed" | "ContinuousDtmfRecognitionToneReceived" |
            "ContinuousDtmfRecognitionToneFailed" |
            "ContinuousDtmfRecognitionStopped" | "SendDtmfTonesCompleted" |
            "SendDtmfTonesFailed" | "CancelAddParticipantSucceeded" |
            "CancelAddParticipantFailed" | "TranscriptionStarted" |
            "TranscriptionStopped" | "TranscriptionUpdated" |
            "TranscriptionFailed"
          description: Matching event.
        - id: eventProcessor
          type: '(event: CallAutomationEvent) =&gt; Promise&lt;void&gt;'
          description: Method that will execute once the matching event arrives.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      detachOngoingEventProcessor(string, "AddParticipantFailed" |
      "AddParticipantSucceeded" | "RemoveParticipantSucceeded" |
      "RemoveParticipantFailed" | "CallConnected" | "CallDisconnected" |
      "CallTransferAccepted" | "CallTransferFailed" | "ParticipantsUpdated" |
      "RecordingStateChanged" | "TeamsComplianceRecordingStateChanged" |
      "TeamsRecordingStateChanged" | "PlayCompleted" | "PlayFailed" |
      "PlayCanceled" | "RecognizeCompleted" | "RecognizeCanceled" |
      "RecognizeFailed" | "ContinuousDtmfRecognitionToneReceived" |
      "ContinuousDtmfRecognitionToneFailed" | "ContinuousDtmfRecognitionStopped"
      | "SendDtmfTonesCompleted" | "SendDtmfTonesFailed" |
      "CancelAddParticipantSucceeded" | "CancelAddParticipantFailed" |
      "TranscriptionStarted" | "TranscriptionStopped" | "TranscriptionUpdated" |
      "TranscriptionFailed")
    uid: >-
      @azure/communication-call-automation.CallAutomationEventProcessor.detachOngoingEventProcessor
    package: '@azure/communication-call-automation'
    summary: Detach Ongoing EventProcessor for specific event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function detachOngoingEventProcessor(callConnectionId: string,
        eventTypeKind: "AddParticipantFailed" | "AddParticipantSucceeded" |
        "RemoveParticipantSucceeded" | "RemoveParticipantFailed" |
        "CallConnected" | "CallDisconnected" | "CallTransferAccepted" |
        "CallTransferFailed" | "ParticipantsUpdated" | "RecordingStateChanged" |
        "TeamsComplianceRecordingStateChanged" | "TeamsRecordingStateChanged" |
        "PlayCompleted" | "PlayFailed" | "PlayCanceled" | "RecognizeCompleted" |
        "RecognizeCanceled" | "RecognizeFailed" |
        "ContinuousDtmfRecognitionToneReceived" |
        "ContinuousDtmfRecognitionToneFailed" |
        "ContinuousDtmfRecognitionStopped" | "SendDtmfTonesCompleted" |
        "SendDtmfTonesFailed" | "CancelAddParticipantSucceeded" |
        "CancelAddParticipantFailed" | "TranscriptionStarted" |
        "TranscriptionStopped" | "TranscriptionUpdated" |
        "TranscriptionFailed"): Promise<void>
      parameters:
        - id: callConnectionId
          type: string
          description: CallConnectionId of the call.
        - id: eventTypeKind
          type: >-
            "AddParticipantFailed" | "AddParticipantSucceeded" |
            "RemoveParticipantSucceeded" | "RemoveParticipantFailed" |
            "CallConnected" | "CallDisconnected" | "CallTransferAccepted" |
            "CallTransferFailed" | "ParticipantsUpdated" |
            "RecordingStateChanged" | "TeamsComplianceRecordingStateChanged" |
            "TeamsRecordingStateChanged" | "PlayCompleted" | "PlayFailed" |
            "PlayCanceled" | "RecognizeCompleted" | "RecognizeCanceled" |
            "RecognizeFailed" | "ContinuousDtmfRecognitionToneReceived" |
            "ContinuousDtmfRecognitionToneFailed" |
            "ContinuousDtmfRecognitionStopped" | "SendDtmfTonesCompleted" |
            "SendDtmfTonesFailed" | "CancelAddParticipantSucceeded" |
            "CancelAddParticipantFailed" | "TranscriptionStarted" |
            "TranscriptionStopped" | "TranscriptionUpdated" |
            "TranscriptionFailed"
          description: Matching event.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: processEvents(string | Record<string, unknown> | CallAutomationEvent)
    uid: >-
      @azure/communication-call-automation.CallAutomationEventProcessor.processEvents
    package: '@azure/communication-call-automation'
    summary: >-
      Process incoming events. Pass incoming events to get it processed to have
      other method like WaitForEventProcessor to function.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function processEvents(event: string | Record<string, unknown> |
        CallAutomationEvent)
      parameters:
        - id: event
          type: >-
            string | Record&lt;string, unknown&gt; | <xref
            uid="@azure/communication-call-automation.CallAutomationEvent" />
          description: Incoming CloudEvent object.
  - name: >-
      waitForEventProcessor((event: CallAutomationEvent) => boolean,
      AbortSignalLike, number)
    uid: >-
      @azure/communication-call-automation.CallAutomationEventProcessor.waitForEventProcessor
    package: '@azure/communication-call-automation'
    summary: >-
      Wait for matching incoming event. This is blocking Call. Returns the
      CallAutomationEvent once it arrives in ProcessEvent method.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function waitForEventProcessor(predicate: (event: CallAutomationEvent)
        => boolean, abortSignal?: AbortSignalLike, timeoutInMs?: number):
        Promise<CallAutomationEvent>
      parameters:
        - id: predicate
          type: '(event: CallAutomationEvent) =&gt; boolean'
          description: Conditional Predicate for waiting on event.
        - id: abortSignal
          type: AbortSignalLike
          description: Abort signal to abort the operation.
        - id: timeoutInMs
          type: number
          description: maximum timeout in milliseconds for the operation.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-call-automation.CallAutomationEvent" />&gt;
