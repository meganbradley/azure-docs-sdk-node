### YamlMime:TSType
name: SchemaRegistry
uid: '@azure/arm-eventhub.SchemaRegistry'
package: '@azure/arm-eventhub'
summary: Interface representing a SchemaRegistry.
fullName: SchemaRegistry
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, SchemaGroup,
      SchemaRegistryCreateOrUpdateOptionalParams)
    uid: '@azure/arm-eventhub.SchemaRegistry.createOrUpdate'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, namespaceName:
        string, schemaGroupName: string, parameters: SchemaGroup, options?:
        SchemaRegistryCreateOrUpdateOptionalParams): Promise<SchemaGroup>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: schemaGroupName
          type: string
          description: The Schema Group name
        - id: parameters
          type: <xref uid="@azure/arm-eventhub.SchemaGroup" />
          description: Parameters supplied to create an Event Hub resource.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventhub.SchemaRegistryCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventhub.SchemaGroup" />&gt;
  - name: delete(string, string, string, SchemaRegistryDeleteOptionalParams)
    uid: '@azure/arm-eventhub.SchemaRegistry.delete'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, namespaceName: string,
        schemaGroupName: string, options?: SchemaRegistryDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: schemaGroupName
          type: string
          description: The Schema Group name
        - id: options
          type: >-
            <xref uid="@azure/arm-eventhub.SchemaRegistryDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, SchemaRegistryGetOptionalParams)
    uid: '@azure/arm-eventhub.SchemaRegistry.get'
    package: '@azure/arm-eventhub'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, namespaceName: string,
        schemaGroupName: string, options?: SchemaRegistryGetOptionalParams):
        Promise<SchemaGroup>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: schemaGroupName
          type: string
          description: The Schema Group name
        - id: options
          type: <xref uid="@azure/arm-eventhub.SchemaRegistryGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventhub.SchemaGroup" />&gt;
  - name: >-
      listByNamespace(string, string,
      SchemaRegistryListByNamespaceOptionalParams)
    uid: '@azure/arm-eventhub.SchemaRegistry.listByNamespace'
    package: '@azure/arm-eventhub'
    summary: Gets all the Schema Groups in a Namespace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByNamespace(resourceGroupName: string, namespaceName:
        string, options?: SchemaRegistryListByNamespaceOptionalParams):
        PagedAsyncIterableIterator<SchemaGroup, SchemaGroup[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group within the azure subscription.
        - id: namespaceName
          type: string
          description: The Namespace name
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventhub.SchemaRegistryListByNamespaceOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-eventhub.SchemaGroup" />, <xref
          uid="@azure/arm-eventhub.SchemaGroup" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
