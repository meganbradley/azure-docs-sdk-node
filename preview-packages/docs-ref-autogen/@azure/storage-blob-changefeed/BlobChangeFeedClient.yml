### YamlMime:TSType
name: BlobChangeFeedClient
uid: '@azure/storage-blob-changefeed.BlobChangeFeedClient'
package: '@azure/storage-blob-changefeed'
summary: >-
  BlobChangeFeedClient.


  See
  https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-change-feed?tabs=azure-portal
fullName: BlobChangeFeedClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: BlobChangeFeedClient(string, Pipeline)
    uid: '@azure/storage-blob-changefeed.BlobChangeFeedClient.constructor_1'
    package: '@azure/storage-blob-changefeed'
    summary: Creates an instance of BlobChangeFeedClient.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new BlobChangeFeedClient(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type: string
          description: |-
            A Client string pointing to Azure Storage blob service, such as
                                "https://myaccount.blob.core.windows.net". You can append a SAS
                                if using AnonymousCredential, such as "https://myaccount.blob.core.windows.net?sasString".
        - id: pipeline
          type: <xref uid="@azure/storage-blob.Pipeline" />
          description: |-
            Call newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
  - name: >-
      BlobChangeFeedClient(string, StorageSharedKeyCredential |
      AnonymousCredential | TokenCredential, StoragePipelineOptions,
      BlobChangeFeedClientOptions)
    uid: '@azure/storage-blob-changefeed.BlobChangeFeedClient.constructor'
    package: '@azure/storage-blob-changefeed'
    summary: Creates an instance of BlobChangeFeedClient.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new BlobChangeFeedClient(url: string, credential?:
        StorageSharedKeyCredential | AnonymousCredential | TokenCredential,
        options?: StoragePipelineOptions, changeFeedClientOptions?:
        BlobChangeFeedClientOptions)
      parameters:
        - id: url
          type: string
          description: |-
            A Client string pointing to Azure Storage blob service, such as
                                "https://myaccount.blob.core.windows.net". You can append a SAS
                                if using AnonymousCredential, such as "https://myaccount.blob.core.windows.net?sasString".
        - id: credential
          type: >-
            <xref uid="@azure/storage-blob.StorageSharedKeyCredential" /> |
            <xref uid="@azure/storage-blob.AnonymousCredential" /> | <xref
            uid="@azure/core-auth.TokenCredential" />
          description: >-
            Such as AnonymousCredential, StorageSharedKeyCredential or any
            credential from the `@azure/identity` package to authenticate
            requests to the service. You can also provide an object that
            implements the TokenCredential interface. If not specified,
            AnonymousCredential is used.
        - id: options
          type: <xref uid="@azure/storage-blob.StoragePipelineOptions" />
          description: >-
            Optional. Options to configure the HTTP pipeline.


            Example using DefaultAzureCredential from `@azure/identity`:


            ```js

            const account = "<storage account name>";


            const defaultAzureCredential = new DefaultAzureCredential();


            const blobChangeFeedClient = new BlobChangeFeedClient(
              `https://${account}.blob.core.windows.net`,
              defaultAzureCredential
            );

            ```


            Example using an account name/key:


            ```js

            const account = "<storage account name>"

            const sharedKeyCredential = new StorageSharedKeyCredential(account,
            "<account key>");


            const blobChangeFeedClient = new BlobChangeFeedClient(
              `https://${account}.blob.core.windows.net`,
              sharedKeyCredential
            );

            ```
        - id: changeFeedClientOptions
          type: >-
            <xref
            uid="@azure/storage-blob-changefeed.BlobChangeFeedClientOptions" />
          description: ''
methods:
  - name: >-
      fromConnectionString(string, StoragePipelineOptions,
      BlobChangeFeedClientOptions)
    uid: '@azure/storage-blob-changefeed.BlobChangeFeedClient.fromConnectionString'
    package: '@azure/storage-blob-changefeed'
    summary: Creates an instance of BlobChangeFeedClient from connection string.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        static function fromConnectionString(connectionString: string, options?:
        StoragePipelineOptions, changeFeedClientOptions?:
        BlobChangeFeedClientOptions): BlobChangeFeedClient
      parameters:
        - id: connectionString
          type: string
          description: >-
            Account connection string or a SAS connection string of an Azure
            storage account.
                                             [ Note - Account connection string can only be used in NODE.JS runtime. ]
                                             Account connection string example -
                                             `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`
                                             SAS connection string example -
                                             `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`
        - id: options
          type: <xref uid="@azure/storage-blob.StoragePipelineOptions" />
          description: Optional. Options to configure the HTTP pipeline.
        - id: changeFeedClientOptions
          type: >-
            <xref
            uid="@azure/storage-blob-changefeed.BlobChangeFeedClientOptions" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/storage-blob-changefeed.BlobChangeFeedClient" />
  - name: listChanges(BlobChangeFeedListChangesOptions)
    uid: '@azure/storage-blob-changefeed.BlobChangeFeedClient.listChanges'
    package: '@azure/storage-blob-changefeed'
    summary: >-
      Returns an async iterable iterator to list all the change feed events

      in the specified account.


      .byPage() returns an async iterable iterator to list the change feed
      events in pages.


      Example using `for await` syntax:


      ```js

      let i = 1;

      for await (const event of blobChangeFeedClient.listChanges()) {
        console.log(`Event ${i++}, type: ${event.eventType}`);
      }

      ```


      Example using `iter.next()`:


      ```js

      let i = 1;

      const iter = blobChangeFeedClient.listChanges();

      let eventItem = await iter.next();

      while (!eventItem.done) {
        console.log(`Event ${i++}, type: ${eventItem.eventType}`);
        eventItem = await iter.next();
      }

      ```


      Example using `byPage()`:


      ```js

      // passing optional maxPageSize in the page settings

      let i = 1;

      for await (const eventPage of blobChangeFeedClient.listChanges().byPage({
      maxPageSize: 20 })) {
        if (eventPage.events) {
          for (const event of eventPage.events) {
            console.log(`Event ${i++}, type: ${event.eventType}`);
          }
        }
      }

      ```


      Example using paging with a marker:


      ```js

      let i = 1;

      let iterator = blobChangeFeedClient.listChanges().byPage({ maxPageSize: 2
      });

      let eventPage = (await iterator.next()).value;


      if (eventPage.events) {
        for (const container of eventPage.events) {
          console.log(`Event ${i++}, type: ${event.eventType}`);
        }
      }


      // Gets next marker

      let marker = eventPage.continuationToken;

      // Passing next marker as continuationToken

      iterator = blobChangeFeedClient
        .listChanges()
        .byPage({ continuationToken: marker, maxPageSize: 10 });
      eventPage = (await iterator.next()).value;


      if (eventPage.events) {
        for (const container of eventPage.events) {
           console.log(`Event ${i++}, type: ${event.eventType}`);
        }
      }

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listChanges(options?: BlobChangeFeedListChangesOptions):
        PagedAsyncIterableIterator<BlobChangeFeedEvent, BlobChangeFeedEventPage,
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/storage-blob-changefeed.BlobChangeFeedListChangesOptions"
            />
          description: Options to list change feed events.
      return:
        description: An asyncIterableIterator that supports paging.
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/storage-blob-changefeed.BlobChangeFeedEvent" />, <xref
          uid="@azure/storage-blob-changefeed.BlobChangeFeedEventPage" />, <xref
          uid="@azure/core-paging.PageSettings" />&gt;
