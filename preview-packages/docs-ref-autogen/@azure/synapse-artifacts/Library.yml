### YamlMime:TSType
name: Library
uid: '@azure/synapse-artifacts.Library'
package: '@azure/synapse-artifacts'
summary: Interface representing a Library.
fullName: Library
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: append(string, RequestBodyType, LibraryAppendOptionalParams)
    uid: '@azure/synapse-artifacts.Library.append'
    package: '@azure/synapse-artifacts'
    summary: >-
      Append the content to the library resource created using the create
      operation. The maximum content

      size is 4MiB. Content larger than 4MiB must be appended in 4MiB chunks
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function append(libraryName: string, content: RequestBodyType, options?:
        LibraryAppendOptionalParams): Promise<void>
      parameters:
        - id: libraryName
          type: string
          description: >-
            file name to upload. Minimum length of the filename should be 1
            excluding the
                               extension length.
        - id: content
          type: <xref uid="@azure/core-rest-pipeline.RequestBodyType" />
          description: Library file chunk.
        - id: options
          type: <xref uid="@azure/synapse-artifacts.LibraryAppendOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginCreate(string, LibraryCreateOptionalParams)
    uid: '@azure/synapse-artifacts.Library.beginCreate'
    package: '@azure/synapse-artifacts'
    summary: Creates a library with the library name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(libraryName: string, options?:
        LibraryCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: libraryName
          type: string
          description: >-
            file name to upload. Minimum length of the filename should be 1
            excluding the
                               extension length.
        - id: options
          type: <xref uid="@azure/synapse-artifacts.LibraryCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginCreateAndWait(string, LibraryCreateOptionalParams)
    uid: '@azure/synapse-artifacts.Library.beginCreateAndWait'
    package: '@azure/synapse-artifacts'
    summary: Creates a library with the library name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(libraryName: string, options?:
        LibraryCreateOptionalParams): Promise<void>
      parameters:
        - id: libraryName
          type: string
          description: >-
            file name to upload. Minimum length of the filename should be 1
            excluding the
                               extension length.
        - id: options
          type: <xref uid="@azure/synapse-artifacts.LibraryCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginDelete(string, LibraryDeleteOptionalParams)
    uid: '@azure/synapse-artifacts.Library.beginDelete'
    package: '@azure/synapse-artifacts'
    summary: Delete Library
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(libraryName: string, options?:
        LibraryDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: libraryName
          type: string
          description: >-
            file name to upload. Minimum length of the filename should be 1
            excluding the
                               extension length.
        - id: options
          type: <xref uid="@azure/synapse-artifacts.LibraryDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, LibraryDeleteOptionalParams)
    uid: '@azure/synapse-artifacts.Library.beginDeleteAndWait'
    package: '@azure/synapse-artifacts'
    summary: Delete Library
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(libraryName: string, options?:
        LibraryDeleteOptionalParams): Promise<void>
      parameters:
        - id: libraryName
          type: string
          description: >-
            file name to upload. Minimum length of the filename should be 1
            excluding the
                               extension length.
        - id: options
          type: <xref uid="@azure/synapse-artifacts.LibraryDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginFlush(string, LibraryFlushOptionalParams)
    uid: '@azure/synapse-artifacts.Library.beginFlush'
    package: '@azure/synapse-artifacts'
    summary: Flush Library
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginFlush(libraryName: string, options?:
        LibraryFlushOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: libraryName
          type: string
          description: >-
            file name to upload. Minimum length of the filename should be 1
            excluding the
                               extension length.
        - id: options
          type: <xref uid="@azure/synapse-artifacts.LibraryFlushOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginFlushAndWait(string, LibraryFlushOptionalParams)
    uid: '@azure/synapse-artifacts.Library.beginFlushAndWait'
    package: '@azure/synapse-artifacts'
    summary: Flush Library
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginFlushAndWait(libraryName: string, options?:
        LibraryFlushOptionalParams): Promise<void>
      parameters:
        - id: libraryName
          type: string
          description: >-
            file name to upload. Minimum length of the filename should be 1
            excluding the
                               extension length.
        - id: options
          type: <xref uid="@azure/synapse-artifacts.LibraryFlushOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, LibraryGetOptionalParams)
    uid: '@azure/synapse-artifacts.Library.get'
    package: '@azure/synapse-artifacts'
    summary: Get Library
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(libraryName: string, options?: LibraryGetOptionalParams):
        Promise<LibraryResource>
      parameters:
        - id: libraryName
          type: string
          description: >-
            file name to upload. Minimum length of the filename should be 1
            excluding the
                               extension length.
        - id: options
          type: <xref uid="@azure/synapse-artifacts.LibraryGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/synapse-artifacts.LibraryResource" />&gt;
  - name: getOperationResult(string, LibraryGetOperationResultOptionalParams)
    uid: '@azure/synapse-artifacts.Library.getOperationResult'
    package: '@azure/synapse-artifacts'
    summary: Get Operation result for Library
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getOperationResult(operationId: string, options?:
        LibraryGetOperationResultOptionalParams): Promise<LibraryResource>
      parameters:
        - id: operationId
          type: string
          description: operation id for which status is requested
        - id: options
          type: >-
            <xref
            uid="@azure/synapse-artifacts.LibraryGetOperationResultOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/synapse-artifacts.LibraryResource" />&gt;
  - name: list(LibraryListOptionalParams)
    uid: '@azure/synapse-artifacts.Library.list'
    package: '@azure/synapse-artifacts'
    summary: Lists Library.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: LibraryListOptionalParams):
        PagedAsyncIterableIterator<LibraryResource, LibraryResource[],
        PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/synapse-artifacts.LibraryListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/synapse-artifacts.LibraryResource" />, <xref
          uid="@azure/synapse-artifacts.LibraryResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
