### YamlMime:TSType
name: Policy
uid: '@azure/arm-recoveryservicesdatareplication.Policy'
package: '@azure/arm-recoveryservicesdatareplication'
summary: Interface representing a Policy.
fullName: Policy
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: beginCreate(string, string, string, PolicyCreateOptionalParams)
    uid: '@azure/arm-recoveryservicesdatareplication.Policy.beginCreate'
    package: '@azure/arm-recoveryservicesdatareplication'
    summary: Creates the policy.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, vaultName: string,
        policyName: string, options?: PolicyCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<PolicyModel>, PolicyModel>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The vault name.
        - id: policyName
          type: string
          description: The policy name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-recoveryservicesdatareplication.PolicyCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-recoveryservicesdatareplication.PolicyModel" />&gt;,
          <xref uid="@azure/arm-recoveryservicesdatareplication.PolicyModel"
          />&gt;&gt;
  - name: beginCreateAndWait(string, string, string, PolicyCreateOptionalParams)
    uid: '@azure/arm-recoveryservicesdatareplication.Policy.beginCreateAndWait'
    package: '@azure/arm-recoveryservicesdatareplication'
    summary: Creates the policy.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, vaultName:
        string, policyName: string, options?: PolicyCreateOptionalParams):
        Promise<PolicyModel>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The vault name.
        - id: policyName
          type: string
          description: The policy name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-recoveryservicesdatareplication.PolicyCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-recoveryservicesdatareplication.PolicyModel" />&gt;
  - name: beginDelete(string, string, string, PolicyDeleteOptionalParams)
    uid: '@azure/arm-recoveryservicesdatareplication.Policy.beginDelete'
    package: '@azure/arm-recoveryservicesdatareplication'
    summary: Removes the policy.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, vaultName: string,
        policyName: string, options?: PolicyDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<PolicyDeleteHeaders>,
        PolicyDeleteHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The vault name.
        - id: policyName
          type: string
          description: The policy name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-recoveryservicesdatareplication.PolicyDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-recoveryservicesdatareplication.PolicyDeleteHeaders"
          />&gt;, <xref
          uid="@azure/arm-recoveryservicesdatareplication.PolicyDeleteHeaders"
          />&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, PolicyDeleteOptionalParams)
    uid: '@azure/arm-recoveryservicesdatareplication.Policy.beginDeleteAndWait'
    package: '@azure/arm-recoveryservicesdatareplication'
    summary: Removes the policy.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, vaultName:
        string, policyName: string, options?: PolicyDeleteOptionalParams):
        Promise<PolicyDeleteHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The vault name.
        - id: policyName
          type: string
          description: The policy name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-recoveryservicesdatareplication.PolicyDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-recoveryservicesdatareplication.PolicyDeleteHeaders"
          />&gt;
  - name: get(string, string, string, PolicyGetOptionalParams)
    uid: '@azure/arm-recoveryservicesdatareplication.Policy.get'
    package: '@azure/arm-recoveryservicesdatareplication'
    summary: Gets the details of the policy.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, policyName:
        string, options?: PolicyGetOptionalParams): Promise<PolicyModel>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The vault name.
        - id: policyName
          type: string
          description: The policy name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-recoveryservicesdatareplication.PolicyGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-recoveryservicesdatareplication.PolicyModel" />&gt;
  - name: list(string, string, PolicyListOptionalParams)
    uid: '@azure/arm-recoveryservicesdatareplication.Policy.list'
    package: '@azure/arm-recoveryservicesdatareplication'
    summary: Gets the list of policies in the given vault.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, vaultName: string, options?:
        PolicyListOptionalParams): PagedAsyncIterableIterator<PolicyModel,
        PolicyModel[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: vaultName
          type: string
          description: The vault name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-recoveryservicesdatareplication.PolicyListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-recoveryservicesdatareplication.PolicyModel" />, <xref
          uid="@azure/arm-recoveryservicesdatareplication.PolicyModel" />[],
          <xref uid="@azure/core-paging.PageSettings" />&gt;
