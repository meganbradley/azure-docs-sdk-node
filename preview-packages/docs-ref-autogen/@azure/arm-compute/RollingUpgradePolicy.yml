### YamlMime:TSType
name: RollingUpgradePolicy
uid: '@azure/arm-compute.RollingUpgradePolicy'
package: '@azure/arm-compute'
summary: The configuration parameters used while performing a rolling upgrade.
fullName: RollingUpgradePolicy
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: enableCrossZoneUpgrade
    uid: '@azure/arm-compute.RollingUpgradePolicy.enableCrossZoneUpgrade'
    package: '@azure/arm-compute'
    summary: >-
      Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take
      into consideration the Update Domain and maxBatchInstancePercent to
      determine the batch size.
    fullName: enableCrossZoneUpgrade
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'enableCrossZoneUpgrade?: boolean'
      return:
        description: ''
        type: boolean
  - name: maxBatchInstancePercent
    uid: '@azure/arm-compute.RollingUpgradePolicy.maxBatchInstancePercent'
    package: '@azure/arm-compute'
    summary: >-
      The maximum percent of total virtual machine instances that will be
      upgraded simultaneously by the rolling upgrade in one batch. As this is a
      maximum, unhealthy instances in previous or future batches can cause the
      percentage of instances in a batch to decrease to ensure higher
      reliability. The default value for this parameter is 20%.
    fullName: maxBatchInstancePercent
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxBatchInstancePercent?: number'
      return:
        description: ''
        type: number
  - name: maxSurge
    uid: '@azure/arm-compute.RollingUpgradePolicy.maxSurge'
    package: '@azure/arm-compute'
    summary: >-
      Create new virtual machines to upgrade the scale set, rather than updating
      the existing virtual machines. Existing virtual machines will be deleted
      once the new virtual machines are created for each batch.
    fullName: maxSurge
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxSurge?: boolean'
      return:
        description: ''
        type: boolean
  - name: maxUnhealthyInstancePercent
    uid: '@azure/arm-compute.RollingUpgradePolicy.maxUnhealthyInstancePercent'
    package: '@azure/arm-compute'
    summary: >-
      The maximum percentage of the total virtual machine instances in the scale
      set that can be simultaneously unhealthy, either as a result of being
      upgraded, or by being found in an unhealthy state by the virtual machine
      health checks before the rolling upgrade aborts. This constraint will be
      checked prior to starting any batch. The default value for this parameter
      is 20%.
    fullName: maxUnhealthyInstancePercent
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxUnhealthyInstancePercent?: number'
      return:
        description: ''
        type: number
  - name: maxUnhealthyUpgradedInstancePercent
    uid: >-
      @azure/arm-compute.RollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent
    package: '@azure/arm-compute'
    summary: >-
      The maximum percentage of upgraded virtual machine instances that can be
      found to be in an unhealthy state. This check will happen after each batch
      is upgraded. If this percentage is ever exceeded, the rolling update
      aborts. The default value for this parameter is 20%.
    fullName: maxUnhealthyUpgradedInstancePercent
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxUnhealthyUpgradedInstancePercent?: number'
      return:
        description: ''
        type: number
  - name: pauseTimeBetweenBatches
    uid: '@azure/arm-compute.RollingUpgradePolicy.pauseTimeBetweenBatches'
    package: '@azure/arm-compute'
    summary: >-
      The wait time between completing the update for all virtual machines in
      one batch and starting the next batch. The time duration should be
      specified in ISO 8601 format. The default value is 0 seconds (PT0S).
    fullName: pauseTimeBetweenBatches
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'pauseTimeBetweenBatches?: string'
      return:
        description: ''
        type: string
  - name: prioritizeUnhealthyInstances
    uid: '@azure/arm-compute.RollingUpgradePolicy.prioritizeUnhealthyInstances'
    package: '@azure/arm-compute'
    summary: >-
      Upgrade all unhealthy instances in a scale set before any healthy
      instances.
    fullName: prioritizeUnhealthyInstances
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'prioritizeUnhealthyInstances?: boolean'
      return:
        description: ''
        type: boolean
  - name: rollbackFailedInstancesOnPolicyBreach
    uid: >-
      @azure/arm-compute.RollingUpgradePolicy.rollbackFailedInstancesOnPolicyBreach
    package: '@azure/arm-compute'
    summary: >-
      Rollback failed instances to previous model if the Rolling Upgrade policy
      is violated.
    fullName: rollbackFailedInstancesOnPolicyBreach
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'rollbackFailedInstancesOnPolicyBreach?: boolean'
      return:
        description: ''
        type: boolean
