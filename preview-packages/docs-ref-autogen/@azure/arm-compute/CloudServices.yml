### YamlMime:TSType
name: CloudServices
uid: '@azure/arm-compute.CloudServices'
package: '@azure/arm-compute'
summary: Interface representing a CloudServices.
fullName: CloudServices
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string,
      CloudServicesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginCreateOrUpdate'
    package: '@azure/arm-compute'
    summary: >-
      Create or update a cloud service. Please note some properties can be set
      only during cloud service

      creation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        cloudServiceName: string, options?:
        CloudServicesCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<CloudService>, CloudService>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.CloudServicesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-compute.CloudService" />&gt;, <xref
          uid="@azure/arm-compute.CloudService" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string,
      CloudServicesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginCreateOrUpdateAndWait'
    package: '@azure/arm-compute'
    summary: >-
      Create or update a cloud service. Please note some properties can be set
      only during cloud service

      creation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        cloudServiceName: string, options?:
        CloudServicesCreateOrUpdateOptionalParams): Promise<CloudService>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.CloudServicesCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-compute.CloudService" />&gt;
  - name: beginDelete(string, string, CloudServicesDeleteOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginDelete'
    package: '@azure/arm-compute'
    summary: Deletes a cloud service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, cloudServiceName:
        string, options?: CloudServicesDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: beginDeleteAndWait(string, string, CloudServicesDeleteOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginDeleteAndWait'
    package: '@azure/arm-compute'
    summary: Deletes a cloud service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, cloudServiceName:
        string, options?: CloudServicesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginDeleteInstances(string, string,
      CloudServicesDeleteInstancesOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginDeleteInstances'
    package: '@azure/arm-compute'
    summary: Deletes role instances in a cloud service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteInstances(resourceGroupName: string,
        cloudServiceName: string, options?:
        CloudServicesDeleteInstancesOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.CloudServicesDeleteInstancesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: >-
      beginDeleteInstancesAndWait(string, string,
      CloudServicesDeleteInstancesOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginDeleteInstancesAndWait'
    package: '@azure/arm-compute'
    summary: Deletes role instances in a cloud service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteInstancesAndWait(resourceGroupName: string,
        cloudServiceName: string, options?:
        CloudServicesDeleteInstancesOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.CloudServicesDeleteInstancesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginPowerOff(string, string, CloudServicesPowerOffOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginPowerOff'
    package: '@azure/arm-compute'
    summary: >-
      Power off the cloud service. Note that resources are still attached and
      you are getting charged for

      the resources.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPowerOff(resourceGroupName: string, cloudServiceName:
        string, options?: CloudServicesPowerOffOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.CloudServicesPowerOffOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: beginPowerOffAndWait(string, string, CloudServicesPowerOffOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginPowerOffAndWait'
    package: '@azure/arm-compute'
    summary: >-
      Power off the cloud service. Note that resources are still attached and
      you are getting charged for

      the resources.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPowerOffAndWait(resourceGroupName: string,
        cloudServiceName: string, options?:
        CloudServicesPowerOffOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: >-
            <xref uid="@azure/arm-compute.CloudServicesPowerOffOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginRebuild(string, string, CloudServicesRebuildOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginRebuild'
    package: '@azure/arm-compute'
    summary: >-
      Rebuild Role Instances reinstalls the operating system on instances of web
      roles or worker roles and

      initializes the storage resources that are used by them. If you do not
      want to initialize storage

      resources, you can use Reimage Role Instances.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRebuild(resourceGroupName: string, cloudServiceName:
        string, options?: CloudServicesRebuildOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesRebuildOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: beginRebuildAndWait(string, string, CloudServicesRebuildOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginRebuildAndWait'
    package: '@azure/arm-compute'
    summary: >-
      Rebuild Role Instances reinstalls the operating system on instances of web
      roles or worker roles and

      initializes the storage resources that are used by them. If you do not
      want to initialize storage

      resources, you can use Reimage Role Instances.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRebuildAndWait(resourceGroupName: string,
        cloudServiceName: string, options?: CloudServicesRebuildOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesRebuildOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginReimage(string, string, CloudServicesReimageOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginReimage'
    package: '@azure/arm-compute'
    summary: >-
      Reimage asynchronous operation reinstalls the operating system on
      instances of web roles or worker

      roles.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginReimage(resourceGroupName: string, cloudServiceName:
        string, options?: CloudServicesReimageOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesReimageOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: beginReimageAndWait(string, string, CloudServicesReimageOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginReimageAndWait'
    package: '@azure/arm-compute'
    summary: >-
      Reimage asynchronous operation reinstalls the operating system on
      instances of web roles or worker

      roles.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginReimageAndWait(resourceGroupName: string,
        cloudServiceName: string, options?: CloudServicesReimageOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesReimageOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginRestart(string, string, CloudServicesRestartOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginRestart'
    package: '@azure/arm-compute'
    summary: Restarts one or more role instances in a cloud service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRestart(resourceGroupName: string, cloudServiceName:
        string, options?: CloudServicesRestartOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesRestartOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: beginRestartAndWait(string, string, CloudServicesRestartOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginRestartAndWait'
    package: '@azure/arm-compute'
    summary: Restarts one or more role instances in a cloud service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRestartAndWait(resourceGroupName: string,
        cloudServiceName: string, options?: CloudServicesRestartOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesRestartOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginStart(string, string, CloudServicesStartOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginStart'
    package: '@azure/arm-compute'
    summary: Starts the cloud service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, cloudServiceName: string,
        options?: CloudServicesStartOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesStartOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: beginStartAndWait(string, string, CloudServicesStartOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginStartAndWait'
    package: '@azure/arm-compute'
    summary: Starts the cloud service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginStartAndWait(resourceGroupName: string, cloudServiceName:
        string, options?: CloudServicesStartOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesStartOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginUpdate(string, string, CloudServicesUpdateOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginUpdate'
    package: '@azure/arm-compute'
    summary: Update a cloud service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, cloudServiceName:
        string, options?: CloudServicesUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<CloudService>, CloudService>>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-compute.CloudService" />&gt;, <xref
          uid="@azure/arm-compute.CloudService" />&gt;&gt;
  - name: beginUpdateAndWait(string, string, CloudServicesUpdateOptionalParams)
    uid: '@azure/arm-compute.CloudServices.beginUpdateAndWait'
    package: '@azure/arm-compute'
    summary: Update a cloud service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, cloudServiceName:
        string, options?: CloudServicesUpdateOptionalParams):
        Promise<CloudService>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-compute.CloudService" />&gt;
  - name: get(string, string, CloudServicesGetOptionalParams)
    uid: '@azure/arm-compute.CloudServices.get'
    package: '@azure/arm-compute'
    summary: Display information about a cloud service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cloudServiceName: string,
        options?: CloudServicesGetOptionalParams): Promise<CloudService>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-compute.CloudService" />&gt;
  - name: >-
      getInstanceView(string, string,
      CloudServicesGetInstanceViewOptionalParams)
    uid: '@azure/arm-compute.CloudServices.getInstanceView'
    package: '@azure/arm-compute'
    summary: Gets the status of a cloud service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getInstanceView(resourceGroupName: string, cloudServiceName:
        string, options?: CloudServicesGetInstanceViewOptionalParams):
        Promise<CloudServiceInstanceView>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: cloudServiceName
          type: string
          description: Name of the cloud service.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-compute.CloudServicesGetInstanceViewOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-compute.CloudServiceInstanceView"
          />&gt;
  - name: list(string, CloudServicesListOptionalParams)
    uid: '@azure/arm-compute.CloudServices.list'
    package: '@azure/arm-compute'
    summary: >-
      Gets a list of all cloud services under a resource group. Use nextLink
      property in the response to

      get the next page of Cloud Services. Do this till nextLink is null to
      fetch all the Cloud Services.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        CloudServicesListOptionalParams):
        PagedAsyncIterableIterator<CloudService, CloudService[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: Name of the resource group.
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-compute.CloudService" />, <xref
          uid="@azure/arm-compute.CloudService" />[], PageSettings&gt;
  - name: listAll(CloudServicesListAllOptionalParams)
    uid: '@azure/arm-compute.CloudServices.listAll'
    package: '@azure/arm-compute'
    summary: >-
      Gets a list of all cloud services in the subscription, regardless of the
      associated resource group.

      Use nextLink property in the response to get the next page of Cloud
      Services. Do this till nextLink

      is null to fetch all the Cloud Services.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAll(options?: CloudServicesListAllOptionalParams):
        PagedAsyncIterableIterator<CloudService, CloudService[], PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-compute.CloudServicesListAllOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-compute.CloudService" />, <xref
          uid="@azure/arm-compute.CloudService" />[], PageSettings&gt;
