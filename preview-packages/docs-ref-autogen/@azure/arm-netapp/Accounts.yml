### YamlMime:TSType
name: Accounts
uid: '@azure/arm-netapp.Accounts'
package: '@azure/arm-netapp'
summary: Interface representing a Accounts.
fullName: Accounts
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, NetAppAccount,
      AccountsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-netapp.Accounts.beginCreateOrUpdate'
    package: '@azure/arm-netapp'
    summary: Create or update the specified NetApp account within the resource group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, accountName:
        string, body: NetAppAccount, options?:
        AccountsCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<NetAppAccount>, NetAppAccount>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the NetApp account
        - id: body
          type: <xref uid="@azure/arm-netapp.NetAppAccount" />
          description: NetApp Account object supplied in the body of the operation.
        - id: options
          type: >-
            <xref uid="@azure/arm-netapp.AccountsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-netapp.NetAppAccount" />&gt;, <xref
          uid="@azure/arm-netapp.NetAppAccount" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, NetAppAccount,
      AccountsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-netapp.Accounts.beginCreateOrUpdateAndWait'
    package: '@azure/arm-netapp'
    summary: Create or update the specified NetApp account within the resource group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        accountName: string, body: NetAppAccount, options?:
        AccountsCreateOrUpdateOptionalParams): Promise<NetAppAccount>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the NetApp account
        - id: body
          type: <xref uid="@azure/arm-netapp.NetAppAccount" />
          description: NetApp Account object supplied in the body of the operation.
        - id: options
          type: >-
            <xref uid="@azure/arm-netapp.AccountsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-netapp.NetAppAccount" />&gt;
  - name: beginDelete(string, string, AccountsDeleteOptionalParams)
    uid: '@azure/arm-netapp.Accounts.beginDelete'
    package: '@azure/arm-netapp'
    summary: Delete the specified NetApp account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, accountName: string,
        options?: AccountsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the NetApp account
        - id: options
          type: <xref uid="@azure/arm-netapp.AccountsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: beginDeleteAndWait(string, string, AccountsDeleteOptionalParams)
    uid: '@azure/arm-netapp.Accounts.beginDeleteAndWait'
    package: '@azure/arm-netapp'
    summary: Delete the specified NetApp account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, accountName:
        string, options?: AccountsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the NetApp account
        - id: options
          type: <xref uid="@azure/arm-netapp.AccountsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginRenewCredentials(string, string,
      AccountsRenewCredentialsOptionalParams)
    uid: '@azure/arm-netapp.Accounts.beginRenewCredentials'
    package: '@azure/arm-netapp'
    summary: >-
      Renew identity credentials that are used to authenticate to key vault, for
      customer-managed key

      encryption. If encryption.identity.principalId does not match
      identity.principalId, running this

      operation will fix it.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRenewCredentials(resourceGroupName: string, accountName:
        string, options?: AccountsRenewCredentialsOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the NetApp account
        - id: options
          type: >-
            <xref uid="@azure/arm-netapp.AccountsRenewCredentialsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: >-
      beginRenewCredentialsAndWait(string, string,
      AccountsRenewCredentialsOptionalParams)
    uid: '@azure/arm-netapp.Accounts.beginRenewCredentialsAndWait'
    package: '@azure/arm-netapp'
    summary: >-
      Renew identity credentials that are used to authenticate to key vault, for
      customer-managed key

      encryption. If encryption.identity.principalId does not match
      identity.principalId, running this

      operation will fix it.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRenewCredentialsAndWait(resourceGroupName: string,
        accountName: string, options?: AccountsRenewCredentialsOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the NetApp account
        - id: options
          type: >-
            <xref uid="@azure/arm-netapp.AccountsRenewCredentialsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, NetAppAccountPatch,
      AccountsUpdateOptionalParams)
    uid: '@azure/arm-netapp.Accounts.beginUpdate'
    package: '@azure/arm-netapp'
    summary: Patch the specified NetApp account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, accountName: string,
        body: NetAppAccountPatch, options?: AccountsUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<NetAppAccount>, NetAppAccount>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the NetApp account
        - id: body
          type: <xref uid="@azure/arm-netapp.NetAppAccountPatch" />
          description: NetApp Account object supplied in the body of the operation.
        - id: options
          type: <xref uid="@azure/arm-netapp.AccountsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-netapp.NetAppAccount" />&gt;, <xref
          uid="@azure/arm-netapp.NetAppAccount" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, NetAppAccountPatch,
      AccountsUpdateOptionalParams)
    uid: '@azure/arm-netapp.Accounts.beginUpdateAndWait'
    package: '@azure/arm-netapp'
    summary: Patch the specified NetApp account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, accountName:
        string, body: NetAppAccountPatch, options?:
        AccountsUpdateOptionalParams): Promise<NetAppAccount>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the NetApp account
        - id: body
          type: <xref uid="@azure/arm-netapp.NetAppAccountPatch" />
          description: NetApp Account object supplied in the body of the operation.
        - id: options
          type: <xref uid="@azure/arm-netapp.AccountsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-netapp.NetAppAccount" />&gt;
  - name: get(string, string, AccountsGetOptionalParams)
    uid: '@azure/arm-netapp.Accounts.get'
    package: '@azure/arm-netapp'
    summary: Get the NetApp account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options?:
        AccountsGetOptionalParams): Promise<NetAppAccount>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: The name of the NetApp account
        - id: options
          type: <xref uid="@azure/arm-netapp.AccountsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-netapp.NetAppAccount" />&gt;
  - name: list(string, AccountsListOptionalParams)
    uid: '@azure/arm-netapp.Accounts.list'
    package: '@azure/arm-netapp'
    summary: List and describe all NetApp accounts in the resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, options?:
        AccountsListOptionalParams): PagedAsyncIterableIterator<NetAppAccount,
        NetAppAccount[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: <xref uid="@azure/arm-netapp.AccountsListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-netapp.NetAppAccount" />, <xref
          uid="@azure/arm-netapp.NetAppAccount" />[], PageSettings&gt;
  - name: listBySubscription(AccountsListBySubscriptionOptionalParams)
    uid: '@azure/arm-netapp.Accounts.listBySubscription'
    package: '@azure/arm-netapp'
    summary: List and describe all NetApp accounts in the subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        AccountsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<NetAppAccount, NetAppAccount[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-netapp.AccountsListBySubscriptionOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-netapp.NetAppAccount" />, <xref
          uid="@azure/arm-netapp.NetAppAccount" />[], PageSettings&gt;
