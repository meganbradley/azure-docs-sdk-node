### YamlMime:TSType
name: CommunicationIdentityClient
uid: '@azure/communication-administration.CommunicationIdentityClient'
package: '@azure/communication-administration'
summary: >-
  Client class for interacting with Azure Communication Services User Token
  Management.
fullName: CommunicationIdentityClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: CommunicationIdentityClient(string, CommunicationIdentityOptions)
    uid: >-
      @azure/communication-administration.CommunicationIdentityClient.constructor
    package: '@azure/communication-administration'
    summary: Initializes a new instance of the CommunicationIdentity class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new CommunicationIdentityClient(connectionString: string, options?:
        CommunicationIdentityOptions)
      parameters:
        - id: connectionString
          type: string
          description: >-
            Connection string to connect to an Azure Communication Service
            resource.
                                    Example: "endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret";
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.CommunicationIdentityOptions"
            />
          description: Optional. Options to configure the HTTP pipeline.
  - name: >-
      CommunicationIdentityClient(string, KeyCredential,
      CommunicationIdentityOptions)
    uid: >-
      @azure/communication-administration.CommunicationIdentityClient.constructor_1
    package: '@azure/communication-administration'
    summary: >-
      Initializes a new instance of the CommunicationIdentity class using an
      Azure KeyCredential.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new CommunicationIdentityClient(url: string, credential: KeyCredential,
        options?: CommunicationIdentityOptions)
      parameters:
        - id: url
          type: string
          description: >-
            The endpoint of the service (ex:
            https://contoso.eastus.communications.azure.net).
        - id: credential
          type: <xref uid="@azure/core-auth.KeyCredential" />
          description: >-
            An object that is used to authenticate requests to the service. Use
            the AzureKeyCredential or `@azure/identity` to create a credential.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.CommunicationIdentityOptions"
            />
          description: Optional. Options to configure the HTTP pipeline.
  - name: >-
      CommunicationIdentityClient(string, TokenCredential,
      CommunicationIdentityOptions)
    uid: >-
      @azure/communication-administration.CommunicationIdentityClient.constructor_2
    package: '@azure/communication-administration'
    summary: >-
      Initializes a new instance of the CommunicationIdentity class using a
      TokenCredential.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new CommunicationIdentityClient(url: string, credential:
        TokenCredential, options?: CommunicationIdentityOptions)
      parameters:
        - id: url
          type: string
          description: >-
            The endpoint of the service (ex:
            https://contoso.eastus.communications.azure.net)
        - id: credential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: >-
            TokenCredential that is used to authenticate requests to the
            service.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.CommunicationIdentityOptions"
            />
          description: Optional. Options to configure the HTTP pipeline.
methods:
  - name: createUser(OperationOptions)
    uid: '@azure/communication-administration.CommunicationIdentityClient.createUser'
    package: '@azure/communication-administration'
    summary: Creates a single user.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createUser(options?: OperationOptions):
        Promise<CreateUserResponse>
      parameters:
        - id: options
          type: <xref uid="@azure/core-http.OperationOptions" />
          description: Additional options for the request.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-administration.CreateUserResponse" />&gt;
  - name: deleteUser(CommunicationUserIdentifier, OperationOptions)
    uid: '@azure/communication-administration.CommunicationIdentityClient.deleteUser'
    package: '@azure/communication-administration'
    summary: Triggers revocation event for user and deletes all its data.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteUser(user: CommunicationUserIdentifier, options?:
        OperationOptions): Promise<{ _response: HttpResponse }>
      parameters:
        - id: user
          type: >-
            <xref uid="@azure/communication-common.CommunicationUserIdentifier"
            />
          description: The user being deleted.
        - id: options
          type: <xref uid="@azure/core-http.OperationOptions" />
          description: Additional options for the request.
      return:
        description: ''
        type: 'Promise&lt;{ _response: HttpResponse }&gt;'
  - name: issueToken(CommunicationUserIdentifier, TokenScope[], OperationOptions)
    uid: '@azure/communication-administration.CommunicationIdentityClient.issueToken'
    package: '@azure/communication-administration'
    summary: Creates a scoped user token.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function issueToken(user: CommunicationUserIdentifier, scopes:
        TokenScope[], options?: OperationOptions): Promise<IssueTokenResponse>
      parameters:
        - id: user
          type: >-
            <xref uid="@azure/communication-common.CommunicationUserIdentifier"
            />
          description: The user whose tokens are being revoked.
        - id: scopes
          type: <xref uid="@azure/communication-administration.TokenScope" />[]
          description: Scopes to include in the token.
        - id: options
          type: <xref uid="@azure/core-http.OperationOptions" />
          description: Additional options for the request.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-administration.IssueTokenResponse" />&gt;
  - name: revokeTokens(CommunicationUserIdentifier, Date, OperationOptions)
    uid: >-
      @azure/communication-administration.CommunicationIdentityClient.revokeTokens
    package: '@azure/communication-administration'
    summary: Revokes all data and tokens created for a user.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function revokeTokens(user: CommunicationUserIdentifier,
        tokensValidFrom?: Date, options?: OperationOptions): Promise<{
        _response: HttpResponse }>
      parameters:
        - id: user
          type: >-
            <xref uid="@azure/communication-common.CommunicationUserIdentifier"
            />
          description: The user whose tokens are being revoked.
        - id: tokensValidFrom
          type: Date
          description: Tokens issued before this time will be revoked.
        - id: options
          type: <xref uid="@azure/core-http.OperationOptions" />
          description: Additional options for the request.
      return:
        description: ''
        type: 'Promise&lt;{ _response: HttpResponse }&gt;'
