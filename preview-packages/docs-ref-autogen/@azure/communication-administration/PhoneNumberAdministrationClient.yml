### YamlMime:TSType
name: PhoneNumberAdministrationClient
uid: '@azure/communication-administration.PhoneNumberAdministrationClient'
package: '@azure/communication-administration'
summary: >-
  Client class for interacting with Azure Communication Services PhoneNumber
  Administration.
fullName: PhoneNumberAdministrationClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      PhoneNumberAdministrationClient(string, KeyCredential,
      PhoneNumberAdministrationClientOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.constructor_1
    package: '@azure/communication-administration'
    summary: >-
      Initializes a new instance of the PhoneNumberAdministrationClient class
      using an Azure KeyCredential.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new PhoneNumberAdministrationClient(url: string, credential:
        KeyCredential, options?: PhoneNumberAdministrationClientOptions)
      parameters:
        - id: url
          type: string
          description: >-
            The endpoint of the service (ex:
            https://contoso.eastus.communications.azure.net).
        - id: credential
          type: <xref uid="@azure/core-auth.KeyCredential" />
          description: >-
            An object that is used to authenticate requests to the service. Use
            the Azure KeyCredential or `@azure/identity` to create a credential.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.PhoneNumberAdministrationClientOptions"
            />
          description: Optional. Options to configure the HTTP pipeline.
  - name: >-
      PhoneNumberAdministrationClient(string,
      PhoneNumberAdministrationClientOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.constructor
    package: '@azure/communication-administration'
    summary: Initializes a new instance of the PhoneNumberAdministrationClient class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new PhoneNumberAdministrationClient(connectionString: string, options?:
        PhoneNumberAdministrationClientOptions)
      parameters:
        - id: connectionString
          type: string
          description: >-
            Connection string to connect to an Azure Communication Service
            resource.
                                    Example: "endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret";
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.PhoneNumberAdministrationClientOptions"
            />
          description: Optional. Options to configure the HTTP pipeline.
  - name: >-
      PhoneNumberAdministrationClient(string, TokenCredential,
      PhoneNumberAdministrationClientOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.constructor_2
    package: '@azure/communication-administration'
    summary: >-
      Initializes a new instance of the PhoneNumberAdministrationClient class
      using a TokenCredential.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new PhoneNumberAdministrationClient(url: string, credential:
        TokenCredential, options?: PhoneNumberAdministrationClientOptions)
      parameters:
        - id: url
          type: string
          description: >-
            The endpoint of the service (ex:
            https://contoso.eastus.communications.azure.net).
        - id: credential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: >-
            TokenCredential that is used to authenticate requests to the
            service.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.PhoneNumberAdministrationClientOptions"
            />
          description: Optional. Options to configure the HTTP pipeline.
methods:
  - name: beginPurchaseReservation(string, BeginPurchaseReservationOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.beginPurchaseReservation
    package: '@azure/communication-administration'
    summary: >-
      Starts the purchase of the phone number(s) in the reservation associated
      with a given id.


      This function returns a Long Running Operation poller that allows you to
      wait indefinitely until the operation is complete.


      Example usage:

      ```ts

      const client = new PhoneNumberAdministrationClient(CONNECTION_STRING);

      const purchasePoller = await
      client.beginPurchaseReservation(RESERVATION_ID);


      // Serializing the poller

      const serialized = purchasePoller.toString();


      // Waiting until it's done

      const results = await purchasePoller.pollUntilDone();

      console.log(results);

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginPurchaseReservation(reservationId: string, options?:
        BeginPurchaseReservationOptions):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: reservationId
          type: string
          description: The id of the reservation to purchase.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.BeginPurchaseReservationOptions"
            />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginReleasePhoneNumbers(string[], BeginReleasePhoneNumbersOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.beginReleasePhoneNumbers
    package: '@azure/communication-administration'
    summary: >-
      Starts the release of a list of acquired phone numbers.


      This function returns a Long Running Operation poller that allows you to
      wait indefinitely until the operation is complete.


      Example usage:

      ```ts

      const client = new PhoneNumberAdministrationClient(CONNECTION_STRING);

      const releasePoller = await
      client.beginReleasePhoneNumbers(PHONE_NUMBERS);


      // Serializing the poller

      const serialized = releasePoller.toString();


      // Waiting until it's done

      const results = await releasePoller.pollUntilDone();

      console.log(results);

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginReleasePhoneNumbers(phoneNumbers: string[], options?:
        BeginReleasePhoneNumbersOptions):
        Promise<PollerLike<PollOperationState<PhoneNumberRelease>,
        PhoneNumberRelease>>
      parameters:
        - id: phoneNumbers
          type: string[]
          description: The phone numbers to be released.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.BeginReleasePhoneNumbersOptions"
            />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/communication-administration.PhoneNumberRelease" />&gt;,
          <xref uid="@azure/communication-administration.PhoneNumberRelease"
          />&gt;&gt;
  - name: >-
      beginReservePhoneNumbers(CreateReservationRequest,
      BeginReservePhoneNumbersOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.beginReservePhoneNumbers
    package: '@azure/communication-administration'
    summary: >-
      Starts a search for phone numbers given some constraints such as name or
      area code.

      The phone numbers that are found are reserved until you cancel, purchase
      or the reservation expires.


      This function returns a Long Running Operation poller that allows you to
      wait indefinitely until the operation is complete.


      Example usage:

      ```ts

      const client = new PhoneNumberAdministrationClient(CONNECTION_STRING);

      const reservePoller = await
      client.beginReservePhoneNumbers(RESERVATION_REQUEST);


      // Serializing the poller

      const serialized = reservePoller.toString();


      // Waiting until it's done

      const results = await reservePoller.pollUntilDone();

      console.log(results);

      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginReservePhoneNumbers(reservationRequest:
        CreateReservationRequest, options?: BeginReservePhoneNumbersOptions):
        Promise<PollerLike<PollOperationState<PhoneNumberReservation>,
        PhoneNumberReservation>>
      parameters:
        - id: reservationRequest
          type: >-
            <xref
            uid="@azure/communication-administration.CreateReservationRequest"
            />
          description: Request properties to constraint the search scope.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.BeginReservePhoneNumbersOptions"
            />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.PollerLike" />&lt;<xref
          uid="@azure/core-lro.PollOperationState" />&lt;<xref
          uid="@azure/communication-administration.PhoneNumberReservation"
          />&gt;, <xref
          uid="@azure/communication-administration.PhoneNumberReservation"
          />&gt;&gt;
  - name: cancelReservation(string, OperationOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.cancelReservation
    package: '@azure/communication-administration'
    summary: Cancels the reservation associated with a given id.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function cancelReservation(reservationId: string, options?:
        OperationOptions): Promise<{ _response: HttpResponse }>
      parameters:
        - id: reservationId
          type: string
          description: The id of the reservation returned by createReservation.
        - id: options
          type: <xref uid="@azure/core-http.OperationOptions" />
          description: Additional request options.
      return:
        description: ''
        type: 'Promise&lt;{ _response: HttpResponse }&gt;'
  - name: >-
      configurePhoneNumber(ConfigurePhoneNumberRequest,
      ConfigurePhoneNumberOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.configurePhoneNumber
    package: '@azure/communication-administration'
    summary: Configures a phone number, for example to assign a callbackUrl.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function configurePhoneNumber(config: ConfigurePhoneNumberRequest,
        options?: ConfigurePhoneNumberOptions): Promise<{ _response:
        HttpResponse }>
      parameters:
        - id: config
          type: >-
            <xref
            uid="@azure/communication-administration.ConfigurePhoneNumberRequest"
            />
          description: The configuration details
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.ConfigurePhoneNumberOptions"
            />
          description: Additional request options.
      return:
        description: ''
        type: 'Promise&lt;{ _response: HttpResponse }&gt;'
  - name: getAreaCodes(GetAreaCodesRequest, OperationOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.getAreaCodes
    package: '@azure/communication-administration'
    summary: Gets a list of the supported area codes based on location.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAreaCodes(request: GetAreaCodesRequest, options?:
        OperationOptions): Promise<GetAreaCodesResponse>
      parameters:
        - id: request
          type: >-
            <xref uid="@azure/communication-administration.GetAreaCodesRequest"
            />
          description: Request properties to constraint the search scope.
        - id: options
          type: <xref uid="@azure/core-http.OperationOptions" />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-administration.GetAreaCodesResponse" />&gt;
  - name: getCapabilitiesUpdate(string, OperationOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.getCapabilitiesUpdate
    package: '@azure/communication-administration'
    summary: Get the update capabilities request associated with a given id.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getCapabilitiesUpdate(capabilitiesUpdateId: string, options?:
        OperationOptions): Promise<GetCapabilitiesUpdateResponse>
      parameters:
        - id: capabilitiesUpdateId
          type: string
          description: The id associated with the request.
        - id: options
          type: <xref uid="@azure/core-http.OperationOptions" />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-administration.GetCapabilitiesUpdateResponse"
          />&gt;
  - name: getPhoneNumberConfiguration(string, OperationOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.getPhoneNumberConfiguration
    package: '@azure/communication-administration'
    summary: Gets the configuration for a given phone number.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getPhoneNumberConfiguration(phoneNumber: string, options?:
        OperationOptions): Promise<GetPhoneNumberConfigurationResponse>
      parameters:
        - id: phoneNumber
          type: string
          description: >-
            The E.164 representation of the phone number whose configuration is
            requested.
        - id: options
          type: <xref uid="@azure/core-http.OperationOptions" />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-administration.GetPhoneNumberConfigurationResponse"
          />&gt;
  - name: >-
      getPhonePlanLocationOptions(GetPhonePlanLocationOptionsRequest,
      PageableLocalizationOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.getPhonePlanLocationOptions
    package: '@azure/communication-administration'
    summary: Gets the location options for a given phone plan.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getPhonePlanLocationOptions(request:
        GetPhonePlanLocationOptionsRequest, options?:
        PageableLocalizationOptions):
        Promise<GetPhonePlanLocationOptionsResponse>
      parameters:
        - id: request
          type: >-
            <xref
            uid="@azure/communication-administration.GetPhonePlanLocationOptionsRequest"
            />
          description: Request properties to constraint the search scope.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.PageableLocalizationOptions"
            />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-administration.GetPhonePlanLocationOptionsResponse"
          />&gt;
  - name: getReservation(string, OperationOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.getReservation
    package: '@azure/communication-administration'
    summary: |-
      Gets the reservation associated with a given id.
      Use this function to query the status of a phone number reservation.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getReservation(reservationId: string, options?:
        OperationOptions): Promise<GetReservationResponse>
      parameters:
        - id: reservationId
          type: string
          description: The id of the reservation returned by createReservation.
        - id: options
          type: <xref uid="@azure/core-http.OperationOptions" />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-administration.GetReservationResponse"
          />&gt;
  - name: listPhoneNumbers(PageableLocalizationOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.listPhoneNumbers
    package: '@azure/communication-administration'
    summary: |-
      Iterates the acquired phone numbers.

      Example usage:
      ```ts
      let client = new PhoneNumberAdministrationClient(credentials);
      for await (const acquired of client.listPhoneNumbers()) {
        console.log("phone number: ", acquired.phoneNumber);
      }
      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listPhoneNumbers(options?: PageableLocalizationOptions):
        PagedAsyncIterableIterator<AcquiredPhoneNumber, AcquiredPhoneNumber[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.PageableLocalizationOptions"
            />
          description: The optional parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/communication-administration.AcquiredPhoneNumber" />,
          <xref uid="@azure/communication-administration.AcquiredPhoneNumber"
          />[], <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listPhonePlanGroups(string, ListPhonePlanGroupsOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.listPhonePlanGroups
    package: '@azure/communication-administration'
    summary: |-
      Iterates the available phone plan groups for a country.

      Example usage:
      ```ts
      let client = new PhoneNumberAdministrationClient(credentials);
      for await (const phonePlanGroup of client.listPhonePlanGroups("CA")) {
        console.log("plan group id: ", phonePlanGroup.phonePlanGroupId);
      }
      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listPhonePlanGroups(countryCode: string, options?:
        ListPhonePlanGroupsOptions): PagedAsyncIterableIterator<PhonePlanGroup,
        PhonePlanGroup[], PageSettings>
      parameters:
        - id: countryCode
          type: string
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.ListPhonePlanGroupsOptions"
            />
          description: The optional parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/communication-administration.PhonePlanGroup" />, <xref
          uid="@azure/communication-administration.PhonePlanGroup" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listPhonePlans(ListPhonePlansRequest, PageableLocalizationOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.listPhonePlans
    package: '@azure/communication-administration'
    summary: >-
      Iterates the available phone plan for a plan group.


      Example usage:

      ```ts

      let client = new PhoneNumberAdministrationClient(credentials);

      for await (const phonePlan of client.listPhonePlanGroups(PLAN_GROUP_INFO))
      {
        console.log("plan id: ", phonePlan.phonePlanId);
      }


      Gets all available phone plans for a given plan group.

      @param planGroupInfo Information need to search for plans.

      @param options Additional request options.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listPhonePlans(planGroupInfo: ListPhonePlansRequest, options?:
        PageableLocalizationOptions): PagedAsyncIterableIterator<PhonePlan,
        PhonePlan[], PageSettings>
      parameters:
        - id: planGroupInfo
          type: >-
            <xref
            uid="@azure/communication-administration.ListPhonePlansRequest" />
          description: ''
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.PageableLocalizationOptions"
            />
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/communication-administration.PhonePlan" />, <xref
          uid="@azure/communication-administration.PhonePlan" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listReleases(PageableOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.listReleases
    package: '@azure/communication-administration'
    summary: |-
      Iterates the releases created by the Azure resource.

      Example usage:
      ```ts
      let client = new PhoneNumberAdministrationClient(credentials);
      for await (const entity of client.listReleases()) {
        console.log("id: ", entity.id);
      }
      ```
      Gets all releases created by the Azure resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listReleases(options?: PageableOptions):
        PagedAsyncIterableIterator<PhoneNumberEntity, PhoneNumberEntity[],
        PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/communication-administration.PageableOptions" />
          description: Optional parameters for the underlying HTTP request.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/communication-administration.PhoneNumberEntity" />, <xref
          uid="@azure/communication-administration.PhoneNumberEntity" />[],
          <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listSearches(PageableOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.listSearches
    package: '@azure/communication-administration'
    summary: |-
      Iterates the searches created by the Azure resource.

      Example usage:
      ```ts
      let client = new PhoneNumberAdministrationClient(credentials);
      for await (const entity of client.listSearches()) {
        console.log("id: ", entity.id);
      }
      ```
      Gets all searches created by the Azure resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listSearches(options?: PageableOptions):
        PagedAsyncIterableIterator<PhoneNumberEntity, PhoneNumberEntity[],
        PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/communication-administration.PageableOptions" />
          description: Optional parameters for the underlying HTTP request.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/communication-administration.PhoneNumberEntity" />, <xref
          uid="@azure/communication-administration.PhoneNumberEntity" />[],
          <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: listSupportedCountries(PageableLocalizationOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.listSupportedCountries
    package: '@azure/communication-administration'
    summary: |-
      Iterates the supported countries.

      Example usage:
      ```ts
      let client = new PhoneNumberAdministrationClient(credentials);
      for await (const country of client.listSupportedCountries()) {
        console.log("country name: ", country.localizedName);
      }
      ```
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listSupportedCountries(options?: PageableLocalizationOptions):
        PagedAsyncIterableIterator<PhoneNumberCountry, PhoneNumberCountry[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.PageableLocalizationOptions"
            />
          description: The optional parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/communication-administration.PhoneNumberCountry" />, <xref
          uid="@azure/communication-administration.PhoneNumberCountry" />[],
          <xref uid="@azure/core-paging.PageSettings" />&gt;
  - name: unconfigurePhoneNumber(string, OperationOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.unconfigurePhoneNumber
    package: '@azure/communication-administration'
    summary: Unconfigure a phone number, resetting its' configuration.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function unconfigurePhoneNumber(phoneNumber: string, options?:
        OperationOptions): Promise<{ _response: HttpResponse }>
      parameters:
        - id: phoneNumber
          type: string
          description: Phone Number to unconfigure.
        - id: options
          type: <xref uid="@azure/core-http.OperationOptions" />
          description: Additional request options.
      return:
        description: ''
        type: 'Promise&lt;{ _response: HttpResponse }&gt;'
  - name: >-
      updatePhoneNumbersCapabilities(PhoneNumberCapabilitiesUpdates,
      UpdateCapabilitiesOptions)
    uid: >-
      @azure/communication-administration.PhoneNumberAdministrationClient.updatePhoneNumbersCapabilities
    package: '@azure/communication-administration'
    summary: |-
      Updates the capabilities for a list of phone numbers.
      The response includes the id of the created update capabilities request,
      remember that id for subsequent calls to getCapabilitiesUpdate.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updatePhoneNumbersCapabilities(phoneNumberCapabilitiesUpdates:
        PhoneNumberCapabilitiesUpdates, options?: UpdateCapabilitiesOptions):
        Promise<UpdateNumbersCapabilitiesResponse>
      parameters:
        - id: phoneNumberCapabilitiesUpdates
          type: >-
            <xref
            uid="@azure/communication-administration.PhoneNumberCapabilitiesUpdates"
            />
          description: >-
            Dictionary containing a list of phone numbers and their capabilities
            updates.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-administration.UpdateCapabilitiesOptions"
            />
          description: Additional request options.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-administration.UpdateNumbersCapabilitiesResponse"
          />&gt;
