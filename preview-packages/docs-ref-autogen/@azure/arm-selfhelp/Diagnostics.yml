### YamlMime:TSType
name: Diagnostics
uid: '@azure/arm-selfhelp.Diagnostics'
package: '@azure/arm-selfhelp'
summary: Interface representing a Diagnostics.
fullName: Diagnostics
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: beginCreate(string, string, DiagnosticsCreateOptionalParams)
    uid: '@azure/arm-selfhelp.Diagnostics.beginCreate'
    package: '@azure/arm-selfhelp'
    summary: >-
      Creates a diagnostic for the specific resource using solutionId and
      requiredInputs* from discovery

      solutions. <br/>Diagnostics are powerful solutions that access product
      resources or other relevant

      data and provide the root cause of the issue and the steps to address the
      issue.<br/><br/> <b>Note:

      </b> ‘requiredInputs’ from Discovery solutions response must be passed via
      ‘additionalParameters’ as

      an input to Diagnostics API.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(scope: string, diagnosticsResourceName: string,
        options?: DiagnosticsCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<DiagnosticResource>,
        DiagnosticResource>>
      parameters:
        - id: scope
          type: string
          description: |-
            scope = resourceUri of affected resource.<br/> For example:
                         /subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6/resourcegroups/myresourceGroup/providers/Microsoft.KeyVault/vaults/test-keyvault-non-read
        - id: diagnosticsResourceName
          type: string
          description: Unique resource name for insight resources
        - id: options
          type: <xref uid="@azure/arm-selfhelp.DiagnosticsCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-selfhelp.DiagnosticResource" />&gt;, <xref
          uid="@azure/arm-selfhelp.DiagnosticResource" />&gt;&gt;
  - name: beginCreateAndWait(string, string, DiagnosticsCreateOptionalParams)
    uid: '@azure/arm-selfhelp.Diagnostics.beginCreateAndWait'
    package: '@azure/arm-selfhelp'
    summary: >-
      Creates a diagnostic for the specific resource using solutionId and
      requiredInputs* from discovery

      solutions. <br/>Diagnostics are powerful solutions that access product
      resources or other relevant

      data and provide the root cause of the issue and the steps to address the
      issue.<br/><br/> <b>Note:

      </b> ‘requiredInputs’ from Discovery solutions response must be passed via
      ‘additionalParameters’ as

      an input to Diagnostics API.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(scope: string, diagnosticsResourceName:
        string, options?: DiagnosticsCreateOptionalParams):
        Promise<DiagnosticResource>
      parameters:
        - id: scope
          type: string
          description: |-
            scope = resourceUri of affected resource.<br/> For example:
                         /subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6/resourcegroups/myresourceGroup/providers/Microsoft.KeyVault/vaults/test-keyvault-non-read
        - id: diagnosticsResourceName
          type: string
          description: Unique resource name for insight resources
        - id: options
          type: <xref uid="@azure/arm-selfhelp.DiagnosticsCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-selfhelp.DiagnosticResource" />&gt;
  - name: get(string, string, DiagnosticsGetOptionalParams)
    uid: '@azure/arm-selfhelp.Diagnostics.get'
    package: '@azure/arm-selfhelp'
    summary: >-
      Get the diagnostics using the 'diagnosticsResourceName' you chose while
      creating the diagnostic.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, diagnosticsResourceName: string, options?:
        DiagnosticsGetOptionalParams): Promise<DiagnosticResource>
      parameters:
        - id: scope
          type: string
          description: |-
            scope = resourceUri of affected resource.<br/> For example:
                         /subscriptions/0d0fcd2e-c4fd-4349-8497-200edb3923c6/resourcegroups/myresourceGroup/providers/Microsoft.KeyVault/vaults/test-keyvault-non-read
        - id: diagnosticsResourceName
          type: string
          description: Unique resource name for insight resources
        - id: options
          type: <xref uid="@azure/arm-selfhelp.DiagnosticsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-selfhelp.DiagnosticResource" />&gt;
