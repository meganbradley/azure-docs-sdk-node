### YamlMime:TSType
name: StorageTargetOperations
uid: '@azure/arm-storagecache.StorageTargetOperations'
package: '@azure/arm-storagecache'
summary: Interface representing a StorageTargetOperations.
fullName: StorageTargetOperations
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: beginFlush(string, string, string, StorageTargetFlushOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargetOperations.beginFlush'
    package: '@azure/arm-storagecache'
    summary: >-
      Tells the cache to write all dirty data to the Storage Target's backend
      storage. Client requests to

      this storage target's namespace will return errors until the flush
      operation completes.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginFlush(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?: StorageTargetFlushOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref uid="@azure/arm-storagecache.StorageTargetFlushOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: >-
      beginFlushAndWait(string, string, string,
      StorageTargetFlushOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargetOperations.beginFlushAndWait'
    package: '@azure/arm-storagecache'
    summary: >-
      Tells the cache to write all dirty data to the Storage Target's backend
      storage. Client requests to

      this storage target's namespace will return errors until the flush
      operation completes.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginFlushAndWait(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?: StorageTargetFlushOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref uid="@azure/arm-storagecache.StorageTargetFlushOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginInvalidate(string, string, string,
      StorageTargetInvalidateOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargetOperations.beginInvalidate'
    package: '@azure/arm-storagecache'
    summary: >-
      Invalidate all cached data for a storage target. Cached files are
      discarded and fetched from the

      back end on the next request.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginInvalidate(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?:
        StorageTargetInvalidateOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetInvalidateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: >-
      beginInvalidateAndWait(string, string, string,
      StorageTargetInvalidateOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargetOperations.beginInvalidateAndWait'
    package: '@azure/arm-storagecache'
    summary: >-
      Invalidate all cached data for a storage target. Cached files are
      discarded and fetched from the

      back end on the next request.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginInvalidateAndWait(resourceGroupName: string, cacheName:
        string, storageTargetName: string, options?:
        StorageTargetInvalidateOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetInvalidateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginResume(string, string, string, StorageTargetResumeOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargetOperations.beginResume'
    package: '@azure/arm-storagecache'
    summary: Resumes client access to a previously suspended storage target.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginResume(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?: StorageTargetResumeOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetResumeOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: >-
      beginResumeAndWait(string, string, string,
      StorageTargetResumeOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargetOperations.beginResumeAndWait'
    package: '@azure/arm-storagecache'
    summary: Resumes client access to a previously suspended storage target.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginResumeAndWait(resourceGroupName: string, cacheName:
        string, storageTargetName: string, options?:
        StorageTargetResumeOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetResumeOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: beginSuspend(string, string, string, StorageTargetSuspendOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargetOperations.beginSuspend'
    package: '@azure/arm-storagecache'
    summary: Suspends client access to a storage target.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginSuspend(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?:
        StorageTargetSuspendOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetSuspendOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: >-
      beginSuspendAndWait(string, string, string,
      StorageTargetSuspendOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargetOperations.beginSuspendAndWait'
    package: '@azure/arm-storagecache'
    summary: Suspends client access to a storage target.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginSuspendAndWait(resourceGroupName: string, cacheName:
        string, storageTargetName: string, options?:
        StorageTargetSuspendOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetSuspendOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
