### YamlMime:TSType
name: StorageTargets
uid: '@azure/arm-storagecache.StorageTargets'
package: '@azure/arm-storagecache'
summary: Interface representing a StorageTargets.
fullName: StorageTargets
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, StorageTarget,
      StorageTargetsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargets.beginCreateOrUpdate'
    package: '@azure/arm-storagecache'
    summary: >-
      Create or update a Storage Target. This operation is allowed at any time,
      but if the cache is down

      or unhealthy, the actual creation/modification of the Storage Target may
      be delayed until the cache

      is healthy again.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, cacheName:
        string, storageTargetName: string, storagetarget: StorageTarget,
        options?: StorageTargetsCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<StorageTarget>, StorageTarget>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: storagetarget
          type: <xref uid="@azure/arm-storagecache.StorageTarget" />
          description: Object containing the definition of a Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;<xref
          uid="@azure/arm-storagecache.StorageTarget" />&gt;, <xref
          uid="@azure/arm-storagecache.StorageTarget" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, StorageTarget,
      StorageTargetsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargets.beginCreateOrUpdateAndWait'
    package: '@azure/arm-storagecache'
    summary: >-
      Create or update a Storage Target. This operation is allowed at any time,
      but if the cache is down

      or unhealthy, the actual creation/modification of the Storage Target may
      be delayed until the cache

      is healthy again.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        cacheName: string, storageTargetName: string, storagetarget:
        StorageTarget, options?: StorageTargetsCreateOrUpdateOptionalParams):
        Promise<StorageTarget>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: storagetarget
          type: <xref uid="@azure/arm-storagecache.StorageTarget" />
          description: Object containing the definition of a Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-storagecache.StorageTarget" />&gt;
  - name: beginDelete(string, string, string, StorageTargetsDeleteOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargets.beginDelete'
    package: '@azure/arm-storagecache'
    summary: >-
      Removes a Storage Target from a cache. This operation is allowed at any
      time, but if the cache is

      down or unhealthy, the actual removal of the Storage Target may be delayed
      until the cache is

      healthy again. Note that if the cache has data to flush to the Storage
      Target, the data will be

      flushed before the Storage Target will be deleted.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?:
        StorageTargetsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string, string,
      StorageTargetsDeleteOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargets.beginDeleteAndWait'
    package: '@azure/arm-storagecache'
    summary: >-
      Removes a Storage Target from a cache. This operation is allowed at any
      time, but if the cache is

      down or unhealthy, the actual removal of the Storage Target may be delayed
      until the cache is

      healthy again. Note that if the cache has data to flush to the Storage
      Target, the data will be

      flushed before the Storage Target will be deleted.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, cacheName:
        string, storageTargetName: string, options?:
        StorageTargetsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginDnsRefresh(string, string, string,
      StorageTargetsDnsRefreshOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargets.beginDnsRefresh'
    package: '@azure/arm-storagecache'
    summary: Tells a storage target to refresh its DNS information.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDnsRefresh(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?:
        StorageTargetsDnsRefreshOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetsDnsRefreshOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: >-
      beginDnsRefreshAndWait(string, string, string,
      StorageTargetsDnsRefreshOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargets.beginDnsRefreshAndWait'
    package: '@azure/arm-storagecache'
    summary: Tells a storage target to refresh its DNS information.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDnsRefreshAndWait(resourceGroupName: string, cacheName:
        string, storageTargetName: string, options?:
        StorageTargetsDnsRefreshOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetsDnsRefreshOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginRestoreDefaults(string, string, string,
      StorageTargetsRestoreDefaultsOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargets.beginRestoreDefaults'
    package: '@azure/arm-storagecache'
    summary: Tells a storage target to restore its settings to their default values.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRestoreDefaults(resourceGroupName: string, cacheName:
        string, storageTargetName: string, options?:
        StorageTargetsRestoreDefaultsOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetsRestoreDefaultsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;SimplePollerLike&lt;OperationState&lt;void&gt;,
          void&gt;&gt;
  - name: >-
      beginRestoreDefaultsAndWait(string, string, string,
      StorageTargetsRestoreDefaultsOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargets.beginRestoreDefaultsAndWait'
    package: '@azure/arm-storagecache'
    summary: Tells a storage target to restore its settings to their default values.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRestoreDefaultsAndWait(resourceGroupName: string,
        cacheName: string, storageTargetName: string, options?:
        StorageTargetsRestoreDefaultsOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetsRestoreDefaultsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, StorageTargetsGetOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargets.get'
    package: '@azure/arm-storagecache'
    summary: Returns a Storage Target from a cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, cacheName: string,
        storageTargetName: string, options?: StorageTargetsGetOptionalParams):
        Promise<StorageTarget>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: storageTargetName
          type: string
          description: Name of Storage Target.
        - id: options
          type: >-
            <xref uid="@azure/arm-storagecache.StorageTargetsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-storagecache.StorageTarget" />&gt;
  - name: listByCache(string, string, StorageTargetsListByCacheOptionalParams)
    uid: '@azure/arm-storagecache.StorageTargets.listByCache'
    package: '@azure/arm-storagecache'
    summary: Returns a list of Storage Targets for the specified cache.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByCache(resourceGroupName: string, cacheName: string,
        options?: StorageTargetsListByCacheOptionalParams):
        PagedAsyncIterableIterator<StorageTarget, StorageTarget[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: cacheName
          type: string
          description: >-
            Name of cache. Length of name must not be greater than 80 and chars
            must be from
                             the [-0-9a-zA-Z_] char class.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-storagecache.StorageTargetsListByCacheOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-storagecache.StorageTarget" />, <xref
          uid="@azure/arm-storagecache.StorageTarget" />[], PageSettings&gt;
