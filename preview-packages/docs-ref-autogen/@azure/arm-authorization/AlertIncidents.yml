### YamlMime:TSType
name: AlertIncidents
uid: '@azure/arm-authorization.AlertIncidents'
package: '@azure/arm-authorization'
summary: Interface representing a AlertIncidents.
fullName: AlertIncidents
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: get(string, string, string, AlertIncidentsGetOptionalParams)
    uid: '@azure/arm-authorization.AlertIncidents.get'
    package: '@azure/arm-authorization'
    summary: Get the specified alert incident.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, alertId: string, alertIncidentId: string,
        options?: AlertIncidentsGetOptionalParams): Promise<AlertIncident>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the alert incident. The scope can be any REST resource
            instance. For
                         example, use '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a
                         subscription,
                         '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
                         for a resource group, and
                         '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
                         for a resource.
        - id: alertId
          type: string
          description: The name of the alert.
        - id: alertIncidentId
          type: string
          description: The name of the alert incident to get.
        - id: options
          type: >-
            <xref uid="@azure/arm-authorization.AlertIncidentsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-authorization.AlertIncident" />&gt;
  - name: listForScope(string, string, AlertIncidentsListForScopeOptionalParams)
    uid: '@azure/arm-authorization.AlertIncidents.listForScope'
    package: '@azure/arm-authorization'
    summary: Gets alert incidents for a resource scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForScope(scope: string, alertId: string, options?:
        AlertIncidentsListForScopeOptionalParams):
        PagedAsyncIterableIterator<AlertIncident, AlertIncident[], PageSettings>
      parameters:
        - id: scope
          type: string
          description: The scope of the alert incident.
        - id: alertId
          type: string
          description: The name of the alert.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization.AlertIncidentsListForScopeOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-authorization.AlertIncident" />, <xref
          uid="@azure/arm-authorization.AlertIncident" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: remediate(string, string, string, AlertIncidentsRemediateOptionalParams)
    uid: '@azure/arm-authorization.AlertIncidents.remediate'
    package: '@azure/arm-authorization'
    summary: Remediate an alert incident.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function remediate(scope: string, alertId: string, alertIncidentId:
        string, options?: AlertIncidentsRemediateOptionalParams): Promise<void>
      parameters:
        - id: scope
          type: string
          description: The scope of the alert incident.
        - id: alertId
          type: string
          description: The name of the alert.
        - id: alertIncidentId
          type: string
          description: The name of the alert incident to remediate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization.AlertIncidentsRemediateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
