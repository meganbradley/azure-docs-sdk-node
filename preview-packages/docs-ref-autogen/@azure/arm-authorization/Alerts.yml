### YamlMime:TSType
name: Alerts
uid: '@azure/arm-authorization.Alerts'
package: '@azure/arm-authorization'
summary: Interface representing a Alerts.
fullName: Alerts
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: beginRefresh(string, string, AlertsRefreshOptionalParams)
    uid: '@azure/arm-authorization.Alerts.beginRefresh'
    package: '@azure/arm-authorization'
    summary: Refresh an alert.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRefresh(scope: string, alertId: string, options?:
        AlertsRefreshOptionalParams):
        Promise<SimplePollerLike<OperationState<AlertsRefreshResponse>,
        AlertsRefreshResponse>>
      parameters:
        - id: scope
          type: string
          description: The scope of the alert.
        - id: alertId
          type: string
          description: The name of the alert to refresh.
        - id: options
          type: <xref uid="@azure/arm-authorization.AlertsRefreshOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-authorization.AlertsRefreshResponse" />&gt;, <xref
          uid="@azure/arm-authorization.AlertsRefreshResponse" />&gt;&gt;
  - name: beginRefreshAll(string, AlertsRefreshAllOptionalParams)
    uid: '@azure/arm-authorization.Alerts.beginRefreshAll'
    package: '@azure/arm-authorization'
    summary: Refresh all alerts for a resource scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRefreshAll(scope: string, options?:
        AlertsRefreshAllOptionalParams):
        Promise<SimplePollerLike<OperationState<AlertsRefreshAllResponse>,
        AlertsRefreshAllResponse>>
      parameters:
        - id: scope
          type: string
          description: The scope of the alert.
        - id: options
          type: >-
            <xref uid="@azure/arm-authorization.AlertsRefreshAllOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-authorization.AlertsRefreshAllResponse" />&gt;, <xref
          uid="@azure/arm-authorization.AlertsRefreshAllResponse" />&gt;&gt;
  - name: beginRefreshAllAndWait(string, AlertsRefreshAllOptionalParams)
    uid: '@azure/arm-authorization.Alerts.beginRefreshAllAndWait'
    package: '@azure/arm-authorization'
    summary: Refresh all alerts for a resource scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRefreshAllAndWait(scope: string, options?:
        AlertsRefreshAllOptionalParams): Promise<AlertsRefreshAllResponse>
      parameters:
        - id: scope
          type: string
          description: The scope of the alert.
        - id: options
          type: >-
            <xref uid="@azure/arm-authorization.AlertsRefreshAllOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-authorization.AlertsRefreshAllResponse" />&gt;
  - name: beginRefreshAndWait(string, string, AlertsRefreshOptionalParams)
    uid: '@azure/arm-authorization.Alerts.beginRefreshAndWait'
    package: '@azure/arm-authorization'
    summary: Refresh an alert.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRefreshAndWait(scope: string, alertId: string, options?:
        AlertsRefreshOptionalParams): Promise<AlertsRefreshResponse>
      parameters:
        - id: scope
          type: string
          description: The scope of the alert.
        - id: alertId
          type: string
          description: The name of the alert to refresh.
        - id: options
          type: <xref uid="@azure/arm-authorization.AlertsRefreshOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-authorization.AlertsRefreshResponse"
          />&gt;
  - name: get(string, string, AlertsGetOptionalParams)
    uid: '@azure/arm-authorization.Alerts.get'
    package: '@azure/arm-authorization'
    summary: Get the specified alert.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, alertId: string, options?:
        AlertsGetOptionalParams): Promise<Alert>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the alert. The scope can be any REST resource instance.
            For example, use
                         '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/' for a subscription,
                         '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
                         for a resource group, and
                         '/providers/Microsoft.Subscription/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'
                         for a resource.
        - id: alertId
          type: string
          description: The name of the alert to get.
        - id: options
          type: <xref uid="@azure/arm-authorization.AlertsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-authorization.Alert" />&gt;
  - name: listForScope(string, AlertsListForScopeOptionalParams)
    uid: '@azure/arm-authorization.Alerts.listForScope'
    package: '@azure/arm-authorization'
    summary: Gets alerts for a resource scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForScope(scope: string, options?:
        AlertsListForScopeOptionalParams): PagedAsyncIterableIterator<Alert,
        Alert[], PageSettings>
      parameters:
        - id: scope
          type: string
          description: The scope of the alert.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization.AlertsListForScopeOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-authorization.Alert" />, <xref
          uid="@azure/arm-authorization.Alert" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: update(string, string, Alert, AlertsUpdateOptionalParams)
    uid: '@azure/arm-authorization.Alerts.update'
    package: '@azure/arm-authorization'
    summary: Update an alert.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(scope: string, alertId: string, parameters: Alert,
        options?: AlertsUpdateOptionalParams): Promise<void>
      parameters:
        - id: scope
          type: string
          description: The scope of the alert.
        - id: alertId
          type: string
          description: The name of the alert to dismiss.
        - id: parameters
          type: <xref uid="@azure/arm-authorization.Alert" />
          description: Parameters for the alert.
        - id: options
          type: <xref uid="@azure/arm-authorization.AlertsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
