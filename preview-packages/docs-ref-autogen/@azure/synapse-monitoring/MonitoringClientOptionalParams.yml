### YamlMime:TSType
name: MonitoringClientOptionalParams
uid: '@azure/synapse-monitoring.MonitoringClientOptionalParams'
package: '@azure/synapse-monitoring'
summary: Optional parameters.
fullName: MonitoringClientOptionalParams
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: apiVersion
    uid: '@azure/synapse-monitoring.MonitoringClientOptionalParams.apiVersion'
    package: '@azure/synapse-monitoring'
    summary: Api Version
    fullName: apiVersion
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'apiVersion?: string'
      return:
        description: ''
        type: string
  - name: endpoint
    uid: '@azure/synapse-monitoring.MonitoringClientOptionalParams.endpoint'
    package: '@azure/synapse-monitoring'
    summary: Overrides client endpoint.
    fullName: endpoint
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'endpoint?: string'
      return:
        description: ''
        type: string
inheritedProperties:
  - name: clientRequestIdHeaderName
    uid: >-
      @azure/synapse-monitoring.MonitoringClientOptionalParams.clientRequestIdHeaderName
    package: '@azure/synapse-monitoring'
    summary: >-
      If specified, a GenerateRequestIdPolicy will be added to the HTTP pipeline
      that will add a

      header to all outgoing requests with this header name and a random UUID as
      the request ID.
    fullName: clientRequestIdHeaderName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'clientRequestIdHeaderName?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      coreHttp.ServiceClientOptions.clientRequestIdHeaderName
  - name: credentialScopes
    uid: '@azure/synapse-monitoring.MonitoringClientOptionalParams.credentialScopes'
    package: '@azure/synapse-monitoring'
    summary: If specified, will be used to build the BearerTokenAuthenticationPolicy.
    fullName: credentialScopes
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'credentialScopes?: string | string[]'
      return:
        description: ''
        type: string | string[]
    inheritanceDescription: <b>Inherited From</b> coreHttp.ServiceClientOptions.credentialScopes
  - name: deserializationContentTypes
    uid: >-
      @azure/synapse-monitoring.MonitoringClientOptionalParams.deserializationContentTypes
    package: '@azure/synapse-monitoring'
    summary: The content-types that will be associated with JSON or XML serialization.
    fullName: deserializationContentTypes
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'deserializationContentTypes?: DeserializationContentTypes'
      return:
        description: ''
        type: <xref uid="@azure/core-http.DeserializationContentTypes" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      coreHttp.ServiceClientOptions.deserializationContentTypes
  - name: generateClientRequestIdHeader
    uid: >-
      @azure/synapse-monitoring.MonitoringClientOptionalParams.generateClientRequestIdHeader
    package: '@azure/synapse-monitoring'
    summary: >-
      Whether or not to generate a client request ID header for each HTTP
      request.
    fullName: generateClientRequestIdHeader
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'generateClientRequestIdHeader?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: >-
      <b>Inherited From</b>
      coreHttp.ServiceClientOptions.generateClientRequestIdHeader
  - name: httpClient
    uid: '@azure/synapse-monitoring.MonitoringClientOptionalParams.httpClient'
    package: '@azure/synapse-monitoring'
    summary: The HttpClient that will be used to send HTTP requests.
    fullName: httpClient
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'httpClient?: HttpClient'
      return:
        description: ''
        type: <xref uid="@azure/core-http.HttpClient" />
    inheritanceDescription: <b>Inherited From</b> coreHttp.ServiceClientOptions.httpClient
  - name: httpPipelineLogger
    uid: >-
      @azure/synapse-monitoring.MonitoringClientOptionalParams.httpPipelineLogger
    package: '@azure/synapse-monitoring'
    summary: >-
      The HttpPipelineLogger that can be used to debug RequestPolicies within
      the HTTP pipeline.
    fullName: httpPipelineLogger
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'httpPipelineLogger?: HttpPipelineLogger'
      return:
        description: ''
        type: <xref uid="@azure/core-http.HttpPipelineLogger" />
    inheritanceDescription: <b>Inherited From</b> coreHttp.ServiceClientOptions.httpPipelineLogger
  - name: noRetryPolicy
    uid: '@azure/synapse-monitoring.MonitoringClientOptionalParams.noRetryPolicy'
    package: '@azure/synapse-monitoring'
    summary: If set to true, turn off the default retry policy.
    fullName: noRetryPolicy
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'noRetryPolicy?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> coreHttp.ServiceClientOptions.noRetryPolicy
  - name: proxySettings
    uid: '@azure/synapse-monitoring.MonitoringClientOptionalParams.proxySettings'
    package: '@azure/synapse-monitoring'
    summary: Proxy settings which will be used for every HTTP request (Node.js only).
    fullName: proxySettings
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'proxySettings?: ProxySettings'
      return:
        description: ''
        type: <xref uid="@azure/core-http.ProxySettings" />
    inheritanceDescription: <b>Inherited From</b> coreHttp.ServiceClientOptions.proxySettings
  - name: requestPolicyFactories
    uid: >-
      @azure/synapse-monitoring.MonitoringClientOptionalParams.requestPolicyFactories
    package: '@azure/synapse-monitoring'
    summary: >-
      An array of factories which get called to create the RequestPolicy
      pipeline used to send a HTTP

      request on the wire, or a function that takes in the
      defaultRequestPolicyFactories and returns

      the requestPolicyFactories that will be used.
    fullName: requestPolicyFactories
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        requestPolicyFactories?: RequestPolicyFactory[] |
        (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void |
        RequestPolicyFactory[]
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-http.RequestPolicyFactory" />[] |
          (defaultRequestPolicyFactories: RequestPolicyFactory[]) =&gt; void |
          RequestPolicyFactory[]
    inheritanceDescription: <b>Inherited From</b> coreHttp.ServiceClientOptions.requestPolicyFactories
  - name: rpRegistrationRetryTimeout
    uid: >-
      @azure/synapse-monitoring.MonitoringClientOptionalParams.rpRegistrationRetryTimeout
    package: '@azure/synapse-monitoring'
    summary: >-
      Gets or sets the retry timeout in seconds for AutomaticRPRegistration.
      Default value is 30.
    fullName: rpRegistrationRetryTimeout
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'rpRegistrationRetryTimeout?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      coreHttp.ServiceClientOptions.rpRegistrationRetryTimeout
  - name: userAgent
    uid: '@azure/synapse-monitoring.MonitoringClientOptionalParams.userAgent'
    package: '@azure/synapse-monitoring'
    summary: >-
      The string to be set to the telemetry header while sending the request, or
      a function that

      takes in the default user-agent string and returns the user-agent string
      that will be used.
    fullName: userAgent
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'userAgent?: string | (defaultUserAgent: string) => string'
      return:
        description: ''
        type: 'string | (defaultUserAgent: string) =&gt; string'
    inheritanceDescription: <b>Inherited From</b> coreHttp.ServiceClientOptions.userAgent
  - name: userAgentHeaderName
    uid: >-
      @azure/synapse-monitoring.MonitoringClientOptionalParams.userAgentHeaderName
    package: '@azure/synapse-monitoring'
    summary: >-
      The header name to use for the telemetry header while sending the request.
      If this is not

      specified, then "User-Agent" will be used when running on Node.js and
      "x-ms-useragent" will

      be used when running in a browser.
    fullName: userAgentHeaderName
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        userAgentHeaderName?: string | (defaultUserAgentHeaderName: string) =>
        string
      return:
        description: ''
        type: 'string | (defaultUserAgentHeaderName: string) =&gt; string'
    inheritanceDescription: <b>Inherited From</b> coreHttp.ServiceClientOptions.userAgentHeaderName
  - name: withCredentials
    uid: '@azure/synapse-monitoring.MonitoringClientOptionalParams.withCredentials'
    package: '@azure/synapse-monitoring'
    summary: >-
      Whether to include credentials in CORS requests in the browser.

      See
      https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials
      for more information.
    fullName: withCredentials
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'withCredentials?: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> coreHttp.ServiceClientOptions.withCredentials
extends: <xref uid="@azure/core-http.ServiceClientOptions" />
