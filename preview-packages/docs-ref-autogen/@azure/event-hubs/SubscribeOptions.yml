### YamlMime:TSType
name: SubscribeOptions
uid: '@azure/event-hubs.SubscribeOptions'
package: '@azure/event-hubs'
summary: >-
  Options to configure the `subscribe` method on the `EventHubConsumerClient`.

  For example, `{ maxBatchSize: 20, maxWaitTimeInSeconds: 120, startPosition: {
  sequenceNumber: 123 } }`
fullName: SubscribeOptions
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: maxBatchSize
    uid: '@azure/event-hubs.SubscribeOptions.maxBatchSize'
    package: '@azure/event-hubs'
    summary: The number of events to request per batch
    fullName: maxBatchSize
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxBatchSize?: number'
      return:
        description: ''
        type: number
  - name: maxWaitTimeInSeconds
    uid: '@azure/event-hubs.SubscribeOptions.maxWaitTimeInSeconds'
    package: '@azure/event-hubs'
    summary: >-
      The maximum amount of time to wait to build up the requested message count
      before

      passing the data to user code for processing. If not provided, it defaults
      to 60 seconds.
    fullName: maxWaitTimeInSeconds
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'maxWaitTimeInSeconds?: number'
      return:
        description: ''
        type: number
  - name: ownerLevel
    uid: '@azure/event-hubs.SubscribeOptions.ownerLevel'
    package: '@azure/event-hubs'
    summary: The owner level to use as this subscription subscribes to partitions.
    fullName: ownerLevel
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'ownerLevel?: number'
      return:
        description: ''
        type: number
  - name: prefetchCount
    uid: '@azure/event-hubs.SubscribeOptions.prefetchCount'
    package: '@azure/event-hubs'
    summary: >-
      The count of events requested eagerly and queued without regard to whether
      a read was requested.
    fullName: prefetchCount
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'prefetchCount?: number'
      return:
        description: ''
        type: number
  - name: skipParsingBodyAsJson
    uid: '@azure/event-hubs.SubscribeOptions.skipParsingBodyAsJson'
    package: '@azure/event-hubs'
    summary: >-
      Option to disable the client from running JSON.parse() on the message body
      when receiving the message.

      Not applicable if the message was sent with AMQP body type value or
      sequence. Use this option when you

      prefer to work directly with the bytes present in the message body than
      have the client attempt to parse it.
    fullName: skipParsingBodyAsJson
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'skipParsingBodyAsJson?: boolean'
      return:
        description: ''
        type: boolean
  - name: startPosition
    uid: '@azure/event-hubs.SubscribeOptions.startPosition'
    package: '@azure/event-hubs'
    summary: >-
      The event position in a partition to start receiving events from if no
      checkpoint is found.

      Pass a map of partition id to position if you would like to use different
      starting

      position for each partition.
    fullName: startPosition
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'startPosition?: EventPosition | {[partitionId: string]: EventPosition}'
      return:
        description: ''
        type: >-
          <xref uid="@azure/event-hubs.EventPosition" /> | {[partitionId:
          string]: <xref uid="@azure/event-hubs.EventPosition" />}
  - name: tracingOptions
    uid: '@azure/event-hubs.SubscribeOptions.tracingOptions'
    package: '@azure/event-hubs'
    summary: Options for configuring tracing.
    fullName: tracingOptions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'tracingOptions?: OperationTracingOptions'
      return:
        description: ''
        type: OperationTracingOptions
  - name: trackLastEnqueuedEventProperties
    uid: '@azure/event-hubs.SubscribeOptions.trackLastEnqueuedEventProperties'
    package: '@azure/event-hubs'
    summary: >-
      Indicates whether or not the consumer should request information on the
      last enqueued event on its

      associated partition, and track that information as events are received.


      When information about the partition's last enqueued event is being
      tracked, each event received

      from the Event Hubs service will carry metadata about the partition that
      it otherwise would not. This results in a small amount of

      additional network bandwidth consumption that is generally a favorable
      trade-off when considered

      against periodically making requests for partition properties using the
      Event Hub client.
    fullName: trackLastEnqueuedEventProperties
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'trackLastEnqueuedEventProperties?: boolean'
      return:
        description: ''
        type: boolean
