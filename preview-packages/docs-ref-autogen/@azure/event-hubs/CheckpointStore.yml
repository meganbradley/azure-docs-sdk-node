### YamlMime:TSType
name: CheckpointStore
uid: '@azure/event-hubs.CheckpointStore'
package: '@azure/event-hubs'
summary: >-
  A checkpoint store stores and retrieves partition ownership information and
  checkpoint details

  for each partition in a given consumer group of an event hub instance.


  Users are not meant to implement an `CheckpointStore`.

  Users are expected to choose existing implementations of this interface,
  instantiate it, and pass

  it to the `EventHubConsumerClient` class constructor when instantiating a
  client.

  Users are not expected to use any of the methods on a checkpoint store, these
  are used internally by

  the client.


  Implementations of `CheckpointStore` can be found on npm by searching for
  packages with the prefix &commat;azure/eventhub-checkpointstore-.
fullName: CheckpointStore
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: claimOwnership(PartitionOwnership[], OperationOptions)
    uid: '@azure/event-hubs.CheckpointStore.claimOwnership'
    package: '@azure/event-hubs'
    summary: >-
      Called to claim ownership of a list of partitions. This will return the
      list of partitions that were owned

      successfully.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function claimOwnership(partitionOwnership: PartitionOwnership[],
        options?: OperationOptions): Promise<PartitionOwnership[]>
      parameters:
        - id: partitionOwnership
          type: <xref uid="@azure/event-hubs.PartitionOwnership" />[]
          description: The list of partition ownership this instance is claiming to own.
        - id: options
          type: <xref uid="@azure/event-hubs.OperationOptions" />
          description: >-
            A set of options that can be specified to influence the behavior of
            this method.
             - `abortSignal`: A signal used to request operation cancellation.
             - `tracingOptions`: Options for configuring tracing.
      return:
        description: A list of partitions this instance successfully claimed ownership.
        type: Promise&lt;<xref uid="@azure/event-hubs.PartitionOwnership" />[]&gt;
  - name: listCheckpoints(string, string, string, OperationOptions)
    uid: '@azure/event-hubs.CheckpointStore.listCheckpoints'
    package: '@azure/event-hubs'
    summary: >-
      Lists all the checkpoints in a data store for a given namespace, eventhub
      and consumer group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listCheckpoints(fullyQualifiedNamespace: string, eventHubName:
        string, consumerGroup: string, options?: OperationOptions):
        Promise<Checkpoint[]>
      parameters:
        - id: fullyQualifiedNamespace
          type: string
          description: >-
            The fully qualified Event Hubs namespace. This is likely to be
            similar to

            <yournamespace>.servicebus.windows.net.
        - id: eventHubName
          type: string
          description: The event hub name.
        - id: consumerGroup
          type: string
          description: The consumer group name.
        - id: options
          type: <xref uid="@azure/event-hubs.OperationOptions" />
          description: >-
            A set of options that can be specified to influence the behavior of
            this method.
             - `abortSignal`: A signal used to request operation cancellation.
             - `tracingOptions`: Options for configuring tracing.
      return:
        description: >-
          A list of checkpoints for a given namespace, eventhub, and consumer
          group.
        type: Promise&lt;<xref uid="@azure/event-hubs.Checkpoint" />[]&gt;
  - name: listOwnership(string, string, string, OperationOptions)
    uid: '@azure/event-hubs.CheckpointStore.listOwnership'
    package: '@azure/event-hubs'
    summary: >-
      Called to get the list of all existing partition ownership from the
      underlying data store. Could return empty

      results if there are is no existing ownership information.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listOwnership(fullyQualifiedNamespace: string, eventHubName:
        string, consumerGroup: string, options?: OperationOptions):
        Promise<PartitionOwnership[]>
      parameters:
        - id: fullyQualifiedNamespace
          type: string
          description: >-
            The fully qualified Event Hubs namespace. This is likely to be
            similar to

            <yournamespace>.servicebus.windows.net.
        - id: eventHubName
          type: string
          description: The event hub name.
        - id: consumerGroup
          type: string
          description: The consumer group name.
        - id: options
          type: <xref uid="@azure/event-hubs.OperationOptions" />
          description: >-
            A set of options that can be specified to influence the behavior of
            this method.
             - `abortSignal`: A signal used to request operation cancellation.
             - `tracingOptions`: Options for configuring tracing.
      return:
        description: >-
          A list of partition ownership details of all the partitions that
          have/had an owner.
        type: Promise&lt;<xref uid="@azure/event-hubs.PartitionOwnership" />[]&gt;
  - name: updateCheckpoint(Checkpoint, OperationOptions)
    uid: '@azure/event-hubs.CheckpointStore.updateCheckpoint'
    package: '@azure/event-hubs'
    summary: Updates the checkpoint in the data store for a partition.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateCheckpoint(checkpoint: Checkpoint, options?:
        OperationOptions): Promise<void>
      parameters:
        - id: checkpoint
          type: <xref uid="@azure/event-hubs.Checkpoint" />
          description: The checkpoint.
        - id: options
          type: <xref uid="@azure/event-hubs.OperationOptions" />
          description: >-
            A set of options that can be specified to influence the behavior of
            this method.
             - `abortSignal`: A signal used to request operation cancellation.
             - `tracingOptions`: Options for configuring tracing.
      return:
        description: ''
        type: Promise&lt;void&gt;
