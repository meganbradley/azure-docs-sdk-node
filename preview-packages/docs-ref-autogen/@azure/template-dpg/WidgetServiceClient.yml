### YamlMime:TSType
name: WidgetServiceClient
uid: '@azure/template-dpg.WidgetServiceClient'
package: '@azure/template-dpg'
summary: ''
fullName: WidgetServiceClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: WidgetServiceClient(string, TokenCredential, WidgetServiceClientOptions)
    uid: '@azure/template-dpg.WidgetServiceClient.constructor_1'
    package: '@azure/template-dpg'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new WidgetServiceClient(endpoint: string, credential: TokenCredential,
        options?: WidgetServiceClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: ''
        - id: credential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: ''
        - id: options
          type: <xref uid="@azure/template-dpg.WidgetServiceClientOptions" />
          description: ''
  - name: WidgetServiceClient(string, WidgetServiceClientOptions)
    uid: '@azure/template-dpg.WidgetServiceClient.constructor'
    package: '@azure/template-dpg'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new WidgetServiceClient(endpoint: string, options?:
        WidgetServiceClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/template-dpg.WidgetServiceClientOptions" />
          description: ''
methods:
  - name: analyzeWidget(string, AnalyzeWidgetOptions)
    uid: '@azure/template-dpg.WidgetServiceClient.analyzeWidget'
    package: '@azure/template-dpg'
    summary: >-
      Analyze a widget. The only guarantee is that this method will return a
      string containing the results of the analysis.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function analyzeWidget(id: string, options?: AnalyzeWidgetOptions):
        Promise<AnalyzeResult>
      parameters:
        - id: id
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/template-dpg.AnalyzeWidgetOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/template-dpg.AnalyzeResult" />&gt;
  - name: createWidget(number, ColorType, CreateWidgetOptions)
    uid: '@azure/template-dpg.WidgetServiceClient.createWidget'
    package: '@azure/template-dpg'
    summary: >-
      Create a new widget.


      The widget ID is not required during creation, as it is automatically set
      by the server. Providing an ID will

      result in an error.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createWidget(weight: number, color: ColorType, options?:
        CreateWidgetOptions): Promise<Widget>
      parameters:
        - id: weight
          type: number
          description: ''
        - id: color
          type: <xref uid="@azure/template-dpg.ColorType" />
          description: ''
        - id: options
          type: <xref uid="@azure/template-dpg.CreateWidgetOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/template-dpg.Widget" />&gt;
  - name: deleteWidget(string, DeleteWidgetOptions)
    uid: '@azure/template-dpg.WidgetServiceClient.deleteWidget'
    package: '@azure/template-dpg'
    summary: Delete a widget by ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteWidget(id: string, options?: DeleteWidgetOptions):
        Promise<void>
      parameters:
        - id: id
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/template-dpg.DeleteWidgetOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: getWidget(string, GetWidgetOptions)
    uid: '@azure/template-dpg.WidgetServiceClient.getWidget'
    package: '@azure/template-dpg'
    summary: Get a widget by ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getWidget(id: string, options?: GetWidgetOptions):
        Promise<Widget>
      parameters:
        - id: id
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/template-dpg.GetWidgetOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/template-dpg.Widget" />&gt;
  - name: listWidgets(ListWidgetsOptions)
    uid: '@azure/template-dpg.WidgetServiceClient.listWidgets'
    package: '@azure/template-dpg'
    summary: >-
      List all widgets in the system. This operation is not paginated, and
      returns a simple array of widgets.


      It does not accept any options or parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function listWidgets(options?: ListWidgetsOptions): Promise<Widget[]>'
      parameters:
        - id: options
          type: <xref uid="@azure/template-dpg.ListWidgetsOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/template-dpg.Widget" />[]&gt;
  - name: updateWidget(string, UpdateWidgetOptions)
    uid: '@azure/template-dpg.WidgetServiceClient.updateWidget'
    package: '@azure/template-dpg'
    summary: >-
      Update the contents of the widget. The widget ID is required in the input,
      but cannot be changed. All other fields

      are optional and will be updated within the widget if provided.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateWidget(id: string, options?: UpdateWidgetOptions):
        Promise<Widget>
      parameters:
        - id: id
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/template-dpg.UpdateWidgetOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/template-dpg.Widget" />&gt;
