### YamlMime:TSType
name: EventStream
uid: '@azure/openai.EventStream'
package: '@azure/openai'
summary: A readable stream that is iterable and disposable.
fullName: EventStream<T>
remarks: ''
isDeprecated: false
type: interface
inheritedProperties:
  - name: locked
    uid: '@azure/openai.EventStream.locked'
    package: '@azure/openai'
    summary: ''
    fullName: locked
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'locked: boolean'
      return:
        description: ''
        type: boolean
    inheritanceDescription: <b>Inherited From</b> ReadableStream.locked
inheritedMethods:
  - name: cancel(any)
    uid: '@azure/openai.EventStream.cancel'
    package: '@azure/openai'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function cancel(reason?: any): Promise<void>'
      parameters:
        - id: reason
          type: any
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> ReadableStream.cancel
  - name: getReader()
    uid: '@azure/openai.EventStream.getReader_1'
    package: '@azure/openai'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getReader(): ReadableStreamDefaultReader<T>'
      return:
        description: ''
        type: ReadableStreamDefaultReader&lt;T&gt;
    inheritanceDescription: <b>Inherited From</b> ReadableStream.getReader
  - name: getReader(ReadableStreamGetReaderOptions)
    uid: '@azure/openai.EventStream.getReader_2'
    package: '@azure/openai'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getReader(options?: ReadableStreamGetReaderOptions):
        ReadableStreamReader<T>
      parameters:
        - id: options
          type: ReadableStreamGetReaderOptions
          description: ''
      return:
        description: ''
        type: ReadableStreamReader&lt;T&gt;
    inheritanceDescription: <b>Inherited From</b> ReadableStream.getReader
  - name: 'getReader({ mode: "byob" })'
    uid: '@azure/openai.EventStream.getReader'
    package: '@azure/openai'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getReader(options: { mode: "byob" }): ReadableStreamBYOBReader'
      parameters:
        - id: options
          type: '{ mode: "byob" }'
          description: ''
      return:
        description: ''
        type: ReadableStreamBYOBReader
    inheritanceDescription: <b>Inherited From</b> ReadableStream.getReader
  - name: pipeThrough<T>(ReadableWritablePair<T, T>, StreamPipeOptions)
    uid: '@azure/openai.EventStream.pipeThrough'
    package: '@azure/openai'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function pipeThrough<T>(transform: ReadableWritablePair<T, T>, options?:
        StreamPipeOptions): ReadableStream<T>
      parameters:
        - id: transform
          type: ReadableWritablePair&lt;T, T&gt;
          description: ''
        - id: options
          type: StreamPipeOptions
          description: ''
      return:
        description: ''
        type: ReadableStream&lt;T&gt;
    inheritanceDescription: <b>Inherited From</b> ReadableStream.pipeThrough
  - name: pipeTo(WritableStream<T>, StreamPipeOptions)
    uid: '@azure/openai.EventStream.pipeTo'
    package: '@azure/openai'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function pipeTo(destination: WritableStream<T>, options?:
        StreamPipeOptions): Promise<void>
      parameters:
        - id: destination
          type: WritableStream&lt;T&gt;
          description: ''
        - id: options
          type: StreamPipeOptions
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: <b>Inherited From</b> ReadableStream.pipeTo
  - name: tee()
    uid: '@azure/openai.EventStream.tee'
    package: '@azure/openai'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function tee(): [ReadableStream<T>, ReadableStream<T>]'
      return:
        description: ''
        type: '[ReadableStream&lt;T&gt;, ReadableStream&lt;T&gt;]'
    inheritanceDescription: <b>Inherited From</b> ReadableStream.tee
  - name: '[asyncIterator]()'
    uid: '@azure/openai.EventStream.[asyncIterator]'
    package: '@azure/openai'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function [asyncIterator](): AsyncIterator<T, any, undefined>'
      return:
        description: ''
        type: AsyncIterator&lt;T, any, undefined&gt;
    inheritanceDescription: <b>Inherited From</b> AsyncIterable.__@asyncIterator@339
extends: ReadableStream&lt;T&gt;,AsyncIterable&lt;T&gt;
