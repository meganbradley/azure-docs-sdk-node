### YamlMime:TSType
name: Watchlists
uid: '@azure/arm-securityinsight.Watchlists'
package: '@azure/arm-securityinsight'
summary: Interface representing a Watchlists.
fullName: Watchlists
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, Watchlist,
      WatchlistsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-securityinsight.Watchlists.createOrUpdate'
    package: '@azure/arm-securityinsight'
    summary: >-
      Create or update a Watchlist and its Watchlist Items (bulk creation, e.g.
      through text/csv content

      type). To create a Watchlist and its Items, we should call this endpoint
      with either rawContent or a

      valid SAR URI and contentType properties. The rawContent is mainly used
      for small watchlist (content

      size below 3.8 MB). The SAS URI enables the creation of large watchlist,
      where the content size can

      go up to 500 MB. The status of processing such large file can be polled
      through the URL returned in

      Azure-AsyncOperation header.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, workspaceName:
        string, watchlistAlias: string, watchlist: Watchlist, options?:
        WatchlistsCreateOrUpdateOptionalParams): Promise<Watchlist>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: watchlistAlias
          type: string
          description: Watchlist Alias
        - id: watchlist
          type: <xref uid="@azure/arm-securityinsight.Watchlist" />
          description: The watchlist
        - id: options
          type: >-
            <xref
            uid="@azure/arm-securityinsight.WatchlistsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-securityinsight.Watchlist" />&gt;
  - name: delete(string, string, string, WatchlistsDeleteOptionalParams)
    uid: '@azure/arm-securityinsight.Watchlists.delete'
    package: '@azure/arm-securityinsight'
    summary: Delete a watchlist.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, workspaceName: string,
        watchlistAlias: string, options?: WatchlistsDeleteOptionalParams):
        Promise<WatchlistsDeleteHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: watchlistAlias
          type: string
          description: Watchlist Alias
        - id: options
          type: >-
            <xref
            uid="@azure/arm-securityinsight.WatchlistsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-securityinsight.WatchlistsDeleteHeaders" />&gt;
  - name: get(string, string, string, WatchlistsGetOptionalParams)
    uid: '@azure/arm-securityinsight.Watchlists.get'
    package: '@azure/arm-securityinsight'
    summary: Gets a watchlist, without its watchlist items.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        watchlistAlias: string, options?: WatchlistsGetOptionalParams):
        Promise<Watchlist>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: watchlistAlias
          type: string
          description: Watchlist Alias
        - id: options
          type: >-
            <xref uid="@azure/arm-securityinsight.WatchlistsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-securityinsight.Watchlist" />&gt;
  - name: list(string, string, WatchlistsListOptionalParams)
    uid: '@azure/arm-securityinsight.Watchlists.list'
    package: '@azure/arm-securityinsight'
    summary: Gets all watchlists, without watchlist items.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, workspaceName: string,
        options?: WatchlistsListOptionalParams):
        PagedAsyncIterableIterator<Watchlist, Watchlist[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: options
          type: >-
            <xref uid="@azure/arm-securityinsight.WatchlistsListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-securityinsight.Watchlist" />, <xref
          uid="@azure/arm-securityinsight.Watchlist" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
