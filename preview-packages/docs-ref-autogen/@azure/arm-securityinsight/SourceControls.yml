### YamlMime:TSType
name: SourceControls
uid: '@azure/arm-securityinsight.SourceControls'
package: '@azure/arm-securityinsight'
summary: Interface representing a SourceControls.
fullName: SourceControls
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      create(string, string, string, SourceControl,
      SourceControlsCreateOptionalParams)
    uid: '@azure/arm-securityinsight.SourceControls.create'
    package: '@azure/arm-securityinsight'
    summary: Creates a source control.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(resourceGroupName: string, workspaceName: string,
        sourceControlId: string, sourceControl: SourceControl, options?:
        SourceControlsCreateOptionalParams): Promise<SourceControl>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: sourceControlId
          type: string
          description: Source control Id
        - id: sourceControl
          type: <xref uid="@azure/arm-securityinsight.SourceControl" />
          description: The SourceControl
        - id: options
          type: >-
            <xref
            uid="@azure/arm-securityinsight.SourceControlsCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-securityinsight.SourceControl" />&gt;
  - name: delete(string, string, string, SourceControlsDeleteOptionalParams)
    uid: '@azure/arm-securityinsight.SourceControls.delete'
    package: '@azure/arm-securityinsight'
    summary: Delete a source control.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, workspaceName: string,
        sourceControlId: string, options?: SourceControlsDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: sourceControlId
          type: string
          description: Source control Id
        - id: options
          type: >-
            <xref
            uid="@azure/arm-securityinsight.SourceControlsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, SourceControlsGetOptionalParams)
    uid: '@azure/arm-securityinsight.SourceControls.get'
    package: '@azure/arm-securityinsight'
    summary: Gets a source control byt its identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, workspaceName: string,
        sourceControlId: string, options?: SourceControlsGetOptionalParams):
        Promise<SourceControl>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: sourceControlId
          type: string
          description: Source control Id
        - id: options
          type: >-
            <xref
            uid="@azure/arm-securityinsight.SourceControlsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-securityinsight.SourceControl" />&gt;
  - name: list(string, string, SourceControlsListOptionalParams)
    uid: '@azure/arm-securityinsight.SourceControls.list'
    package: '@azure/arm-securityinsight'
    summary: Gets all source controls, without source control items.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, workspaceName: string,
        options?: SourceControlsListOptionalParams):
        PagedAsyncIterableIterator<SourceControl, SourceControl[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: workspaceName
          type: string
          description: The name of the workspace.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-securityinsight.SourceControlsListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-securityinsight.SourceControl" />, <xref
          uid="@azure/arm-securityinsight.SourceControl" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
