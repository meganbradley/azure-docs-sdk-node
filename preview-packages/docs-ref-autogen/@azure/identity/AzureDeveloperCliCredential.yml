### YamlMime:TSType
name: AzureDeveloperCliCredential
uid: '@azure/identity.AzureDeveloperCliCredential'
package: '@azure/identity'
summary: >-
  Azure Developer CLI is a command-line interface tool that allows developers to
  create, manage, and deploy

  resources in Azure. It's built on top of the Azure CLI and provides additional
  functionality specific

  to Azure developers. It allows users to authenticate as a user and/or a
  service principal against

  <a href="https://learn.microsoft.com/entra/fundamentals/">Microsoft Entra
  ID</a>. The

  AzureDeveloperCliCredential authenticates in a development environment and
  acquires a token on behalf of

  the logged-in user or service principal in the Azure Developer CLI. It acts as
  the Azure Developer CLI logged in user or

  service principal and executes an Azure CLI command underneath to authenticate
  the application against

  Microsoft Entra ID.


  <h2> Configure AzureDeveloperCliCredential </h2>


  To use this credential, the developer needs to authenticate locally in Azure
  Developer CLI using one of the

  commands below:


  <ol>
      <li>Run "azd auth login" in Azure Developer CLI to authenticate interactively as a user.</li>
      <li>Run "azd auth login --client-id clientID --client-secret clientSecret
      --tenant-id tenantID" to authenticate as a service principal.</li>
  </ol>


  You may need to repeat this process after a certain time period, depending on
  the refresh token validity in your

  organization. Generally, the refresh token validity period is a few weeks to a
  few months.

  AzureDeveloperCliCredential will prompt you to sign in again.
fullName: AzureDeveloperCliCredential
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: AzureDeveloperCliCredential(AzureDeveloperCliCredentialOptions)
    uid: '@azure/identity.AzureDeveloperCliCredential.constructor'
    package: '@azure/identity'
    summary: >-
      Creates an instance of the
      [AzureDeveloperCliCredential](xref:@azure/identity.AzureDeveloperCliCredential).


      To use this credential, ensure that you have already logged

      in via the 'azd' tool using the command "azd auth login" from the
      commandline.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new AzureDeveloperCliCredential(options?:
        AzureDeveloperCliCredentialOptions)
      parameters:
        - id: options
          type: <xref uid="@azure/identity.AzureDeveloperCliCredentialOptions" />
          description: Options, to optionally allow multi-tenant requests.
methods:
  - name: getToken(string | string[], GetTokenOptions)
    uid: '@azure/identity.AzureDeveloperCliCredential.getToken'
    package: '@azure/identity'
    summary: >-
      Authenticates with Microsoft Entra ID and returns an access token if
      successful.

      If authentication fails, a
      [CredentialUnavailableError](xref:@azure/identity.CredentialUnavailableError)
      will be thrown with the details of the failure.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getToken(scopes: string | string[], options?: GetTokenOptions):
        Promise<AccessToken>
      parameters:
        - id: scopes
          type: string | string[]
          description: The list of scopes for which the token will have access.
        - id: options
          type: <xref uid="@azure/identity.GetTokenOptions" />
          description: |-
            The options used to configure any requests this
                           TokenCredential implementation might make.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/identity.AccessToken" />&gt;
