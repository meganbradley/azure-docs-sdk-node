### YamlMime:TSType
name: MongoClusters
uid: '@azure/arm-cosmosdb.MongoClusters'
package: '@azure/arm-cosmosdb'
summary: Interface representing a MongoClusters.
fullName: MongoClusters
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, MongoCluster,
      MongoClustersCreateOrUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.beginCreateOrUpdate'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Create or update a mongo cluster. Update overwrites all properties for the
      resource. To only modify

      some of the properties, use PATCH.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        mongoClusterName: string, parameters: MongoCluster, options?:
        MongoClustersCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<MongoCluster>, MongoCluster>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdb.MongoCluster" />
          description: The required parameters for creating or updating a mongo cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoClustersCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.MongoCluster" />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoCluster" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, MongoCluster,
      MongoClustersCreateOrUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.beginCreateOrUpdateAndWait'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Create or update a mongo cluster. Update overwrites all properties for the
      resource. To only modify

      some of the properties, use PATCH.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        mongoClusterName: string, parameters: MongoCluster, options?:
        MongoClustersCreateOrUpdateOptionalParams): Promise<MongoCluster>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdb.MongoCluster" />
          description: The required parameters for creating or updating a mongo cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoClustersCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.MongoCluster" />&gt;
  - name: >-
      beginCreateOrUpdateFirewallRule(string, string, string, FirewallRule,
      MongoClustersCreateOrUpdateFirewallRuleOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.beginCreateOrUpdateFirewallRule'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Creates a new firewall rule or updates an existing firewall rule on a
      mongo cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateFirewallRule(resourceGroupName: string,
        mongoClusterName: string, firewallRuleName: string, parameters:
        FirewallRule, options?:
        MongoClustersCreateOrUpdateFirewallRuleOptionalParams):
        Promise<SimplePollerLike<OperationState<FirewallRule>, FirewallRule>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: firewallRuleName
          type: string
          description: The name of the mongo cluster firewall rule.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdb.FirewallRule" />
          description: The required parameters for creating or updating a firewall rule.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoClustersCreateOrUpdateFirewallRuleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.FirewallRule" />&gt;, <xref
          uid="@azure/arm-cosmosdb.FirewallRule" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateFirewallRuleAndWait(string, string, string,
      FirewallRule, MongoClustersCreateOrUpdateFirewallRuleOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.beginCreateOrUpdateFirewallRuleAndWait'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Creates a new firewall rule or updates an existing firewall rule on a
      mongo cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateFirewallRuleAndWait(resourceGroupName:
        string, mongoClusterName: string, firewallRuleName: string, parameters:
        FirewallRule, options?:
        MongoClustersCreateOrUpdateFirewallRuleOptionalParams):
        Promise<FirewallRule>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: firewallRuleName
          type: string
          description: The name of the mongo cluster firewall rule.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdb.FirewallRule" />
          description: The required parameters for creating or updating a firewall rule.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoClustersCreateOrUpdateFirewallRuleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.FirewallRule" />&gt;
  - name: beginDelete(string, string, MongoClustersDeleteOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.beginDelete'
    package: '@azure/arm-cosmosdb'
    summary: Deletes a mongo cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, mongoClusterName:
        string, options?: MongoClustersDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<MongoClustersDeleteHeaders>,
        MongoClustersDeleteHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.MongoClustersDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.MongoClustersDeleteHeaders" />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoClustersDeleteHeaders" />&gt;&gt;
  - name: beginDeleteAndWait(string, string, MongoClustersDeleteOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.beginDeleteAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes a mongo cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, mongoClusterName:
        string, options?: MongoClustersDeleteOptionalParams):
        Promise<MongoClustersDeleteHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.MongoClustersDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.MongoClustersDeleteHeaders"
          />&gt;
  - name: >-
      beginDeleteFirewallRule(string, string, string,
      MongoClustersDeleteFirewallRuleOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.beginDeleteFirewallRule'
    package: '@azure/arm-cosmosdb'
    summary: Deletes a mongo cluster firewall rule.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteFirewallRule(resourceGroupName: string,
        mongoClusterName: string, firewallRuleName: string, options?:
        MongoClustersDeleteFirewallRuleOptionalParams):
        Promise<SimplePollerLike<OperationState<MongoClustersDeleteFirewallRuleHeaders>,
        MongoClustersDeleteFirewallRuleHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: firewallRuleName
          type: string
          description: The name of the mongo cluster firewall rule.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoClustersDeleteFirewallRuleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.MongoClustersDeleteFirewallRuleHeaders"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoClustersDeleteFirewallRuleHeaders"
          />&gt;&gt;
  - name: >-
      beginDeleteFirewallRuleAndWait(string, string, string,
      MongoClustersDeleteFirewallRuleOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.beginDeleteFirewallRuleAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes a mongo cluster firewall rule.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteFirewallRuleAndWait(resourceGroupName: string,
        mongoClusterName: string, firewallRuleName: string, options?:
        MongoClustersDeleteFirewallRuleOptionalParams):
        Promise<MongoClustersDeleteFirewallRuleHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: firewallRuleName
          type: string
          description: The name of the mongo cluster firewall rule.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoClustersDeleteFirewallRuleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.MongoClustersDeleteFirewallRuleHeaders"
          />&gt;
  - name: >-
      beginUpdate(string, string, MongoClusterUpdate,
      MongoClustersUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.beginUpdate'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Updates an existing mongo cluster. The request body can contain one to
      many of the properties

      present in the normal mongo cluster definition.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, mongoClusterName:
        string, parameters: MongoClusterUpdate, options?:
        MongoClustersUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<MongoCluster>, MongoCluster>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdb.MongoClusterUpdate" />
          description: The parameters for updating a mongo cluster.
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.MongoClustersUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.MongoCluster" />&gt;, <xref
          uid="@azure/arm-cosmosdb.MongoCluster" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, MongoClusterUpdate,
      MongoClustersUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.beginUpdateAndWait'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Updates an existing mongo cluster. The request body can contain one to
      many of the properties

      present in the normal mongo cluster definition.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, mongoClusterName:
        string, parameters: MongoClusterUpdate, options?:
        MongoClustersUpdateOptionalParams): Promise<MongoCluster>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdb.MongoClusterUpdate" />
          description: The parameters for updating a mongo cluster.
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.MongoClustersUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.MongoCluster" />&gt;
  - name: >-
      checkNameAvailability(string, CheckNameAvailabilityRequest,
      MongoClustersCheckNameAvailabilityOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.checkNameAvailability'
    package: '@azure/arm-cosmosdb'
    summary: Check the availability of name for resource
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(location: string, parameters:
        CheckNameAvailabilityRequest, options?:
        MongoClustersCheckNameAvailabilityOptionalParams):
        Promise<CheckNameAvailabilityResponse>
      parameters:
        - id: location
          type: string
          description: The name of the Azure region.
        - id: parameters
          type: <xref uid="@azure/arm-cosmosdb.CheckNameAvailabilityRequest" />
          description: The required parameters for checking if resource name is available.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoClustersCheckNameAvailabilityOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CheckNameAvailabilityResponse" />&gt;
  - name: get(string, string, MongoClustersGetOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.get'
    package: '@azure/arm-cosmosdb'
    summary: Gets information about a mongo cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, mongoClusterName: string,
        options?: MongoClustersGetOptionalParams): Promise<MongoCluster>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.MongoClustersGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.MongoCluster" />&gt;
  - name: >-
      getFirewallRule(string, string, string,
      MongoClustersGetFirewallRuleOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.getFirewallRule'
    package: '@azure/arm-cosmosdb'
    summary: Gets information about a mongo cluster firewall rule.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getFirewallRule(resourceGroupName: string, mongoClusterName:
        string, firewallRuleName: string, options?:
        MongoClustersGetFirewallRuleOptionalParams): Promise<FirewallRule>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: firewallRuleName
          type: string
          description: The name of the mongo cluster firewall rule.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoClustersGetFirewallRuleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.FirewallRule" />&gt;
  - name: list(MongoClustersListOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.list'
    package: '@azure/arm-cosmosdb'
    summary: List all the mongo clusters in a given subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: MongoClustersListOptionalParams):
        PagedAsyncIterableIterator<MongoCluster, MongoCluster[], PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.MongoClustersListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.MongoCluster" />, <xref
          uid="@azure/arm-cosmosdb.MongoCluster" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listByResourceGroup(string,
      MongoClustersListByResourceGroupOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.listByResourceGroup'
    package: '@azure/arm-cosmosdb'
    summary: List all the mongo clusters in a given resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        MongoClustersListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<MongoCluster, MongoCluster[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoClustersListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.MongoCluster" />, <xref
          uid="@azure/arm-cosmosdb.MongoCluster" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listConnectionStrings(string, string,
      MongoClustersListConnectionStringsOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.listConnectionStrings'
    package: '@azure/arm-cosmosdb'
    summary: >-
      List mongo cluster connection strings. This includes the default
      connection string using

      SCRAM-SHA-256, as well as other connection strings supported by the
      cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string,
        mongoClusterName: string, options?:
        MongoClustersListConnectionStringsOptionalParams):
        Promise<ListConnectionStringsResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoClustersListConnectionStringsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.ListConnectionStringsResult"
          />&gt;
  - name: >-
      listFirewallRules(string, string,
      MongoClustersListFirewallRulesOptionalParams)
    uid: '@azure/arm-cosmosdb.MongoClusters.listFirewallRules'
    package: '@azure/arm-cosmosdb'
    summary: List all the firewall rules in a given mongo cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listFirewallRules(resourceGroupName: string, mongoClusterName:
        string, options?: MongoClustersListFirewallRulesOptionalParams):
        PagedAsyncIterableIterator<FirewallRule, FirewallRule[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: mongoClusterName
          type: string
          description: The name of the mongo cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.MongoClustersListFirewallRulesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.FirewallRule" />, <xref
          uid="@azure/arm-cosmosdb.FirewallRule" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
