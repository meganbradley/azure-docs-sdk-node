### YamlMime:TSType
name: Service
uid: '@azure/arm-cosmosdb.Service'
package: '@azure/arm-cosmosdb'
summary: Interface representing a Service.
fullName: Service
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, string, string, ServiceResourceCreateUpdateParameters,
      ServiceCreateOptionalParams)
    uid: '@azure/arm-cosmosdb.Service.beginCreate'
    package: '@azure/arm-cosmosdb'
    summary: Creates a service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, accountName: string,
        serviceName: string, createUpdateParameters:
        ServiceResourceCreateUpdateParameters, options?:
        ServiceCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<ServiceResource>,
        ServiceResource>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: serviceName
          type: string
          description: Cosmos DB service name.
        - id: createUpdateParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.ServiceResourceCreateUpdateParameters" />
          description: The Service resource parameters.
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.ServiceCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ServiceResource" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ServiceResource" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, string,
      ServiceResourceCreateUpdateParameters, ServiceCreateOptionalParams)
    uid: '@azure/arm-cosmosdb.Service.beginCreateAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Creates a service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, accountName:
        string, serviceName: string, createUpdateParameters:
        ServiceResourceCreateUpdateParameters, options?:
        ServiceCreateOptionalParams): Promise<ServiceResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: serviceName
          type: string
          description: Cosmos DB service name.
        - id: createUpdateParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.ServiceResourceCreateUpdateParameters" />
          description: The Service resource parameters.
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.ServiceCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.ServiceResource" />&gt;
  - name: beginDelete(string, string, string, ServiceDeleteOptionalParams)
    uid: '@azure/arm-cosmosdb.Service.beginDelete'
    package: '@azure/arm-cosmosdb'
    summary: Deletes service with the given serviceName.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, accountName: string,
        serviceName: string, options?: ServiceDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: serviceName
          type: string
          description: Cosmos DB service name.
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.ServiceDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, ServiceDeleteOptionalParams)
    uid: '@azure/arm-cosmosdb.Service.beginDeleteAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes service with the given serviceName.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, accountName:
        string, serviceName: string, options?: ServiceDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: serviceName
          type: string
          description: Cosmos DB service name.
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.ServiceDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, string, ServiceGetOptionalParams)
    uid: '@azure/arm-cosmosdb.Service.get'
    package: '@azure/arm-cosmosdb'
    summary: Gets the status of service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string,
        serviceName: string, options?: ServiceGetOptionalParams):
        Promise<ServiceResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: serviceName
          type: string
          description: Cosmos DB service name.
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.ServiceGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.ServiceResource" />&gt;
  - name: list(string, string, ServiceListOptionalParams)
    uid: '@azure/arm-cosmosdb.Service.list'
    package: '@azure/arm-cosmosdb'
    summary: Gets the status of service.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, accountName: string, options?:
        ServiceListOptionalParams): PagedAsyncIterableIterator<ServiceResource,
        ServiceResource[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.ServiceListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.ServiceResource" />, <xref
          uid="@azure/arm-cosmosdb.ServiceResource" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
