### YamlMime:TSType
name: Accounts
uid: '@azure/arm-playwrighttesting.Accounts'
package: '@azure/arm-playwrighttesting'
summary: Interface representing a Accounts.
fullName: Accounts
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, Account,
      AccountsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-playwrighttesting.Accounts.beginCreateOrUpdate'
    package: '@azure/arm-playwrighttesting'
    summary: Create a Account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, name: string,
        resource: Account, options?: AccountsCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Account>, Account>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of account
        - id: resource
          type: <xref uid="@azure/arm-playwrighttesting.Account" />
          description: Resource create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-playwrighttesting.AccountsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-playwrighttesting.Account" />&gt;, <xref
          uid="@azure/arm-playwrighttesting.Account" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, Account,
      AccountsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-playwrighttesting.Accounts.beginCreateOrUpdateAndWait'
    package: '@azure/arm-playwrighttesting'
    summary: Create a Account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string, name:
        string, resource: Account, options?:
        AccountsCreateOrUpdateOptionalParams): Promise<Account>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of account
        - id: resource
          type: <xref uid="@azure/arm-playwrighttesting.Account" />
          description: Resource create parameters.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-playwrighttesting.AccountsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-playwrighttesting.Account" />&gt;
  - name: beginDelete(string, string, AccountsDeleteOptionalParams)
    uid: '@azure/arm-playwrighttesting.Accounts.beginDelete'
    package: '@azure/arm-playwrighttesting'
    summary: Delete a Account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, name: string, options?:
        AccountsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of account
        - id: options
          type: >-
            <xref
            uid="@azure/arm-playwrighttesting.AccountsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, AccountsDeleteOptionalParams)
    uid: '@azure/arm-playwrighttesting.Accounts.beginDeleteAndWait'
    package: '@azure/arm-playwrighttesting'
    summary: Delete a Account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, name: string,
        options?: AccountsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of account
        - id: options
          type: >-
            <xref
            uid="@azure/arm-playwrighttesting.AccountsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: get(string, string, AccountsGetOptionalParams)
    uid: '@azure/arm-playwrighttesting.Accounts.get'
    package: '@azure/arm-playwrighttesting'
    summary: Get a Account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, name: string, options?:
        AccountsGetOptionalParams): Promise<Account>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of account
        - id: options
          type: >-
            <xref uid="@azure/arm-playwrighttesting.AccountsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-playwrighttesting.Account" />&gt;
  - name: listByResourceGroup(string, AccountsListByResourceGroupOptionalParams)
    uid: '@azure/arm-playwrighttesting.Accounts.listByResourceGroup'
    package: '@azure/arm-playwrighttesting'
    summary: List Account resources by resource group
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        AccountsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Account, Account[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-playwrighttesting.AccountsListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-playwrighttesting.Account" />, <xref
          uid="@azure/arm-playwrighttesting.Account" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscription(AccountsListBySubscriptionOptionalParams)
    uid: '@azure/arm-playwrighttesting.Accounts.listBySubscription'
    package: '@azure/arm-playwrighttesting'
    summary: List Account resources by subscription ID
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        AccountsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<Account, Account[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-playwrighttesting.AccountsListBySubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-playwrighttesting.Account" />, <xref
          uid="@azure/arm-playwrighttesting.Account" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: update(string, string, AccountUpdate, AccountsUpdateOptionalParams)
    uid: '@azure/arm-playwrighttesting.Accounts.update'
    package: '@azure/arm-playwrighttesting'
    summary: Update a Account
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, name: string, properties:
        AccountUpdate, options?: AccountsUpdateOptionalParams): Promise<Account>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: name
          type: string
          description: Name of account
        - id: properties
          type: <xref uid="@azure/arm-playwrighttesting.AccountUpdate" />
          description: The resource properties to be updated.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-playwrighttesting.AccountsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-playwrighttesting.Account" />&gt;
