### YamlMime:TSType
name: PartnerDestinations
uid: '@azure/arm-eventgrid.PartnerDestinations'
package: '@azure/arm-eventgrid'
summary: Interface representing a PartnerDestinations.
fullName: PartnerDestinations
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: activate(string, string, PartnerDestinationsActivateOptionalParams)
    uid: '@azure/arm-eventgrid.PartnerDestinations.activate'
    package: '@azure/arm-eventgrid'
    summary: Activate a newly created partner destination.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function activate(resourceGroupName: string, partnerDestinationName:
        string, options?: PartnerDestinationsActivateOptionalParams):
        Promise<PartnerDestination>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: partnerDestinationName
          type: string
          description: Name of the partner destination.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.PartnerDestinationsActivateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.PartnerDestination" />&gt;
  - name: >-
      beginCreateOrUpdate(string, string, PartnerDestination,
      PartnerDestinationsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.PartnerDestinations.beginCreateOrUpdate'
    package: '@azure/arm-eventgrid'
    summary: >-
      Asynchronously creates a new partner destination with the specified
      parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        partnerDestinationName: string, partnerDestination: PartnerDestination,
        options?: PartnerDestinationsCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<PartnerDestination>,
        PartnerDestination>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: partnerDestinationName
          type: string
          description: Name of the partner destination.
        - id: partnerDestination
          type: <xref uid="@azure/arm-eventgrid.PartnerDestination" />
          description: Partner destination create information.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.PartnerDestinationsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-eventgrid.PartnerDestination" />&gt;, <xref
          uid="@azure/arm-eventgrid.PartnerDestination" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, PartnerDestination,
      PartnerDestinationsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.PartnerDestinations.beginCreateOrUpdateAndWait'
    package: '@azure/arm-eventgrid'
    summary: >-
      Asynchronously creates a new partner destination with the specified
      parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        partnerDestinationName: string, partnerDestination: PartnerDestination,
        options?: PartnerDestinationsCreateOrUpdateOptionalParams):
        Promise<PartnerDestination>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: partnerDestinationName
          type: string
          description: Name of the partner destination.
        - id: partnerDestination
          type: <xref uid="@azure/arm-eventgrid.PartnerDestination" />
          description: Partner destination create information.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.PartnerDestinationsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.PartnerDestination" />&gt;
  - name: beginDelete(string, string, PartnerDestinationsDeleteOptionalParams)
    uid: '@azure/arm-eventgrid.PartnerDestinations.beginDelete'
    package: '@azure/arm-eventgrid'
    summary: Delete existing partner destination.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, partnerDestinationName:
        string, options?: PartnerDestinationsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: partnerDestinationName
          type: string
          description: Name of the partner destination.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.PartnerDestinationsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string,
      PartnerDestinationsDeleteOptionalParams)
    uid: '@azure/arm-eventgrid.PartnerDestinations.beginDeleteAndWait'
    package: '@azure/arm-eventgrid'
    summary: Delete existing partner destination.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string,
        partnerDestinationName: string, options?:
        PartnerDestinationsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: partnerDestinationName
          type: string
          description: Name of the partner destination.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.PartnerDestinationsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, PartnerDestinationUpdateParameters,
      PartnerDestinationsUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.PartnerDestinations.beginUpdate'
    package: '@azure/arm-eventgrid'
    summary: >-
      Asynchronously updates a partner destination with the specified
      parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, partnerDestinationName:
        string, partnerDestinationUpdateParameters:
        PartnerDestinationUpdateParameters, options?:
        PartnerDestinationsUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<PartnerDestination>,
        PartnerDestination>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: partnerDestinationName
          type: string
          description: Name of the partner destination.
        - id: partnerDestinationUpdateParameters
          type: >-
            <xref uid="@azure/arm-eventgrid.PartnerDestinationUpdateParameters"
            />
          description: Partner destination update information.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.PartnerDestinationsUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-eventgrid.PartnerDestination" />&gt;, <xref
          uid="@azure/arm-eventgrid.PartnerDestination" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, PartnerDestinationUpdateParameters,
      PartnerDestinationsUpdateOptionalParams)
    uid: '@azure/arm-eventgrid.PartnerDestinations.beginUpdateAndWait'
    package: '@azure/arm-eventgrid'
    summary: >-
      Asynchronously updates a partner destination with the specified
      parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string,
        partnerDestinationName: string, partnerDestinationUpdateParameters:
        PartnerDestinationUpdateParameters, options?:
        PartnerDestinationsUpdateOptionalParams): Promise<PartnerDestination>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: partnerDestinationName
          type: string
          description: Name of the partner destination.
        - id: partnerDestinationUpdateParameters
          type: >-
            <xref uid="@azure/arm-eventgrid.PartnerDestinationUpdateParameters"
            />
          description: Partner destination update information.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.PartnerDestinationsUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.PartnerDestination" />&gt;
  - name: get(string, string, PartnerDestinationsGetOptionalParams)
    uid: '@azure/arm-eventgrid.PartnerDestinations.get'
    package: '@azure/arm-eventgrid'
    summary: Get properties of a partner destination.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, partnerDestinationName: string,
        options?: PartnerDestinationsGetOptionalParams):
        Promise<PartnerDestination>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: partnerDestinationName
          type: string
          description: Name of the partner destination.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.PartnerDestinationsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-eventgrid.PartnerDestination" />&gt;
  - name: >-
      listByResourceGroup(string,
      PartnerDestinationsListByResourceGroupOptionalParams)
    uid: '@azure/arm-eventgrid.PartnerDestinations.listByResourceGroup'
    package: '@azure/arm-eventgrid'
    summary: List all the partner destinations under a resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        PartnerDestinationsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<PartnerDestination, PartnerDestination[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the user's subscription.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.PartnerDestinationsListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-eventgrid.PartnerDestination" />, <xref
          uid="@azure/arm-eventgrid.PartnerDestination" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: listBySubscription(PartnerDestinationsListBySubscriptionOptionalParams)
    uid: '@azure/arm-eventgrid.PartnerDestinations.listBySubscription'
    package: '@azure/arm-eventgrid'
    summary: List all the partner destinations under an Azure subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        PartnerDestinationsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<PartnerDestination, PartnerDestination[],
        PageSettings>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-eventgrid.PartnerDestinationsListBySubscriptionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-eventgrid.PartnerDestination" />, <xref
          uid="@azure/arm-eventgrid.PartnerDestination" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
