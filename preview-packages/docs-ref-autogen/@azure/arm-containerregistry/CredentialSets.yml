### YamlMime:TSType
name: CredentialSets
uid: '@azure/arm-containerregistry.CredentialSets'
package: '@azure/arm-containerregistry'
summary: Interface representing a CredentialSets.
fullName: CredentialSets
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, string, string, CredentialSet,
      CredentialSetsCreateOptionalParams)
    uid: '@azure/arm-containerregistry.CredentialSets.beginCreate'
    package: '@azure/arm-containerregistry'
    summary: >-
      Creates a credential set for a container registry with the specified
      parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, registryName: string,
        credentialSetName: string, credentialSetCreateParameters: CredentialSet,
        options?: CredentialSetsCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<CredentialSet>, CredentialSet>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: credentialSetName
          type: string
          description: The name of the credential set.
        - id: credentialSetCreateParameters
          type: <xref uid="@azure/arm-containerregistry.CredentialSet" />
          description: The parameters for creating a credential set.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.CredentialSetsCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-containerregistry.CredentialSet" />&gt;, <xref
          uid="@azure/arm-containerregistry.CredentialSet" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, string, CredentialSet,
      CredentialSetsCreateOptionalParams)
    uid: '@azure/arm-containerregistry.CredentialSets.beginCreateAndWait'
    package: '@azure/arm-containerregistry'
    summary: >-
      Creates a credential set for a container registry with the specified
      parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, registryName:
        string, credentialSetName: string, credentialSetCreateParameters:
        CredentialSet, options?: CredentialSetsCreateOptionalParams):
        Promise<CredentialSet>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: credentialSetName
          type: string
          description: The name of the credential set.
        - id: credentialSetCreateParameters
          type: <xref uid="@azure/arm-containerregistry.CredentialSet" />
          description: The parameters for creating a credential set.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.CredentialSetsCreateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-containerregistry.CredentialSet"
          />&gt;
  - name: beginDelete(string, string, string, CredentialSetsDeleteOptionalParams)
    uid: '@azure/arm-containerregistry.CredentialSets.beginDelete'
    package: '@azure/arm-containerregistry'
    summary: Deletes a credential set from a container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, registryName: string,
        credentialSetName: string, options?:
        CredentialSetsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<CredentialSetsDeleteHeaders>,
        CredentialSetsDeleteHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: credentialSetName
          type: string
          description: The name of the credential set.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.CredentialSetsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-containerregistry.CredentialSetsDeleteHeaders" />&gt;,
          <xref uid="@azure/arm-containerregistry.CredentialSetsDeleteHeaders"
          />&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string, string,
      CredentialSetsDeleteOptionalParams)
    uid: '@azure/arm-containerregistry.CredentialSets.beginDeleteAndWait'
    package: '@azure/arm-containerregistry'
    summary: Deletes a credential set from a container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, registryName:
        string, credentialSetName: string, options?:
        CredentialSetsDeleteOptionalParams):
        Promise<CredentialSetsDeleteHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: credentialSetName
          type: string
          description: The name of the credential set.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.CredentialSetsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-containerregistry.CredentialSetsDeleteHeaders" />&gt;
  - name: >-
      beginUpdate(string, string, string, CredentialSetUpdateParameters,
      CredentialSetsUpdateOptionalParams)
    uid: '@azure/arm-containerregistry.CredentialSets.beginUpdate'
    package: '@azure/arm-containerregistry'
    summary: >-
      Updates a credential set for a container registry with the specified
      parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, registryName: string,
        credentialSetName: string, credentialSetUpdateParameters:
        CredentialSetUpdateParameters, options?:
        CredentialSetsUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<CredentialSet>, CredentialSet>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: credentialSetName
          type: string
          description: The name of the credential set.
        - id: credentialSetUpdateParameters
          type: >-
            <xref
            uid="@azure/arm-containerregistry.CredentialSetUpdateParameters" />
          description: The parameters for updating a credential set.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.CredentialSetsUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-containerregistry.CredentialSet" />&gt;, <xref
          uid="@azure/arm-containerregistry.CredentialSet" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, CredentialSetUpdateParameters,
      CredentialSetsUpdateOptionalParams)
    uid: '@azure/arm-containerregistry.CredentialSets.beginUpdateAndWait'
    package: '@azure/arm-containerregistry'
    summary: >-
      Updates a credential set for a container registry with the specified
      parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, registryName:
        string, credentialSetName: string, credentialSetUpdateParameters:
        CredentialSetUpdateParameters, options?:
        CredentialSetsUpdateOptionalParams): Promise<CredentialSet>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: credentialSetName
          type: string
          description: The name of the credential set.
        - id: credentialSetUpdateParameters
          type: >-
            <xref
            uid="@azure/arm-containerregistry.CredentialSetUpdateParameters" />
          description: The parameters for updating a credential set.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.CredentialSetsUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-containerregistry.CredentialSet"
          />&gt;
  - name: get(string, string, string, CredentialSetsGetOptionalParams)
    uid: '@azure/arm-containerregistry.CredentialSets.get'
    package: '@azure/arm-containerregistry'
    summary: Gets the properties of the specified credential set resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, registryName: string,
        credentialSetName: string, options?: CredentialSetsGetOptionalParams):
        Promise<CredentialSet>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: credentialSetName
          type: string
          description: The name of the credential set.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.CredentialSetsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-containerregistry.CredentialSet"
          />&gt;
  - name: list(string, string, CredentialSetsListOptionalParams)
    uid: '@azure/arm-containerregistry.CredentialSets.list'
    package: '@azure/arm-containerregistry'
    summary: Lists all credential set resources for the specified container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, registryName: string, options?:
        CredentialSetsListOptionalParams):
        PagedAsyncIterableIterator<CredentialSet, CredentialSet[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.CredentialSetsListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-containerregistry.CredentialSet" />, <xref
          uid="@azure/arm-containerregistry.CredentialSet" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
