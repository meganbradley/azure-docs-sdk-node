### YamlMime:TSType
name: ScopeMaps
uid: '@azure/arm-containerregistry.ScopeMaps'
package: '@azure/arm-containerregistry'
summary: Interface representing a ScopeMaps.
fullName: ScopeMaps
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, string, string, ScopeMap,
      ScopeMapsCreateOptionalParams)
    uid: '@azure/arm-containerregistry.ScopeMaps.beginCreate'
    package: '@azure/arm-containerregistry'
    summary: >-
      Creates a scope map for a container registry with the specified
      parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, registryName: string,
        scopeMapName: string, scopeMapCreateParameters: ScopeMap, options?:
        ScopeMapsCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<ScopeMap>, ScopeMap>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: scopeMapName
          type: string
          description: The name of the scope map.
        - id: scopeMapCreateParameters
          type: <xref uid="@azure/arm-containerregistry.ScopeMap" />
          description: The parameters for creating a scope map.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.ScopeMapsCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-containerregistry.ScopeMap" />&gt;, <xref
          uid="@azure/arm-containerregistry.ScopeMap" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, string, ScopeMap,
      ScopeMapsCreateOptionalParams)
    uid: '@azure/arm-containerregistry.ScopeMaps.beginCreateAndWait'
    package: '@azure/arm-containerregistry'
    summary: >-
      Creates a scope map for a container registry with the specified
      parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, registryName:
        string, scopeMapName: string, scopeMapCreateParameters: ScopeMap,
        options?: ScopeMapsCreateOptionalParams): Promise<ScopeMap>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: scopeMapName
          type: string
          description: The name of the scope map.
        - id: scopeMapCreateParameters
          type: <xref uid="@azure/arm-containerregistry.ScopeMap" />
          description: The parameters for creating a scope map.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.ScopeMapsCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-containerregistry.ScopeMap" />&gt;
  - name: beginDelete(string, string, string, ScopeMapsDeleteOptionalParams)
    uid: '@azure/arm-containerregistry.ScopeMaps.beginDelete'
    package: '@azure/arm-containerregistry'
    summary: Deletes a scope map from a container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, registryName: string,
        scopeMapName: string, options?: ScopeMapsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: scopeMapName
          type: string
          description: The name of the scope map.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.ScopeMapsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: beginDeleteAndWait(string, string, string, ScopeMapsDeleteOptionalParams)
    uid: '@azure/arm-containerregistry.ScopeMaps.beginDeleteAndWait'
    package: '@azure/arm-containerregistry'
    summary: Deletes a scope map from a container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, registryName:
        string, scopeMapName: string, options?: ScopeMapsDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: scopeMapName
          type: string
          description: The name of the scope map.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.ScopeMapsDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, string, ScopeMapUpdateParameters,
      ScopeMapsUpdateOptionalParams)
    uid: '@azure/arm-containerregistry.ScopeMaps.beginUpdate'
    package: '@azure/arm-containerregistry'
    summary: Updates a scope map with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, registryName: string,
        scopeMapName: string, scopeMapUpdateParameters:
        ScopeMapUpdateParameters, options?: ScopeMapsUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<ScopeMap>, ScopeMap>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: scopeMapName
          type: string
          description: The name of the scope map.
        - id: scopeMapUpdateParameters
          type: <xref uid="@azure/arm-containerregistry.ScopeMapUpdateParameters" />
          description: The parameters for updating a scope map.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.ScopeMapsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-containerregistry.ScopeMap" />&gt;, <xref
          uid="@azure/arm-containerregistry.ScopeMap" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, ScopeMapUpdateParameters,
      ScopeMapsUpdateOptionalParams)
    uid: '@azure/arm-containerregistry.ScopeMaps.beginUpdateAndWait'
    package: '@azure/arm-containerregistry'
    summary: Updates a scope map with the specified parameters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, registryName:
        string, scopeMapName: string, scopeMapUpdateParameters:
        ScopeMapUpdateParameters, options?: ScopeMapsUpdateOptionalParams):
        Promise<ScopeMap>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: scopeMapName
          type: string
          description: The name of the scope map.
        - id: scopeMapUpdateParameters
          type: <xref uid="@azure/arm-containerregistry.ScopeMapUpdateParameters" />
          description: The parameters for updating a scope map.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-containerregistry.ScopeMapsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-containerregistry.ScopeMap" />&gt;
  - name: get(string, string, string, ScopeMapsGetOptionalParams)
    uid: '@azure/arm-containerregistry.ScopeMaps.get'
    package: '@azure/arm-containerregistry'
    summary: Gets the properties of the specified scope map.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, registryName: string,
        scopeMapName: string, options?: ScopeMapsGetOptionalParams):
        Promise<ScopeMap>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: scopeMapName
          type: string
          description: The name of the scope map.
        - id: options
          type: >-
            <xref uid="@azure/arm-containerregistry.ScopeMapsGetOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-containerregistry.ScopeMap" />&gt;
  - name: list(string, string, ScopeMapsListOptionalParams)
    uid: '@azure/arm-containerregistry.ScopeMaps.list'
    package: '@azure/arm-containerregistry'
    summary: Lists all the scope maps for the specified container registry.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, registryName: string, options?:
        ScopeMapsListOptionalParams): PagedAsyncIterableIterator<ScopeMap,
        ScopeMap[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: registryName
          type: string
          description: The name of the container registry.
        - id: options
          type: >-
            <xref uid="@azure/arm-containerregistry.ScopeMapsListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-containerregistry.ScopeMap" />, <xref
          uid="@azure/arm-containerregistry.ScopeMap" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
