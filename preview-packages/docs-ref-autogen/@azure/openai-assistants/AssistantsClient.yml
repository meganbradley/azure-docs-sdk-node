### YamlMime:TSType
name: AssistantsClient
uid: '@azure/openai-assistants.AssistantsClient'
package: '@azure/openai-assistants'
summary: Client handling assistant-related operations.
fullName: AssistantsClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: AssistantsClient(KeyCredential, AssistantsClientOptions)
    uid: '@azure/openai-assistants.AssistantsClient.constructor_2'
    package: '@azure/openai-assistants'
    summary: >-
      Initializes an instance of AssistantsClient for use with the non-Azure
      OpenAI endpoint.
    remarks: >-
      AssistantsClient objects initialized with this constructor can only be
      used with the non-Azure OpenAI inference endpoint.
        To use AssistantsClient with an Azure OpenAI resource, use a constructor that accepts a resource URI and Azure authentication credential instead.
    isDeprecated: false
    syntax:
      content: >-
        new AssistantsClient(openAiApiKey: KeyCredential, options?:
        AssistantsClientOptions)
      parameters:
        - id: openAiApiKey
          type: <xref uid="@azure/core-auth.KeyCredential" />
          description: The API key to use when connecting to the non-Azure OpenAI endpoint.
        - id: options
          type: <xref uid="@azure/openai-assistants.AssistantsClientOptions" />
          description: The options for configuring the client.
  - name: AssistantsClient(string, KeyCredential, AssistantsClientOptions)
    uid: '@azure/openai-assistants.AssistantsClient.constructor'
    package: '@azure/openai-assistants'
    summary: >-
      Initializes an instance of AssistantsClient for use with an OpenAI
      resource.
    remarks: >-
      This constructor initializes an AssistantsClient object that can only be
      used with Azure OpenAI resources.
        To use AssistantsClient with a non-Azure OpenAI inference endpoint, use a constructor that accepts a non-Azure OpenAI API key instead.
    isDeprecated: false
    syntax:
      content: >-
        new AssistantsClient(endpoint: string, credential: KeyCredential,
        options?: AssistantsClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: >-
            The URI for an Azure OpenAI resource, including protocol and
            hostname.
                            For example: https://my-resource.openai.azure.com.
        - id: credential
          type: <xref uid="@azure/core-auth.KeyCredential" />
          description: A key credential used to authenticate to an Azure OpenAI resource.
        - id: options
          type: <xref uid="@azure/openai-assistants.AssistantsClientOptions" />
          description: The options for configuring the client.
  - name: AssistantsClient(string, TokenCredential, AssistantsClientOptions)
    uid: '@azure/openai-assistants.AssistantsClient.constructor_1'
    package: '@azure/openai-assistants'
    summary: >-
      Initializes an instance of AssistantsClient for use with an Azure OpenAI
      resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new AssistantsClient(endpoint: string, credential: TokenCredential,
        options?: AssistantsClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: >-
            The URI for an Azure OpenAI resource, including protocol and
            hostname.
                            For example: https://my-resource.openai.azure.com.
        - id: credential
          type: <xref uid="@azure/core-auth.TokenCredential" />
          description: >-
            A token credential used to authenticate with an Azure OpenAI
            resource.
        - id: options
          type: <xref uid="@azure/openai-assistants.AssistantsClientOptions" />
          description: The options for configuring the client.
properties:
  - name: pipeline
    uid: '@azure/openai-assistants.AssistantsClient.pipeline'
    package: '@azure/openai-assistants'
    summary: The pipeline used by this client to make requests
    fullName: pipeline
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'pipeline: Pipeline'
      return:
        description: ''
        type: <xref uid="@azure/core-rest-pipeline.Pipeline" />
methods:
  - name: cancelRun(string, string, CancelRunOptions)
    uid: '@azure/openai-assistants.AssistantsClient.cancelRun'
    package: '@azure/openai-assistants'
    summary: Cancels a run of an in progress thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function cancelRun(threadId: string, runId: string, options?:
        CancelRunOptions): Promise<ThreadRun>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: runId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CancelRunOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;
  - name: createAssistant(AssistantCreationOptions, CreateAssistantOptions)
    uid: '@azure/openai-assistants.AssistantsClient.createAssistant'
    package: '@azure/openai-assistants'
    summary: Creates a new assistant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createAssistant(body: AssistantCreationOptions, options?:
        CreateAssistantOptions): Promise<Assistant>
      parameters:
        - id: body
          type: <xref uid="@azure/openai-assistants.AssistantCreationOptions" />
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CreateAssistantOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.Assistant" />&gt;
  - name: createAssistantFile(string, string, CreateAssistantFileOptions)
    uid: '@azure/openai-assistants.AssistantsClient.createAssistantFile'
    package: '@azure/openai-assistants'
    summary: >-
      Attaches a previously uploaded file to an assistant for use by tools that
      can read files.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createAssistantFile(assistantId: string, fileId: string,
        options?: CreateAssistantFileOptions): Promise<AssistantFile>
      parameters:
        - id: assistantId
          type: string
          description: ''
        - id: fileId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CreateAssistantFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.AssistantFile" />&gt;
  - name: createMessage(string, string, string, CreateMessageOptions)
    uid: '@azure/openai-assistants.AssistantsClient.createMessage'
    package: '@azure/openai-assistants'
    summary: Creates a new message on a specified thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createMessage(threadId: string, role: string, content: string,
        options?: CreateMessageOptions): Promise<ThreadMessage>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: role
          type: string
          description: ''
        - id: content
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CreateMessageOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadMessage" />&gt;
  - name: createRun(string, CreateRunOptions, CreateRunRequestOptions)
    uid: '@azure/openai-assistants.AssistantsClient.createRun'
    package: '@azure/openai-assistants'
    summary: Creates a new run for an assistant thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createRun(threadId: string, createRunOptions: CreateRunOptions,
        options?: CreateRunRequestOptions): Promise<ThreadRun>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: createRunOptions
          type: <xref uid="@azure/openai-assistants.CreateRunOptions" />
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CreateRunRequestOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;
  - name: createThread(AssistantThreadCreationOptions, CreateThreadOptions)
    uid: '@azure/openai-assistants.AssistantsClient.createThread'
    package: '@azure/openai-assistants'
    summary: >-
      Creates a new thread. Threads contain messages and can be run by
      assistants.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createThread(body?: AssistantThreadCreationOptions, options?:
        CreateThreadOptions): Promise<AssistantThread>
      parameters:
        - id: body
          type: >-
            <xref uid="@azure/openai-assistants.AssistantThreadCreationOptions"
            />
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CreateThreadOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.AssistantThread" />&gt;
  - name: createThreadAndRun(CreateAndRunThreadOptions, CreateThreadAndRunOptions)
    uid: '@azure/openai-assistants.AssistantsClient.createThreadAndRun'
    package: '@azure/openai-assistants'
    summary: >-
      Creates a new assistant thread and immediately starts a run using that new
      thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createThreadAndRun(body: CreateAndRunThreadOptions, options?:
        CreateThreadAndRunOptions): Promise<ThreadRun>
      parameters:
        - id: body
          type: <xref uid="@azure/openai-assistants.CreateAndRunThreadOptions" />
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.CreateThreadAndRunOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;
  - name: deleteAssistant(string, DeleteAssistantOptions)
    uid: '@azure/openai-assistants.AssistantsClient.deleteAssistant'
    package: '@azure/openai-assistants'
    summary: Deletes an assistant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteAssistant(assistantId: string, options?:
        DeleteAssistantOptions): Promise<AssistantDeletionStatus>
      parameters:
        - id: assistantId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.DeleteAssistantOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/openai-assistants.AssistantDeletionStatus" />&gt;
  - name: deleteAssistantFile(string, string, DeleteAssistantFileOptions)
    uid: '@azure/openai-assistants.AssistantsClient.deleteAssistantFile'
    package: '@azure/openai-assistants'
    summary: >-
      Unlinks a previously attached file from an assistant, rendering it
      unavailable for use by tools that can read

      files.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteAssistantFile(assistantId: string, fileId: string,
        options?: DeleteAssistantFileOptions):
        Promise<AssistantFileDeletionStatus>
      parameters:
        - id: assistantId
          type: string
          description: ''
        - id: fileId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.DeleteAssistantFileOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/openai-assistants.AssistantFileDeletionStatus" />&gt;
  - name: deleteFile(string, DeleteFileOptions)
    uid: '@azure/openai-assistants.AssistantsClient.deleteFile'
    package: '@azure/openai-assistants'
    summary: Delete a previously uploaded file.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteFile(fileId: string, options?: DeleteFileOptions):
        Promise<FileDeletionStatus>
      parameters:
        - id: fileId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.DeleteFileOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.FileDeletionStatus"
          />&gt;
  - name: deleteThread(string, DeleteThreadOptions)
    uid: '@azure/openai-assistants.AssistantsClient.deleteThread'
    package: '@azure/openai-assistants'
    summary: Deletes an existing thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteThread(threadId: string, options?: DeleteThreadOptions):
        Promise<ThreadDeletionStatus>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.DeleteThreadOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ThreadDeletionStatus"
          />&gt;
  - name: getAssistant(string, GetAssistantOptions)
    uid: '@azure/openai-assistants.AssistantsClient.getAssistant'
    package: '@azure/openai-assistants'
    summary: Retrieves an existing assistant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAssistant(assistantId: string, options?:
        GetAssistantOptions): Promise<Assistant>
      parameters:
        - id: assistantId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetAssistantOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.Assistant" />&gt;
  - name: getAssistantFile(string, string, GetAssistantFileOptions)
    uid: '@azure/openai-assistants.AssistantsClient.getAssistantFile'
    package: '@azure/openai-assistants'
    summary: Retrieves a file attached to an assistant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAssistantFile(assistantId: string, fileId: string, options?:
        GetAssistantFileOptions): Promise<AssistantFile>
      parameters:
        - id: assistantId
          type: string
          description: ''
        - id: fileId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetAssistantFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.AssistantFile" />&gt;
  - name: getFile(string, GetFileOptions)
    uid: '@azure/openai-assistants.AssistantsClient.getFile'
    package: '@azure/openai-assistants'
    summary: Returns information about a specific file. Does not retrieve file content.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getFile(fileId: string, options?: GetFileOptions):
        Promise<InputFile>
      parameters:
        - id: fileId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.InputFile" />&gt;
  - name: getMessage(string, string, GetMessageOptions)
    uid: '@azure/openai-assistants.AssistantsClient.getMessage'
    package: '@azure/openai-assistants'
    summary: Gets an existing message from an existing thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getMessage(threadId: string, messageId: string, options?:
        GetMessageOptions): Promise<ThreadMessage>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: messageId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetMessageOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadMessage" />&gt;
  - name: getMessageFile(string, string, string, GetMessageFileOptions)
    uid: '@azure/openai-assistants.AssistantsClient.getMessageFile'
    package: '@azure/openai-assistants'
    summary: Gets information about a file attachment to a message within a thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getMessageFile(threadId: string, messageId: string, fileId:
        string, options?: GetMessageFileOptions): Promise<MessageFile>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: messageId
          type: string
          description: ''
        - id: fileId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetMessageFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.MessageFile" />&gt;
  - name: getRun(string, string, GetRunOptions)
    uid: '@azure/openai-assistants.AssistantsClient.getRun'
    package: '@azure/openai-assistants'
    summary: Gets an existing run from an existing thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getRun(threadId: string, runId: string, options?:
        GetRunOptions): Promise<ThreadRun>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: runId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetRunOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;
  - name: getRunStep(string, string, string, GetRunStepOptions)
    uid: '@azure/openai-assistants.AssistantsClient.getRunStep'
    package: '@azure/openai-assistants'
    summary: Gets a single run step from a thread run.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getRunStep(threadId: string, runId: string, stepId: string,
        options?: GetRunStepOptions): Promise<RunStep>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: runId
          type: string
          description: ''
        - id: stepId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetRunStepOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.RunStep" />&gt;
  - name: getThread(string, GetThreadOptions)
    uid: '@azure/openai-assistants.AssistantsClient.getThread'
    package: '@azure/openai-assistants'
    summary: Gets information about an existing thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getThread(threadId: string, options?: GetThreadOptions):
        Promise<AssistantThread>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.GetThreadOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.AssistantThread" />&gt;
  - name: listAssistantFiles(string, ListAssistantFilesOptions)
    uid: '@azure/openai-assistants.AssistantsClient.listAssistantFiles'
    package: '@azure/openai-assistants'
    summary: >-
      Gets a list of files attached to a specific assistant, as used by tools
      that can read files.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAssistantFiles(assistantId: string, options?:
        ListAssistantFilesOptions): Promise<ListResponseOf<AssistantFile>>
      parameters:
        - id: assistantId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.ListAssistantFilesOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ListResponseOf"
          />&lt;<xref uid="@azure/openai-assistants.AssistantFile" />&gt;&gt;
  - name: listAssistants(ListAssistantsOptions)
    uid: '@azure/openai-assistants.AssistantsClient.listAssistants'
    package: '@azure/openai-assistants'
    summary: Gets a list of assistants that were previously created.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listAssistants(options?: ListAssistantsOptions):
        Promise<ListResponseOf<Assistant>>
      parameters:
        - id: options
          type: <xref uid="@azure/openai-assistants.ListAssistantsOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ListResponseOf"
          />&lt;<xref uid="@azure/openai-assistants.Assistant" />&gt;&gt;
  - name: listFiles(ListFilesOptions)
    uid: '@azure/openai-assistants.AssistantsClient.listFiles'
    package: '@azure/openai-assistants'
    summary: Gets a list of previously uploaded files.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listFiles(options?: ListFilesOptions):
        Promise<FileListResponse>
      parameters:
        - id: options
          type: <xref uid="@azure/openai-assistants.ListFilesOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.FileListResponse"
          />&gt;
  - name: listMessageFiles(string, string, ListMessageFilesOptions)
    uid: '@azure/openai-assistants.AssistantsClient.listMessageFiles'
    package: '@azure/openai-assistants'
    summary: >-
      Gets a list of previously uploaded files associated with a message from a
      thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listMessageFiles(threadId: string, messageId: string, options?:
        ListMessageFilesOptions): Promise<ListResponseOf<MessageFile>>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: messageId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.ListMessageFilesOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ListResponseOf"
          />&lt;<xref uid="@azure/openai-assistants.MessageFile" />&gt;&gt;
  - name: listMessages(string, ListMessagesOptions)
    uid: '@azure/openai-assistants.AssistantsClient.listMessages'
    package: '@azure/openai-assistants'
    summary: Gets a list of messages that exist on a thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listMessages(threadId: string, options?: ListMessagesOptions):
        Promise<ListResponseOf<ThreadMessage>>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.ListMessagesOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ListResponseOf"
          />&lt;<xref uid="@azure/openai-assistants.ThreadMessage" />&gt;&gt;
  - name: listRuns(string, ListRunsOptions)
    uid: '@azure/openai-assistants.AssistantsClient.listRuns'
    package: '@azure/openai-assistants'
    summary: Gets a list of runs for a specified thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listRuns(threadId: string, options?: ListRunsOptions):
        Promise<ListResponseOf<ThreadRun>>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.ListRunsOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ListResponseOf"
          />&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;&gt;
  - name: listRunSteps(string, string, ListRunStepsOptions)
    uid: '@azure/openai-assistants.AssistantsClient.listRunSteps'
    package: '@azure/openai-assistants'
    summary: Gets a list of run steps from a thread run.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listRunSteps(threadId: string, runId: string, options?:
        ListRunStepsOptions): Promise<ListResponseOf<RunStep>>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: runId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.ListRunStepsOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/openai-assistants.ListResponseOf"
          />&lt;<xref uid="@azure/openai-assistants.RunStep" />&gt;&gt;
  - name: >-
      submitToolOutputsToRun(string, string, ToolOutput[],
      SubmitToolOutputsToRunOptions)
    uid: '@azure/openai-assistants.AssistantsClient.submitToolOutputsToRun'
    package: '@azure/openai-assistants'
    summary: >-
      Submits outputs from tools as requested by tool calls in a run. Runs that
      need submitted tool outputs will have a status of 'requires_action' with a
      required_action.type of 'submit_tool_outputs'.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function submitToolOutputsToRun(threadId: string, runId: string,
        toolOutputs: ToolOutput[], options?: SubmitToolOutputsToRunOptions):
        Promise<ThreadRun>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: runId
          type: string
          description: ''
        - id: toolOutputs
          type: <xref uid="@azure/openai-assistants.ToolOutput" />[]
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/openai-assistants.SubmitToolOutputsToRunOptions"
            />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;
  - name: >-
      updateAssistant(string, UpdateAssistantOptions,
      UpdateAssistantRequestOptions)
    uid: '@azure/openai-assistants.AssistantsClient.updateAssistant'
    package: '@azure/openai-assistants'
    summary: Modifies an existing assistant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateAssistant(assistantId: string, body:
        UpdateAssistantOptions, options?: UpdateAssistantRequestOptions):
        Promise<Assistant>
      parameters:
        - id: assistantId
          type: string
          description: ''
        - id: body
          type: <xref uid="@azure/openai-assistants.UpdateAssistantOptions" />
          description: ''
        - id: options
          type: >-
            <xref uid="@azure/openai-assistants.UpdateAssistantRequestOptions"
            />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.Assistant" />&gt;
  - name: updateMessage(string, string, UpdateMessageOptions)
    uid: '@azure/openai-assistants.AssistantsClient.updateMessage'
    package: '@azure/openai-assistants'
    summary: Modifies an existing message on an existing thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateMessage(threadId: string, messageId: string, options?:
        UpdateMessageOptions): Promise<ThreadMessage>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: messageId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.UpdateMessageOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadMessage" />&gt;
  - name: updateRun(string, string, UpdateRunOptions)
    uid: '@azure/openai-assistants.AssistantsClient.updateRun'
    package: '@azure/openai-assistants'
    summary: Modifies an existing thread run.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateRun(threadId: string, runId: string, options?:
        UpdateRunOptions): Promise<ThreadRun>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: runId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.UpdateRunOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.ThreadRun" />&gt;
  - name: updateThread(string, UpdateThreadOptions)
    uid: '@azure/openai-assistants.AssistantsClient.updateThread'
    package: '@azure/openai-assistants'
    summary: Modifies an existing thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateThread(threadId: string, options?: UpdateThreadOptions):
        Promise<AssistantThread>
      parameters:
        - id: threadId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.UpdateThreadOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.AssistantThread" />&gt;
  - name: uploadFile(Uint8Array, string, UploadFileOptions)
    uid: '@azure/openai-assistants.AssistantsClient.uploadFile'
    package: '@azure/openai-assistants'
    summary: Uploads a file for use by other operations.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function uploadFile(file: Uint8Array, purpose: string, options?:
        UploadFileOptions): Promise<InputFile>
      parameters:
        - id: file
          type: Uint8Array
          description: ''
        - id: purpose
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/openai-assistants.UploadFileOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/openai-assistants.InputFile" />&gt;
