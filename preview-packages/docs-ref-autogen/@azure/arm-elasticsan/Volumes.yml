### YamlMime:TSType
name: Volumes
uid: '@azure/arm-elasticsan.Volumes'
package: '@azure/arm-elasticsan'
summary: Interface representing a Volumes.
fullName: Volumes
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, string, string, string, Volume,
      VolumesCreateOptionalParams)
    uid: '@azure/arm-elasticsan.Volumes.beginCreate'
    package: '@azure/arm-elasticsan'
    summary: Create a Volume.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, elasticSanName: string,
        volumeGroupName: string, volumeName: string, parameters: Volume,
        options?: VolumesCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<Volume>, Volume>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: elasticSanName
          type: string
          description: The name of the ElasticSan.
        - id: volumeGroupName
          type: string
          description: The name of the VolumeGroup.
        - id: volumeName
          type: string
          description: The name of the Volume.
        - id: parameters
          type: <xref uid="@azure/arm-elasticsan.Volume" />
          description: Volume object.
        - id: options
          type: <xref uid="@azure/arm-elasticsan.VolumesCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-elasticsan.Volume" />&gt;, <xref
          uid="@azure/arm-elasticsan.Volume" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, string, string, Volume,
      VolumesCreateOptionalParams)
    uid: '@azure/arm-elasticsan.Volumes.beginCreateAndWait'
    package: '@azure/arm-elasticsan'
    summary: Create a Volume.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, elasticSanName:
        string, volumeGroupName: string, volumeName: string, parameters: Volume,
        options?: VolumesCreateOptionalParams): Promise<Volume>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: elasticSanName
          type: string
          description: The name of the ElasticSan.
        - id: volumeGroupName
          type: string
          description: The name of the VolumeGroup.
        - id: volumeName
          type: string
          description: The name of the Volume.
        - id: parameters
          type: <xref uid="@azure/arm-elasticsan.Volume" />
          description: Volume object.
        - id: options
          type: <xref uid="@azure/arm-elasticsan.VolumesCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-elasticsan.Volume" />&gt;
  - name: beginDelete(string, string, string, string, VolumesDeleteOptionalParams)
    uid: '@azure/arm-elasticsan.Volumes.beginDelete'
    package: '@azure/arm-elasticsan'
    summary: Delete an Volume.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, elasticSanName: string,
        volumeGroupName: string, volumeName: string, options?:
        VolumesDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: elasticSanName
          type: string
          description: The name of the ElasticSan.
        - id: volumeGroupName
          type: string
          description: The name of the VolumeGroup.
        - id: volumeName
          type: string
          description: The name of the Volume.
        - id: options
          type: <xref uid="@azure/arm-elasticsan.VolumesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginDeleteAndWait(string, string, string, string,
      VolumesDeleteOptionalParams)
    uid: '@azure/arm-elasticsan.Volumes.beginDeleteAndWait'
    package: '@azure/arm-elasticsan'
    summary: Delete an Volume.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, elasticSanName:
        string, volumeGroupName: string, volumeName: string, options?:
        VolumesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: elasticSanName
          type: string
          description: The name of the ElasticSan.
        - id: volumeGroupName
          type: string
          description: The name of the VolumeGroup.
        - id: volumeName
          type: string
          description: The name of the Volume.
        - id: options
          type: <xref uid="@azure/arm-elasticsan.VolumesDeleteOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, string, string, VolumeUpdate,
      VolumesUpdateOptionalParams)
    uid: '@azure/arm-elasticsan.Volumes.beginUpdate'
    package: '@azure/arm-elasticsan'
    summary: Update an Volume.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, elasticSanName: string,
        volumeGroupName: string, volumeName: string, parameters: VolumeUpdate,
        options?: VolumesUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<Volume>, Volume>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: elasticSanName
          type: string
          description: The name of the ElasticSan.
        - id: volumeGroupName
          type: string
          description: The name of the VolumeGroup.
        - id: volumeName
          type: string
          description: The name of the Volume.
        - id: parameters
          type: <xref uid="@azure/arm-elasticsan.VolumeUpdate" />
          description: Volume object.
        - id: options
          type: <xref uid="@azure/arm-elasticsan.VolumesUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-elasticsan.Volume" />&gt;, <xref
          uid="@azure/arm-elasticsan.Volume" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, string, VolumeUpdate,
      VolumesUpdateOptionalParams)
    uid: '@azure/arm-elasticsan.Volumes.beginUpdateAndWait'
    package: '@azure/arm-elasticsan'
    summary: Update an Volume.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, elasticSanName:
        string, volumeGroupName: string, volumeName: string, parameters:
        VolumeUpdate, options?: VolumesUpdateOptionalParams): Promise<Volume>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: elasticSanName
          type: string
          description: The name of the ElasticSan.
        - id: volumeGroupName
          type: string
          description: The name of the VolumeGroup.
        - id: volumeName
          type: string
          description: The name of the Volume.
        - id: parameters
          type: <xref uid="@azure/arm-elasticsan.VolumeUpdate" />
          description: Volume object.
        - id: options
          type: <xref uid="@azure/arm-elasticsan.VolumesUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-elasticsan.Volume" />&gt;
  - name: get(string, string, string, string, VolumesGetOptionalParams)
    uid: '@azure/arm-elasticsan.Volumes.get'
    package: '@azure/arm-elasticsan'
    summary: Get an Volume.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, elasticSanName: string,
        volumeGroupName: string, volumeName: string, options?:
        VolumesGetOptionalParams): Promise<Volume>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: elasticSanName
          type: string
          description: The name of the ElasticSan.
        - id: volumeGroupName
          type: string
          description: The name of the VolumeGroup.
        - id: volumeName
          type: string
          description: The name of the Volume.
        - id: options
          type: <xref uid="@azure/arm-elasticsan.VolumesGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-elasticsan.Volume" />&gt;
  - name: >-
      listByVolumeGroup(string, string, string,
      VolumesListByVolumeGroupOptionalParams)
    uid: '@azure/arm-elasticsan.Volumes.listByVolumeGroup'
    package: '@azure/arm-elasticsan'
    summary: List Volumes in a VolumeGroup.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByVolumeGroup(resourceGroupName: string, elasticSanName:
        string, volumeGroupName: string, options?:
        VolumesListByVolumeGroupOptionalParams):
        PagedAsyncIterableIterator<Volume, Volume[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: elasticSanName
          type: string
          description: The name of the ElasticSan.
        - id: volumeGroupName
          type: string
          description: The name of the VolumeGroup.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-elasticsan.VolumesListByVolumeGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-elasticsan.Volume" />, <xref
          uid="@azure/arm-elasticsan.Volume" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
