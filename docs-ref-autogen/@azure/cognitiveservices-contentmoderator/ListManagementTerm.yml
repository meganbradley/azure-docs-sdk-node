### YamlMime:TSType
name: ListManagementTerm
uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm'
package: '@azure/cognitiveservices-contentmoderator'
summary: Class representing a ListManagementTerm.
fullName: ListManagementTerm
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: ListManagementTerm(ContentModeratorClientContext)
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.constructor'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Create a ListManagementTerm.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new ListManagementTerm(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext"
            />
          description: Reference to the service client.
methods:
  - name: addTerm(string, string, string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Add a term to the term list with list Id equal to list Id passed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addTerm(listId: string, term: string, language: string,
        options?: RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: term
          type: string
          description: Term to be deleted
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: addTerm(string, string, string, RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_2'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addTerm(listId: string, term: string, language: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: term
          type: string
          description: Term to be deleted
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: addTerm(string, string, string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_1'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addTerm(listId: string, term: string, language: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: term
          type: string
          description: Term to be deleted
        - id: language
          type: string
          description: Language of the terms.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteAllTerms(string, string, RequestOptionsBase)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Deletes all terms from the list with list Id equal to the list Id passed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteAllTerms(listId: string, language: string, options?:
        RequestOptionsBase): Promise<ListManagementTermDeleteAllTermsResponse>
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.ListManagementTermDeleteAllTermsResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.ListManagementTermDeleteAllTermsResponse"
          />&gt;
  - name: >-
      deleteAllTerms(string, string, RequestOptionsBase,
      ServiceCallback<string>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_2
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteAllTerms(listId: string, language: string, options:
        RequestOptionsBase, callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;string&gt;
          description: The callback
  - name: deleteAllTerms(string, string, ServiceCallback<string>)
    uid: >-
      @azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_1
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteAllTerms(listId: string, language: string, callback:
        ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;string&gt;
          description: The callback
  - name: deleteTerm(string, string, string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Deletes a term from the list with list Id equal to the list Id passed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteTerm(listId: string, term: string, language: string,
        options?: RequestOptionsBase):
        Promise<ListManagementTermDeleteTermResponse>
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: term
          type: string
          description: Term to be deleted
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.ListManagementTermDeleteTermResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.ListManagementTermDeleteTermResponse"
          />&gt;
  - name: >-
      deleteTerm(string, string, string, RequestOptionsBase,
      ServiceCallback<string>)
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_2'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteTerm(listId: string, term: string, language: string,
        options: RequestOptionsBase, callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: term
          type: string
          description: Term to be deleted
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;string&gt;
          description: The callback
  - name: deleteTerm(string, string, string, ServiceCallback<string>)
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_1'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteTerm(listId: string, term: string, language: string,
        callback: ServiceCallback<string>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: term
          type: string
          description: Term to be deleted
        - id: language
          type: string
          description: Language of the terms.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;string&gt;
          description: The callback
  - name: getAllTerms(string, string, ListManagementTermGetAllTermsOptionalParams)
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Gets all terms from the list with list Id equal to the list Id passed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAllTerms(listId: string, language: string, options?:
        ListManagementTermGetAllTermsOptionalParams):
        Promise<ListManagementTermGetAllTermsResponse>
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.ListManagementTermGetAllTermsOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.ListManagementTermGetAllTermsResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.ListManagementTermGetAllTermsResponse"
          />&gt;
  - name: >-
      getAllTerms(string, string, ListManagementTermGetAllTermsOptionalParams,
      ServiceCallback<Terms>)
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_2'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAllTerms(listId: string, language: string, options:
        ListManagementTermGetAllTermsOptionalParams, callback:
        ServiceCallback<Terms>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.ListManagementTermGetAllTermsOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.Terms"
            />&gt;
          description: The callback
  - name: getAllTerms(string, string, ServiceCallback<Terms>)
    uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_1'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getAllTerms(listId: string, language: string, callback:
        ServiceCallback<Terms>)
      parameters:
        - id: listId
          type: string
          description: List Id of the image list.
        - id: language
          type: string
          description: Language of the terms.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.Terms"
            />&gt;
          description: The callback
