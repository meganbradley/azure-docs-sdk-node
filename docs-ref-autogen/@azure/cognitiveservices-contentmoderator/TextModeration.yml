### YamlMime:TSType
name: TextModeration
uid: '@azure/cognitiveservices-contentmoderator.TextModeration'
package: '@azure/cognitiveservices-contentmoderator'
summary: Class representing a TextModeration.
fullName: TextModeration
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: TextModeration(ContentModeratorClientContext)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.constructor'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: Create a TextModeration.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new TextModeration(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext"
            />
          description: Reference to the service client.
methods:
  - name: detectLanguage(TextContentType1, HttpRequestBody, RequestOptionsBase)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: >-
      This operation will detect the language of given input content. Returns
      the <a

      href="http://www-01.sil.org/iso639-3/codes.asp">ISO 639-3 code</a> for the
      predominant language

      comprising the submitted text. Over 110 languages supported.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function detectLanguage(textContentType: TextContentType1, textContent:
        HttpRequestBody, options?: RequestOptionsBase):
        Promise<TextModerationDetectLanguageResponse>
      parameters:
        - id: textContentType
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.TextContentType1"
            />
          description: >-
            The content type. Possible values include: 'text/plain',
            'text/html',

            'text/xml', 'text/markdown'
        - id: textContent
          type: <xref uid="@azure/ms-rest-js.HttpRequestBody" />
          description: Content to screen.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.TextModerationDetectLanguageResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.TextModerationDetectLanguageResponse"
          />&gt;
  - name: >-
      detectLanguage(TextContentType1, HttpRequestBody, RequestOptionsBase,
      ServiceCallback<DetectedLanguage>)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage_2'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function detectLanguage(textContentType: TextContentType1, textContent:
        HttpRequestBody, options: RequestOptionsBase, callback:
        ServiceCallback<DetectedLanguage>)
      parameters:
        - id: textContentType
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.TextContentType1"
            />
          description: >-
            The content type. Possible values include: 'text/plain',
            'text/html',

            'text/xml', 'text/markdown'
        - id: textContent
          type: <xref uid="@azure/ms-rest-js.HttpRequestBody" />
          description: Content to screen.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.DetectedLanguage"
            />&gt;
          description: The callback
  - name: >-
      detectLanguage(TextContentType1, HttpRequestBody,
      ServiceCallback<DetectedLanguage>)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.detectLanguage_1'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function detectLanguage(textContentType: TextContentType1, textContent:
        HttpRequestBody, callback: ServiceCallback<DetectedLanguage>)
      parameters:
        - id: textContentType
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.TextContentType1"
            />
          description: >-
            The content type. Possible values include: 'text/plain',
            'text/html',

            'text/xml', 'text/markdown'
        - id: textContent
          type: <xref uid="@azure/ms-rest-js.HttpRequestBody" />
          description: Content to screen.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.DetectedLanguage"
            />&gt;
          description: The callback
  - name: screenText(TextContentType, HttpRequestBody, ServiceCallback<Screen>)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.screenText_1'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function screenText(textContentType: TextContentType, textContent:
        HttpRequestBody, callback: ServiceCallback<Screen>)
      parameters:
        - id: textContentType
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.TextContentType"
            />
          description: >-
            The content type. Possible values include: 'text/plain',
            'text/html',

            'text/xml', 'text/markdown'
        - id: textContent
          type: <xref uid="@azure/ms-rest-js.HttpRequestBody" />
          description: Content to screen.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.Screen"
            />&gt;
          description: The callback
  - name: >-
      screenText(TextContentType, HttpRequestBody,
      TextModerationScreenTextOptionalParams)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.screenText'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: >-
      Detects profanity in more than 100 languages and match against custom and
      shared blacklists.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function screenText(textContentType: TextContentType, textContent:
        HttpRequestBody, options?: TextModerationScreenTextOptionalParams):
        Promise<TextModerationScreenTextResponse>
      parameters:
        - id: textContentType
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.TextContentType"
            />
          description: >-
            The content type. Possible values include: 'text/plain',
            'text/html',

            'text/xml', 'text/markdown'
        - id: textContent
          type: <xref uid="@azure/ms-rest-js.HttpRequestBody" />
          description: Content to screen.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.TextModerationScreenTextOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.TextModerationScreenTextResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.TextModerationScreenTextResponse"
          />&gt;
  - name: >-
      screenText(TextContentType, HttpRequestBody,
      TextModerationScreenTextOptionalParams, ServiceCallback<Screen>)
    uid: '@azure/cognitiveservices-contentmoderator.TextModeration.screenText_2'
    package: '@azure/cognitiveservices-contentmoderator'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function screenText(textContentType: TextContentType, textContent:
        HttpRequestBody, options: TextModerationScreenTextOptionalParams,
        callback: ServiceCallback<Screen>)
      parameters:
        - id: textContentType
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.TextContentType"
            />
          description: >-
            The content type. Possible values include: 'text/plain',
            'text/html',

            'text/xml', 'text/markdown'
        - id: textContent
          type: <xref uid="@azure/ms-rest-js.HttpRequestBody" />
          description: Content to screen.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.TextModerationScreenTextOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-contentmoderator.ContentModeratorModels.Screen"
            />&gt;
          description: The callback
