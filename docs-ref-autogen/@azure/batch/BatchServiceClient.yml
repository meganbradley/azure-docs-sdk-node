### YamlMime:TSType
name: BatchServiceClient
uid: '@azure/batch.BatchServiceClient'
package: '@azure/batch'
summary: ''
fullName: BatchServiceClient
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: >-
      BatchServiceClient(ServiceClientCredentials, string,
      AzureServiceClientOptions)
    uid: '@azure/batch.BatchServiceClient.constructor'
    package: '@azure/batch'
    summary: Initializes a new instance of the BatchServiceClient class.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new BatchServiceClient(credentials: ServiceClientCredentials, batchUrl:
        string, options?: AzureServiceClientOptions)
      parameters:
        - id: credentials
          type: <xref uid="@azure/ms-rest-js.ServiceClientCredentials" />
          description: Credentials needed for the client to connect to Azure.
        - id: batchUrl
          type: string
          description: The base URL for all Azure Batch service requests.
        - id: options
          type: <xref uid="@azure/ms-rest-azure-js.AzureServiceClientOptions" />
          description: The parameter options
properties:
  - name: account
    uid: '@azure/batch.BatchServiceClient.account'
    package: '@azure/batch'
    summary: ''
    fullName: account
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'account: Account'
      return:
        description: ''
        type: <xref uid="@azure/batch.Account" />
  - name: application
    uid: '@azure/batch.BatchServiceClient.application'
    package: '@azure/batch'
    summary: ''
    fullName: application
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'application: Application'
      return:
        description: ''
        type: <xref uid="@azure/batch.Application" />
  - name: certificate
    uid: '@azure/batch.BatchServiceClient.certificate'
    package: '@azure/batch'
    summary: ''
    fullName: certificate
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'certificate: CertificateOperations'
      return:
        description: ''
        type: <xref uid="@azure/batch.CertificateOperations" />
  - name: computeNode
    uid: '@azure/batch.BatchServiceClient.computeNode'
    package: '@azure/batch'
    summary: ''
    fullName: computeNode
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'computeNode: ComputeNodeOperations'
      return:
        description: ''
        type: <xref uid="@azure/batch.ComputeNodeOperations" />
  - name: file
    uid: '@azure/batch.BatchServiceClient.file'
    package: '@azure/batch'
    summary: ''
    fullName: file
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'file: File'
      return:
        description: ''
        type: <xref uid="@azure/batch.File" />
  - name: job
    uid: '@azure/batch.BatchServiceClient.job'
    package: '@azure/batch'
    summary: ''
    fullName: job
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'job: Job'
      return:
        description: ''
        type: <xref uid="@azure/batch.Job" />
  - name: jobSchedule
    uid: '@azure/batch.BatchServiceClient.jobSchedule'
    package: '@azure/batch'
    summary: ''
    fullName: jobSchedule
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'jobSchedule: JobSchedule'
      return:
        description: ''
        type: <xref uid="@azure/batch.JobSchedule" />
  - name: pool
    uid: '@azure/batch.BatchServiceClient.pool'
    package: '@azure/batch'
    summary: ''
    fullName: pool
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'pool: Pool'
      return:
        description: ''
        type: <xref uid="@azure/batch.Pool" />
  - name: task
    uid: '@azure/batch.BatchServiceClient.task'
    package: '@azure/batch'
    summary: ''
    fullName: task
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'task: Task'
      return:
        description: ''
        type: <xref uid="@azure/batch.Task" />
inheritedProperties:
  - name: acceptLanguage
    uid: '@azure/batch.BatchServiceClient.acceptLanguage'
    package: '@azure/batch'
    summary: ''
    fullName: acceptLanguage
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'acceptLanguage: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [BatchServiceClientContext.acceptLanguage](xref:@azure/batch.BatchServiceClientContext.acceptLanguage)
  - name: apiVersion
    uid: '@azure/batch.BatchServiceClient.apiVersion'
    package: '@azure/batch'
    summary: ''
    fullName: apiVersion
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'apiVersion?: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [BatchServiceClientContext.apiVersion](xref:@azure/batch.BatchServiceClientContext.apiVersion)
  - name: batchUrl
    uid: '@azure/batch.BatchServiceClient.batchUrl'
    package: '@azure/batch'
    summary: ''
    fullName: batchUrl
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'batchUrl: string'
      return:
        description: ''
        type: string
    inheritanceDescription: >-
      <b>Inherited From</b>
      [BatchServiceClientContext.batchUrl](xref:@azure/batch.BatchServiceClientContext.batchUrl)
  - name: credentials
    uid: '@azure/batch.BatchServiceClient.credentials'
    package: '@azure/batch'
    summary: ''
    fullName: credentials
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        description: ''
        type: <xref uid="@azure/ms-rest-js.ServiceClientCredentials" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [BatchServiceClientContext.credentials](xref:@azure/batch.BatchServiceClientContext.credentials)
  - name: longRunningOperationRetryTimeout
    uid: '@azure/batch.BatchServiceClient.longRunningOperationRetryTimeout'
    package: '@azure/batch'
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    fullName: longRunningOperationRetryTimeout
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'longRunningOperationRetryTimeout?: number'
      return:
        description: ''
        type: number
    inheritanceDescription: >-
      <b>Inherited From</b>
      [BatchServiceClientContext.longRunningOperationRetryTimeout](xref:@azure/batch.BatchServiceClientContext.longRunningOperationRetryTimeout)
inheritedMethods:
  - name: >-
      beginLongRunningRequest(WebResource | RequestPrepareOptions,
      RequestOptionsBase)
    uid: '@azure/batch.BatchServiceClient.beginLongRunningRequest'
    package: '@azure/batch'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginLongRunningRequest(request: WebResource |
        RequestPrepareOptions, options?: RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: request
          type: >-
            <xref uid="@azure/ms-rest-js.WebResource" /> | <xref
            uid="@azure/ms-rest-js.RequestPrepareOptions" />
          description: The request object
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: Additional options to be sent while making the request
      return:
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
        type: Promise&lt;<xref uid="@azure/ms-rest-azure-js.LROPoller" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [BatchServiceClientContext.beginLongRunningRequest](xref:@azure/batch.BatchServiceClientContext.beginLongRunningRequest)
  - name: restoreLROPoller(LROPollState)
    uid: '@azure/batch.BatchServiceClient.restoreLROPoller'
    package: '@azure/batch'
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState): LROPoller'
      parameters:
        - id: lroPollState
          type: <xref uid="@azure/ms-rest-azure-js.LROPollState" />
          description: ''
      return:
        description: ''
        type: <xref uid="@azure/ms-rest-azure-js.LROPoller" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [BatchServiceClientContext.restoreLROPoller](xref:@azure/batch.BatchServiceClientContext.restoreLROPoller)
  - name: >-
      sendLongRunningRequest(WebResource | RequestPrepareOptions,
      RequestOptionsBase)
    uid: '@azure/batch.BatchServiceClient.sendLongRunningRequest'
    package: '@azure/batch'
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest(request: WebResource |
        RequestPrepareOptions, options?: RequestOptionsBase):
        Promise<HttpOperationResponse>
      parameters:
        - id: request
          type: >-
            <xref uid="@azure/ms-rest-js.WebResource" /> | <xref
            uid="@azure/ms-rest-js.RequestPrepareOptions" />
          description: The request object
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: Additional options to be sent while making the request
      return:
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
        type: Promise&lt;<xref uid="@azure/ms-rest-js.HttpOperationResponse" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [BatchServiceClientContext.sendLongRunningRequest](xref:@azure/batch.BatchServiceClientContext.sendLongRunningRequest)
  - name: sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)
    uid: '@azure/batch.BatchServiceClient.sendLRORequest'
    package: '@azure/batch'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase):
        Promise<LROPoller>
      parameters:
        - id: operationArguments
          type: <xref uid="@azure/ms-rest-js.OperationArguments" />
          description: The arguments to the operation.
        - id: operationSpec
          type: <xref uid="@azure/ms-rest-js.OperationSpec" />
          description: The specification for the operation.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: Additional options to be sent while making the request.
      return:
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
        type: Promise&lt;<xref uid="@azure/ms-rest-azure-js.LROPoller" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [BatchServiceClientContext.sendLRORequest](xref:@azure/batch.BatchServiceClientContext.sendLRORequest)
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: '@azure/batch.BatchServiceClient.sendOperationRequest'
    package: '@azure/batch'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>):
        Promise<RestResponse>
      parameters:
        - id: operationArguments
          type: <xref uid="@azure/ms-rest-js.OperationArguments" />
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: <xref uid="@azure/ms-rest-js.OperationSpec" />
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;any&gt;
          description: The callback to call when the response is received.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [BatchServiceClientContext.sendOperationRequest](xref:@azure/batch.BatchServiceClientContext.sendOperationRequest)
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: '@azure/batch.BatchServiceClient.sendRequest'
    package: '@azure/batch'
    summary: Send the provided httpRequest.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendRequest(options: RequestPrepareOptions | WebResourceLike):
        Promise<HttpOperationResponse>
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/ms-rest-js.RequestPrepareOptions" /> | <xref
            uid="@azure/ms-rest-js.WebResourceLike" />
          description: ''
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/ms-rest-js.HttpOperationResponse" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [BatchServiceClientContext.sendRequest](xref:@azure/batch.BatchServiceClientContext.sendRequest)
extends: <xref uid="@azure/batch.BatchServiceClientContext" />
