### YamlMime:TSType
name: GremlinResources
uid: '@azure/arm-cosmosdb.GremlinResources'
package: '@azure/arm-cosmosdb'
summary: Interface representing a GremlinResources.
fullName: GremlinResources
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateUpdateGremlinDatabase(string, string, string,
      GremlinDatabaseCreateUpdateParameters,
      GremlinResourcesCreateUpdateGremlinDatabaseOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.beginCreateUpdateGremlinDatabase'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Gremlin database
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateGremlinDatabase(resourceGroupName: string,
        accountName: string, databaseName: string,
        createUpdateGremlinDatabaseParameters:
        GremlinDatabaseCreateUpdateParameters, options?:
        GremlinResourcesCreateUpdateGremlinDatabaseOptionalParams):
        Promise<SimplePollerLike<OperationState<GremlinDatabaseGetResults>,
        GremlinDatabaseGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: createUpdateGremlinDatabaseParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters" />
          description: |-
            The parameters to provide for the current Gremlin
                                                         database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesCreateUpdateGremlinDatabaseOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.GremlinDatabaseGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.GremlinDatabaseGetResults" />&gt;&gt;
  - name: >-
      beginCreateUpdateGremlinDatabaseAndWait(string, string, string,
      GremlinDatabaseCreateUpdateParameters,
      GremlinResourcesCreateUpdateGremlinDatabaseOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.GremlinResources.beginCreateUpdateGremlinDatabaseAndWait
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Gremlin database
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateGremlinDatabaseAndWait(resourceGroupName:
        string, accountName: string, databaseName: string,
        createUpdateGremlinDatabaseParameters:
        GremlinDatabaseCreateUpdateParameters, options?:
        GremlinResourcesCreateUpdateGremlinDatabaseOptionalParams):
        Promise<GremlinDatabaseGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: createUpdateGremlinDatabaseParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinDatabaseCreateUpdateParameters" />
          description: |-
            The parameters to provide for the current Gremlin
                                                         database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesCreateUpdateGremlinDatabaseOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.GremlinDatabaseGetResults"
          />&gt;
  - name: >-
      beginCreateUpdateGremlinGraph(string, string, string, string,
      GremlinGraphCreateUpdateParameters,
      GremlinResourcesCreateUpdateGremlinGraphOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.beginCreateUpdateGremlinGraph'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Gremlin graph
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateGremlinGraph(resourceGroupName: string,
        accountName: string, databaseName: string, graphName: string,
        createUpdateGremlinGraphParameters: GremlinGraphCreateUpdateParameters,
        options?: GremlinResourcesCreateUpdateGremlinGraphOptionalParams):
        Promise<SimplePollerLike<OperationState<GremlinGraphGetResults>,
        GremlinGraphGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: createUpdateGremlinGraphParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters"
            />
          description: The parameters to provide for the current Gremlin graph.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesCreateUpdateGremlinGraphOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.GremlinGraphGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.GremlinGraphGetResults" />&gt;&gt;
  - name: >-
      beginCreateUpdateGremlinGraphAndWait(string, string, string, string,
      GremlinGraphCreateUpdateParameters,
      GremlinResourcesCreateUpdateGremlinGraphOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.beginCreateUpdateGremlinGraphAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Create or update an Azure Cosmos DB Gremlin graph
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateGremlinGraphAndWait(resourceGroupName: string,
        accountName: string, databaseName: string, graphName: string,
        createUpdateGremlinGraphParameters: GremlinGraphCreateUpdateParameters,
        options?: GremlinResourcesCreateUpdateGremlinGraphOptionalParams):
        Promise<GremlinGraphGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: createUpdateGremlinGraphParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.GremlinGraphCreateUpdateParameters"
            />
          description: The parameters to provide for the current Gremlin graph.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesCreateUpdateGremlinGraphOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.GremlinGraphGetResults"
          />&gt;
  - name: >-
      beginDeleteGremlinDatabase(string, string, string,
      GremlinResourcesDeleteGremlinDatabaseOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.beginDeleteGremlinDatabase'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Gremlin database.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteGremlinDatabase(resourceGroupName: string,
        accountName: string, databaseName: string, options?:
        GremlinResourcesDeleteGremlinDatabaseOptionalParams):
        Promise<SimplePollerLike<OperationState<GremlinResourcesDeleteGremlinDatabaseHeaders>,
        GremlinResourcesDeleteGremlinDatabaseHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesDeleteGremlinDatabaseOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.GremlinResourcesDeleteGremlinDatabaseHeaders"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.GremlinResourcesDeleteGremlinDatabaseHeaders"
          />&gt;&gt;
  - name: >-
      beginDeleteGremlinDatabaseAndWait(string, string, string,
      GremlinResourcesDeleteGremlinDatabaseOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.beginDeleteGremlinDatabaseAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Gremlin database.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteGremlinDatabaseAndWait(resourceGroupName: string,
        accountName: string, databaseName: string, options?:
        GremlinResourcesDeleteGremlinDatabaseOptionalParams):
        Promise<GremlinResourcesDeleteGremlinDatabaseHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesDeleteGremlinDatabaseOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.GremlinResourcesDeleteGremlinDatabaseHeaders"
          />&gt;
  - name: >-
      beginDeleteGremlinGraph(string, string, string, string,
      GremlinResourcesDeleteGremlinGraphOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.beginDeleteGremlinGraph'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Gremlin graph.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteGremlinGraph(resourceGroupName: string, accountName:
        string, databaseName: string, graphName: string, options?:
        GremlinResourcesDeleteGremlinGraphOptionalParams):
        Promise<SimplePollerLike<OperationState<GremlinResourcesDeleteGremlinGraphHeaders>,
        GremlinResourcesDeleteGremlinGraphHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesDeleteGremlinGraphOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.GremlinResourcesDeleteGremlinGraphHeaders"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.GremlinResourcesDeleteGremlinGraphHeaders"
          />&gt;&gt;
  - name: >-
      beginDeleteGremlinGraphAndWait(string, string, string, string,
      GremlinResourcesDeleteGremlinGraphOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.beginDeleteGremlinGraphAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB Gremlin graph.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteGremlinGraphAndWait(resourceGroupName: string,
        accountName: string, databaseName: string, graphName: string, options?:
        GremlinResourcesDeleteGremlinGraphOptionalParams):
        Promise<GremlinResourcesDeleteGremlinGraphHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesDeleteGremlinGraphOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.GremlinResourcesDeleteGremlinGraphHeaders"
          />&gt;
  - name: >-
      beginMigrateGremlinDatabaseToAutoscale(string, string, string,
      GremlinResourcesMigrateGremlinDatabaseToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.GremlinResources.beginMigrateGremlinDatabaseToAutoscale
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Gremlin database from manual throughput to
      autoscale
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateGremlinDatabaseToAutoscale(resourceGroupName:
        string, accountName: string, databaseName: string, options?:
        GremlinResourcesMigrateGremlinDatabaseToAutoscaleOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesMigrateGremlinDatabaseToAutoscaleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginMigrateGremlinDatabaseToAutoscaleAndWait(string, string, string,
      GremlinResourcesMigrateGremlinDatabaseToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.GremlinResources.beginMigrateGremlinDatabaseToAutoscaleAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Gremlin database from manual throughput to
      autoscale
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateGremlinDatabaseToAutoscaleAndWait(resourceGroupName: string,
        accountName: string, databaseName: string, options?:
        GremlinResourcesMigrateGremlinDatabaseToAutoscaleOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesMigrateGremlinDatabaseToAutoscaleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      beginMigrateGremlinDatabaseToManualThroughput(string, string, string,
      GremlinResourcesMigrateGremlinDatabaseToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.GremlinResources.beginMigrateGremlinDatabaseToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Gremlin database from autoscale to manual
      throughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateGremlinDatabaseToManualThroughput(resourceGroupName: string,
        accountName: string, databaseName: string, options?:
        GremlinResourcesMigrateGremlinDatabaseToManualThroughputOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesMigrateGremlinDatabaseToManualThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginMigrateGremlinDatabaseToManualThroughputAndWait(string, string,
      string,
      GremlinResourcesMigrateGremlinDatabaseToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.GremlinResources.beginMigrateGremlinDatabaseToManualThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Gremlin database from autoscale to manual
      throughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateGremlinDatabaseToManualThroughputAndWait(resourceGroupName:
        string, accountName: string, databaseName: string, options?:
        GremlinResourcesMigrateGremlinDatabaseToManualThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesMigrateGremlinDatabaseToManualThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      beginMigrateGremlinGraphToAutoscale(string, string, string, string,
      GremlinResourcesMigrateGremlinGraphToAutoscaleOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.beginMigrateGremlinGraphToAutoscale'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Gremlin graph from manual throughput to
      autoscale
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateGremlinGraphToAutoscale(resourceGroupName: string,
        accountName: string, databaseName: string, graphName: string, options?:
        GremlinResourcesMigrateGremlinGraphToAutoscaleOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesMigrateGremlinGraphToAutoscaleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginMigrateGremlinGraphToAutoscaleAndWait(string, string, string, string,
      GremlinResourcesMigrateGremlinGraphToAutoscaleOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.GremlinResources.beginMigrateGremlinGraphToAutoscaleAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Gremlin graph from manual throughput to
      autoscale
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateGremlinGraphToAutoscaleAndWait(resourceGroupName:
        string, accountName: string, databaseName: string, graphName: string,
        options?: GremlinResourcesMigrateGremlinGraphToAutoscaleOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesMigrateGremlinGraphToAutoscaleOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      beginMigrateGremlinGraphToManualThroughput(string, string, string, string,
      GremlinResourcesMigrateGremlinGraphToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.GremlinResources.beginMigrateGremlinGraphToManualThroughput
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Gremlin graph from autoscale to manual
      throughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginMigrateGremlinGraphToManualThroughput(resourceGroupName:
        string, accountName: string, databaseName: string, graphName: string,
        options?:
        GremlinResourcesMigrateGremlinGraphToManualThroughputOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesMigrateGremlinGraphToManualThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginMigrateGremlinGraphToManualThroughputAndWait(string, string, string,
      string,
      GremlinResourcesMigrateGremlinGraphToManualThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.GremlinResources.beginMigrateGremlinGraphToManualThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: >-
      Migrate an Azure Cosmos DB Gremlin graph from autoscale to manual
      throughput
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        beginMigrateGremlinGraphToManualThroughputAndWait(resourceGroupName:
        string, accountName: string, databaseName: string, graphName: string,
        options?:
        GremlinResourcesMigrateGremlinGraphToManualThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesMigrateGremlinGraphToManualThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      beginRetrieveContinuousBackupInformation(string, string, string, string,
      ContinuousBackupRestoreLocation,
      GremlinResourcesRetrieveContinuousBackupInformationOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.GremlinResources.beginRetrieveContinuousBackupInformation
    package: '@azure/arm-cosmosdb'
    summary: Retrieves continuous backup information for a gremlin graph.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRetrieveContinuousBackupInformation(resourceGroupName:
        string, accountName: string, databaseName: string, graphName: string,
        location: ContinuousBackupRestoreLocation, options?:
        GremlinResourcesRetrieveContinuousBackupInformationOptionalParams):
        Promise<SimplePollerLike<OperationState<BackupInformation>,
        BackupInformation>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: location
          type: <xref uid="@azure/arm-cosmosdb.ContinuousBackupRestoreLocation" />
          description: The name of the continuous backup restore location.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesRetrieveContinuousBackupInformationOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.BackupInformation" />&gt;, <xref
          uid="@azure/arm-cosmosdb.BackupInformation" />&gt;&gt;
  - name: >-
      beginRetrieveContinuousBackupInformationAndWait(string, string, string,
      string, ContinuousBackupRestoreLocation,
      GremlinResourcesRetrieveContinuousBackupInformationOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.GremlinResources.beginRetrieveContinuousBackupInformationAndWait
    package: '@azure/arm-cosmosdb'
    summary: Retrieves continuous backup information for a gremlin graph.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function
        beginRetrieveContinuousBackupInformationAndWait(resourceGroupName:
        string, accountName: string, databaseName: string, graphName: string,
        location: ContinuousBackupRestoreLocation, options?:
        GremlinResourcesRetrieveContinuousBackupInformationOptionalParams):
        Promise<BackupInformation>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: location
          type: <xref uid="@azure/arm-cosmosdb.ContinuousBackupRestoreLocation" />
          description: The name of the continuous backup restore location.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesRetrieveContinuousBackupInformationOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-cosmosdb.BackupInformation" />&gt;
  - name: >-
      beginUpdateGremlinDatabaseThroughput(string, string, string,
      ThroughputSettingsUpdateParameters,
      GremlinResourcesUpdateGremlinDatabaseThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.beginUpdateGremlinDatabaseThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Gremlin database
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateGremlinDatabaseThroughput(resourceGroupName: string,
        accountName: string, databaseName: string, updateThroughputParameters:
        ThroughputSettingsUpdateParameters, options?:
        GremlinResourcesUpdateGremlinDatabaseThroughputOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Gremlin database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesUpdateGremlinDatabaseThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginUpdateGremlinDatabaseThroughputAndWait(string, string, string,
      ThroughputSettingsUpdateParameters,
      GremlinResourcesUpdateGremlinDatabaseThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.GremlinResources.beginUpdateGremlinDatabaseThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Gremlin database
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateGremlinDatabaseThroughputAndWait(resourceGroupName:
        string, accountName: string, databaseName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?:
        GremlinResourcesUpdateGremlinDatabaseThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Gremlin database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesUpdateGremlinDatabaseThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      beginUpdateGremlinGraphThroughput(string, string, string, string,
      ThroughputSettingsUpdateParameters,
      GremlinResourcesUpdateGremlinGraphThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.beginUpdateGremlinGraphThroughput'
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Gremlin graph
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateGremlinGraphThroughput(resourceGroupName: string,
        accountName: string, databaseName: string, graphName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?: GremlinResourcesUpdateGremlinGraphThroughputOptionalParams):
        Promise<SimplePollerLike<OperationState<ThroughputSettingsGetResults>,
        ThroughputSettingsGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Gremlin graph.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesUpdateGremlinGraphThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;&gt;
  - name: >-
      beginUpdateGremlinGraphThroughputAndWait(string, string, string, string,
      ThroughputSettingsUpdateParameters,
      GremlinResourcesUpdateGremlinGraphThroughputOptionalParams)
    uid: >-
      @azure/arm-cosmosdb.GremlinResources.beginUpdateGremlinGraphThroughputAndWait
    package: '@azure/arm-cosmosdb'
    summary: Update RUs per second of an Azure Cosmos DB Gremlin graph
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateGremlinGraphThroughputAndWait(resourceGroupName:
        string, accountName: string, databaseName: string, graphName: string,
        updateThroughputParameters: ThroughputSettingsUpdateParameters,
        options?: GremlinResourcesUpdateGremlinGraphThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: updateThroughputParameters
          type: >-
            <xref uid="@azure/arm-cosmosdb.ThroughputSettingsUpdateParameters"
            />
          description: |-
            The RUs per second of the parameters to provide for the current
                                              Gremlin graph.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesUpdateGremlinGraphThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      getGremlinDatabase(string, string, string,
      GremlinResourcesGetGremlinDatabaseOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.getGremlinDatabase'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the Gremlin databases under an existing Azure Cosmos DB database
      account with the provided

      name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getGremlinDatabase(resourceGroupName: string, accountName:
        string, databaseName: string, options?:
        GremlinResourcesGetGremlinDatabaseOptionalParams):
        Promise<GremlinDatabaseGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesGetGremlinDatabaseOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.GremlinDatabaseGetResults"
          />&gt;
  - name: >-
      getGremlinDatabaseThroughput(string, string, string,
      GremlinResourcesGetGremlinDatabaseThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.getGremlinDatabaseThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the RUs per second of the Gremlin database under an existing Azure
      Cosmos DB database account

      with the provided name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getGremlinDatabaseThroughput(resourceGroupName: string,
        accountName: string, databaseName: string, options?:
        GremlinResourcesGetGremlinDatabaseThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesGetGremlinDatabaseThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      getGremlinGraph(string, string, string, string,
      GremlinResourcesGetGremlinGraphOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.getGremlinGraph'
    package: '@azure/arm-cosmosdb'
    summary: Gets the Gremlin graph under an existing Azure Cosmos DB database account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getGremlinGraph(resourceGroupName: string, accountName: string,
        databaseName: string, graphName: string, options?:
        GremlinResourcesGetGremlinGraphOptionalParams):
        Promise<GremlinGraphGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesGetGremlinGraphOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.GremlinGraphGetResults"
          />&gt;
  - name: >-
      getGremlinGraphThroughput(string, string, string, string,
      GremlinResourcesGetGremlinGraphThroughputOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.getGremlinGraphThroughput'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Gets the Gremlin graph throughput under an existing Azure Cosmos DB
      database account with the

      provided name.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getGremlinGraphThroughput(resourceGroupName: string,
        accountName: string, databaseName: string, graphName: string, options?:
        GremlinResourcesGetGremlinGraphThroughputOptionalParams):
        Promise<ThroughputSettingsGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: graphName
          type: string
          description: Cosmos DB graph name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesGetGremlinGraphThroughputOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.ThroughputSettingsGetResults" />&gt;
  - name: >-
      listGremlinDatabases(string, string,
      GremlinResourcesListGremlinDatabasesOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.listGremlinDatabases'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the Gremlin databases under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listGremlinDatabases(resourceGroupName: string, accountName:
        string, options?: GremlinResourcesListGremlinDatabasesOptionalParams):
        PagedAsyncIterableIterator<GremlinDatabaseGetResults,
        GremlinDatabaseGetResults[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesListGremlinDatabasesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.GremlinDatabaseGetResults" />, <xref
          uid="@azure/arm-cosmosdb.GremlinDatabaseGetResults" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listGremlinGraphs(string, string, string,
      GremlinResourcesListGremlinGraphsOptionalParams)
    uid: '@azure/arm-cosmosdb.GremlinResources.listGremlinGraphs'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the Gremlin graph under an existing Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listGremlinGraphs(resourceGroupName: string, accountName:
        string, databaseName: string, options?:
        GremlinResourcesListGremlinGraphsOptionalParams):
        PagedAsyncIterableIterator<GremlinGraphGetResults,
        GremlinGraphGetResults[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: databaseName
          type: string
          description: Cosmos DB database name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.GremlinResourcesListGremlinGraphsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.GremlinGraphGetResults" />, <xref
          uid="@azure/arm-cosmosdb.GremlinGraphGetResults" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
