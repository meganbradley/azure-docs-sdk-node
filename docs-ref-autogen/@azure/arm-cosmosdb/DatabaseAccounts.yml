### YamlMime:TSType
name: DatabaseAccounts
uid: '@azure/arm-cosmosdb.DatabaseAccounts'
package: '@azure/arm-cosmosdb'
summary: Interface representing a DatabaseAccounts.
fullName: DatabaseAccounts
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, DatabaseAccountCreateUpdateParameters,
      DatabaseAccountsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdate'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Creates or updates an Azure Cosmos DB database account. The "Update"
      method is preferred when

      performing updates on an account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, accountName:
        string, createUpdateParameters: DatabaseAccountCreateUpdateParameters,
        options?: DatabaseAccountsCreateOrUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<DatabaseAccountGetResults>,
        DatabaseAccountGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: createUpdateParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters" />
          description: The parameters to provide for the current database account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.DatabaseAccountGetResults" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string,
      DatabaseAccountCreateUpdateParameters,
      DatabaseAccountsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginCreateOrUpdateAndWait'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Creates or updates an Azure Cosmos DB database account. The "Update"
      method is preferred when

      performing updates on an account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        accountName: string, createUpdateParameters:
        DatabaseAccountCreateUpdateParameters, options?:
        DatabaseAccountsCreateOrUpdateOptionalParams):
        Promise<DatabaseAccountGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: createUpdateParameters
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountCreateUpdateParameters" />
          description: The parameters to provide for the current database account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsCreateOrUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.DatabaseAccountGetResults"
          />&gt;
  - name: beginDelete(string, string, DatabaseAccountsDeleteOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDelete'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB database account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, accountName: string,
        options?: DatabaseAccountsDeleteOptionalParams):
        Promise<SimplePollerLike<OperationState<DatabaseAccountsDeleteHeaders>,
        DatabaseAccountsDeleteHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref uid="@azure/arm-cosmosdb.DatabaseAccountsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountsDeleteHeaders" />&gt;, <xref
          uid="@azure/arm-cosmosdb.DatabaseAccountsDeleteHeaders" />&gt;&gt;
  - name: beginDeleteAndWait(string, string, DatabaseAccountsDeleteOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginDeleteAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Deletes an existing Azure Cosmos DB database account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, accountName:
        string, options?: DatabaseAccountsDeleteOptionalParams):
        Promise<DatabaseAccountsDeleteHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref uid="@azure/arm-cosmosdb.DatabaseAccountsDeleteOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountsDeleteHeaders" />&gt;
  - name: >-
      beginFailoverPriorityChange(string, string, FailoverPolicies,
      DatabaseAccountsFailoverPriorityChangeOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChange'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Changes the failover priority for the Azure Cosmos DB database account. A
      failover priority of 0

      indicates a write region. The maximum value for a failover priority =
      (total number of regions - 1).

      Failover priority values must be unique for each of the regions in which
      the database account

      exists.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginFailoverPriorityChange(resourceGroupName: string,
        accountName: string, failoverParameters: FailoverPolicies, options?:
        DatabaseAccountsFailoverPriorityChangeOptionalParams):
        Promise<SimplePollerLike<OperationState<DatabaseAccountsFailoverPriorityChangeHeaders>,
        DatabaseAccountsFailoverPriorityChangeHeaders>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: failoverParameters
          type: <xref uid="@azure/arm-cosmosdb.FailoverPolicies" />
          description: The new failover policies for the database account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsFailoverPriorityChangeOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountsFailoverPriorityChangeHeaders"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.DatabaseAccountsFailoverPriorityChangeHeaders"
          />&gt;&gt;
  - name: >-
      beginFailoverPriorityChangeAndWait(string, string, FailoverPolicies,
      DatabaseAccountsFailoverPriorityChangeOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginFailoverPriorityChangeAndWait'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Changes the failover priority for the Azure Cosmos DB database account. A
      failover priority of 0

      indicates a write region. The maximum value for a failover priority =
      (total number of regions - 1).

      Failover priority values must be unique for each of the regions in which
      the database account

      exists.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginFailoverPriorityChangeAndWait(resourceGroupName: string,
        accountName: string, failoverParameters: FailoverPolicies, options?:
        DatabaseAccountsFailoverPriorityChangeOptionalParams):
        Promise<DatabaseAccountsFailoverPriorityChangeHeaders>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: failoverParameters
          type: <xref uid="@azure/arm-cosmosdb.FailoverPolicies" />
          description: The new failover policies for the database account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsFailoverPriorityChangeOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountsFailoverPriorityChangeHeaders"
          />&gt;
  - name: >-
      beginOfflineRegion(string, string, RegionForOnlineOffline,
      DatabaseAccountsOfflineRegionOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegion'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Offline the specified region for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginOfflineRegion(resourceGroupName: string, accountName:
        string, regionParameterForOffline: RegionForOnlineOffline, options?:
        DatabaseAccountsOfflineRegionOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: regionParameterForOffline
          type: <xref uid="@azure/arm-cosmosdb.RegionForOnlineOffline" />
          description: Cosmos DB region to offline for the database account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsOfflineRegionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginOfflineRegionAndWait(string, string, RegionForOnlineOffline,
      DatabaseAccountsOfflineRegionOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOfflineRegionAndWait'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Offline the specified region for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginOfflineRegionAndWait(resourceGroupName: string,
        accountName: string, regionParameterForOffline: RegionForOnlineOffline,
        options?: DatabaseAccountsOfflineRegionOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: regionParameterForOffline
          type: <xref uid="@azure/arm-cosmosdb.RegionForOnlineOffline" />
          description: Cosmos DB region to offline for the database account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsOfflineRegionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginOnlineRegion(string, string, RegionForOnlineOffline,
      DatabaseAccountsOnlineRegionOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegion'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Online the specified region for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginOnlineRegion(resourceGroupName: string, accountName:
        string, regionParameterForOnline: RegionForOnlineOffline, options?:
        DatabaseAccountsOnlineRegionOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: regionParameterForOnline
          type: <xref uid="@azure/arm-cosmosdb.RegionForOnlineOffline" />
          description: Cosmos DB region to online for the database account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsOnlineRegionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginOnlineRegionAndWait(string, string, RegionForOnlineOffline,
      DatabaseAccountsOnlineRegionOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginOnlineRegionAndWait'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Online the specified region for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginOnlineRegionAndWait(resourceGroupName: string,
        accountName: string, regionParameterForOnline: RegionForOnlineOffline,
        options?: DatabaseAccountsOnlineRegionOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: regionParameterForOnline
          type: <xref uid="@azure/arm-cosmosdb.RegionForOnlineOffline" />
          description: Cosmos DB region to online for the database account.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsOnlineRegionOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginRegenerateKey(string, string, DatabaseAccountRegenerateKeyParameters,
      DatabaseAccountsRegenerateKeyOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKey'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Regenerates an access key for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRegenerateKey(resourceGroupName: string, accountName:
        string, keyToRegenerate: DatabaseAccountRegenerateKeyParameters,
        options?: DatabaseAccountsRegenerateKeyOptionalParams):
        Promise<SimplePollerLike<OperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyToRegenerate
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters" />
          description: The name of the key to regenerate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsRegenerateKeyOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;void&gt;, void&gt;&gt;
  - name: >-
      beginRegenerateKeyAndWait(string, string,
      DatabaseAccountRegenerateKeyParameters,
      DatabaseAccountsRegenerateKeyOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginRegenerateKeyAndWait'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Regenerates an access key for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginRegenerateKeyAndWait(resourceGroupName: string,
        accountName: string, keyToRegenerate:
        DatabaseAccountRegenerateKeyParameters, options?:
        DatabaseAccountsRegenerateKeyOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: keyToRegenerate
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountRegenerateKeyParameters" />
          description: The name of the key to regenerate.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsRegenerateKeyOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, DatabaseAccountUpdateParameters,
      DatabaseAccountsUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdate'
    package: '@azure/arm-cosmosdb'
    summary: Updates the properties of an existing Azure Cosmos DB database account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, accountName: string,
        updateParameters: DatabaseAccountUpdateParameters, options?:
        DatabaseAccountsUpdateOptionalParams):
        Promise<SimplePollerLike<OperationState<DatabaseAccountGetResults>,
        DatabaseAccountGetResults>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: updateParameters
          type: <xref uid="@azure/arm-cosmosdb.DatabaseAccountUpdateParameters" />
          description: The parameters to provide for the current database account.
        - id: options
          type: >-
            <xref uid="@azure/arm-cosmosdb.DatabaseAccountsUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountGetResults" />&gt;, <xref
          uid="@azure/arm-cosmosdb.DatabaseAccountGetResults" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, DatabaseAccountUpdateParameters,
      DatabaseAccountsUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.beginUpdateAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Updates the properties of an existing Azure Cosmos DB database account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, accountName:
        string, updateParameters: DatabaseAccountUpdateParameters, options?:
        DatabaseAccountsUpdateOptionalParams):
        Promise<DatabaseAccountGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: updateParameters
          type: <xref uid="@azure/arm-cosmosdb.DatabaseAccountUpdateParameters" />
          description: The parameters to provide for the current database account.
        - id: options
          type: >-
            <xref uid="@azure/arm-cosmosdb.DatabaseAccountsUpdateOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.DatabaseAccountGetResults"
          />&gt;
  - name: checkNameExists(string, DatabaseAccountsCheckNameExistsOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.checkNameExists'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Checks that the Azure Cosmos DB account name already exists. A valid
      account name may contain only

      lowercase letters, numbers, and the '-' character, and must be between 3
      and 50 characters.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function checkNameExists(accountName: string, options?:
        DatabaseAccountsCheckNameExistsOptionalParams):
        Promise<DatabaseAccountsCheckNameExistsResponse>
      parameters:
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsCheckNameExistsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountsCheckNameExistsResponse"
          />&gt;
  - name: get(string, string, DatabaseAccountsGetOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.get'
    package: '@azure/arm-cosmosdb'
    summary: Retrieves the properties of an existing Azure Cosmos DB database account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string, options?:
        DatabaseAccountsGetOptionalParams): Promise<DatabaseAccountGetResults>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: <xref uid="@azure/arm-cosmosdb.DatabaseAccountsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-cosmosdb.DatabaseAccountGetResults"
          />&gt;
  - name: >-
      getReadOnlyKeys(string, string,
      DatabaseAccountsGetReadOnlyKeysOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.getReadOnlyKeys'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the read-only access keys for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getReadOnlyKeys(resourceGroupName: string, accountName: string,
        options?: DatabaseAccountsGetReadOnlyKeysOptionalParams):
        Promise<DatabaseAccountListReadOnlyKeysResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsGetReadOnlyKeysOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult" />&gt;
  - name: list(DatabaseAccountsListOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.list'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists all the Azure Cosmos DB database accounts available under the
      subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: DatabaseAccountsListOptionalParams):
        PagedAsyncIterableIterator<DatabaseAccountGetResults,
        DatabaseAccountGetResults[], PageSettings>
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/arm-cosmosdb.DatabaseAccountsListOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountGetResults" />, <xref
          uid="@azure/arm-cosmosdb.DatabaseAccountGetResults" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listByResourceGroup(string,
      DatabaseAccountsListByResourceGroupOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listByResourceGroup'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists all the Azure Cosmos DB database accounts available under the given
      resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        DatabaseAccountsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<DatabaseAccountGetResults,
        DatabaseAccountGetResults[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsListByResourceGroupOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountGetResults" />, <xref
          uid="@azure/arm-cosmosdb.DatabaseAccountGetResults" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listConnectionStrings(string, string,
      DatabaseAccountsListConnectionStringsOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listConnectionStrings'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the connection strings for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listConnectionStrings(resourceGroupName: string, accountName:
        string, options?: DatabaseAccountsListConnectionStringsOptionalParams):
        Promise<DatabaseAccountListConnectionStringsResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsListConnectionStringsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountListConnectionStringsResult"
          />&gt;
  - name: listKeys(string, string, DatabaseAccountsListKeysOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listKeys'
    package: '@azure/arm-cosmosdb'
    summary: Lists the access keys for the specified Azure Cosmos DB database account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options?: DatabaseAccountsListKeysOptionalParams):
        Promise<DatabaseAccountListKeysResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsListKeysOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountListKeysResult" />&gt;
  - name: >-
      listMetricDefinitions(string, string,
      DatabaseAccountsListMetricDefinitionsOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetricDefinitions'
    package: '@azure/arm-cosmosdb'
    summary: Retrieves metric definitions for the given database account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, accountName:
        string, options?: DatabaseAccountsListMetricDefinitionsOptionalParams):
        PagedAsyncIterableIterator<MetricDefinition, MetricDefinition[],
        PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsListMetricDefinitionsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.MetricDefinition" />, <xref
          uid="@azure/arm-cosmosdb.MetricDefinition" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listMetrics(string, string, string,
      DatabaseAccountsListMetricsOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listMetrics'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Retrieves the metrics determined by the given filter for the given
      database account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, accountName: string,
        filter: string, options?: DatabaseAccountsListMetricsOptionalParams):
        PagedAsyncIterableIterator<Metric, Metric[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: filter
          type: string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return. The
                          parameters that can be filtered are name.value (name of the metric, can have an or of multiple
                          names), startTime, endTime, and timeGrain. The supported operator is eq.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsListMetricsOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.Metric" />, <xref
          uid="@azure/arm-cosmosdb.Metric" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: >-
      listReadOnlyKeys(string, string,
      DatabaseAccountsListReadOnlyKeysOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listReadOnlyKeys'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Lists the read-only access keys for the specified Azure Cosmos DB database
      account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listReadOnlyKeys(resourceGroupName: string, accountName:
        string, options?: DatabaseAccountsListReadOnlyKeysOptionalParams):
        Promise<DatabaseAccountListReadOnlyKeysResult>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsListReadOnlyKeysOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.DatabaseAccountListReadOnlyKeysResult" />&gt;
  - name: listUsages(string, string, DatabaseAccountsListUsagesOptionalParams)
    uid: '@azure/arm-cosmosdb.DatabaseAccounts.listUsages'
    package: '@azure/arm-cosmosdb'
    summary: Retrieves the usages (most recent data) for the given database account.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listUsages(resourceGroupName: string, accountName: string,
        options?: DatabaseAccountsListUsagesOptionalParams):
        PagedAsyncIterableIterator<Usage, Usage[], PageSettings>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: accountName
          type: string
          description: Cosmos DB database account name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.DatabaseAccountsListUsagesOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-cosmosdb.Usage" />, <xref
          uid="@azure/arm-cosmosdb.Usage" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
