### YamlMime:TSType
name: LargePersonGroupOperations
uid: '@azure/cognitiveservices-face.LargePersonGroupOperations'
package: '@azure/cognitiveservices-face'
summary: Class representing a LargePersonGroupOperations.
fullName: LargePersonGroupOperations
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: LargePersonGroupOperations(FaceClientContext)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.constructor'
    package: '@azure/cognitiveservices-face'
    summary: Create a LargePersonGroupOperations.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new LargePersonGroupOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/cognitiveservices-face.FaceClientContext" />
          description: Reference to the service client.
methods:
  - name: create(string, string, LargePersonGroupCreateOptionalParams)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.create'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Create a new large person group with user-specified largePersonGroupId,
      name, an optional

      userData and recognitionModel.

      <br /> A large person group is the container of the uploaded person data,
      including face

      recognition feature, and up to 1,000,000

      people.

      <br /> After creation, use [LargePersonGroup Person -

      Create](https://docs.microsoft.com/rest/api/faceapi/largepersongroupperson/create)
      to add person

      into the group, and call [LargePersonGroup -

      Train](https://docs.microsoft.com/rest/api/faceapi/largepersongroup/train)
      to get this group

      ready for [Face -
      Identify](https://docs.microsoft.com/rest/api/faceapi/face/identify).

      <br /> No image will be stored. Only the person's extracted face features
      and userData will be

      stored on server until [LargePersonGroup Person -

      Delete](https://docs.microsoft.com/rest/api/faceapi/largepersongroupperson/delete)
      or

      [LargePersonGroup -
      Delete](https://docs.microsoft.com/rest/api/faceapi/largepersongroup/delete)

      is called.

      <br/>'recognitionModel' should be specified to associate with this large
      person group. The

      default value for 'recognitionModel' is 'recognition_01', if the latest
      model needed, please

      explicitly specify the model you need in this parameter. New faces that
      are added to an existing

      large person group will use the recognition model that's already
      associated with the collection.

      Existing face features in a large person group can't be updated to
      features extracted by another

      version of recognition model. Please refer to [Specify a face recognition

      model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model).


      Large person group quota:

      * Free-tier subscription quota: 1,000 large person groups.

      * S0-tier subscription quota: 1,000,000 large person groups.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(largePersonGroupId: string, name: string, options?:
        LargePersonGroupCreateOptionalParams): Promise<RestResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: name
          type: string
          description: User defined name, maximum length is 128.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupCreateOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: >-
      create(string, string, LargePersonGroupCreateOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.create_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(largePersonGroupId: string, name: string, options:
        LargePersonGroupCreateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: name
          type: string
          description: User defined name, maximum length is 128.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupCreateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: create(string, string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.create_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(largePersonGroupId: string, name: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: name
          type: string
          description: User defined name, maximum length is 128.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteMethod(string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Delete an existing large person group. Persisted face features of all
      people in the large person

      group will also be deleted.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, options?:
        RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteMethod(string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.deleteMethod_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: get(string, LargePersonGroupGetOptionalParams)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.get'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Retrieve the information of a large person group, including its name,
      userData and

      recognitionModel. This API returns large person group information only,
      use [LargePersonGroup

      Person -
      List](https://docs.microsoft.com/rest/api/faceapi/largepersongroupperson/list)
      instead

      to retrieve person information under the large person group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(largePersonGroupId: string, options?:
        LargePersonGroupGetOptionalParams): Promise<LargePersonGroupGetResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupGetOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.LargePersonGroupGetResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupGetResponse"
          />&gt;
  - name: >-
      get(string, LargePersonGroupGetOptionalParams,
      ServiceCallback<LargePersonGroup>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.get_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(largePersonGroupId: string, options:
        LargePersonGroupGetOptionalParams, callback:
        ServiceCallback<LargePersonGroup>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupGetOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroup"
            />&gt;
          description: The callback
  - name: get(string, ServiceCallback<LargePersonGroup>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.get_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(largePersonGroupId: string, callback:
        ServiceCallback<LargePersonGroup>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroup"
            />&gt;
          description: The callback
  - name: getTrainingStatus(string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Retrieve the training status of a large person group (completed or
      ongoing).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getTrainingStatus(largePersonGroupId: string, options?:
        RequestOptionsBase): Promise<LargePersonGroupGetTrainingStatusResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.LargePersonGroupGetTrainingStatusResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupGetTrainingStatusResponse"
          />&gt;
  - name: >-
      getTrainingStatus(string, RequestOptionsBase,
      ServiceCallback<TrainingStatus>)
    uid: >-
      @azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus_2
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getTrainingStatus(largePersonGroupId: string, options:
        RequestOptionsBase, callback: ServiceCallback<TrainingStatus>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.TrainingStatus" />&gt;
          description: The callback
  - name: getTrainingStatus(string, ServiceCallback<TrainingStatus>)
    uid: >-
      @azure/cognitiveservices-face.LargePersonGroupOperations.getTrainingStatus_1
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getTrainingStatus(largePersonGroupId: string, callback:
        ServiceCallback<TrainingStatus>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.TrainingStatus" />&gt;
          description: The callback
  - name: list(LargePersonGroupListOptionalParams)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.list'
    package: '@azure/cognitiveservices-face'
    summary: >-
      List all existing large person groups’ largePersonGroupId, name, userData
      and

      recognitionModel.<br />

      * Large person groups are stored in alphabetical order of
      largePersonGroupId.

      * "start" parameter (string, optional) is a user-provided
      largePersonGroupId value that returned

      entries have larger ids by string comparison. "start" set to empty to
      indicate return from the

      first item.

      * "top" parameter (int, optional) specifies the number of entries to
      return. A maximal of 1000

      entries can be returned in one call. To fetch more, you can specify
      "start" with the last

      returned entry’s Id of the current call.

      <br />

      For example, total 5 large person groups: "group1", ..., "group5".

      <br /> "start=&top=" will return all 5 groups.

      <br /> "start=&top=2" will return "group1", "group2".

      <br /> "start=group2&top=3" will return "group3", "group4", "group5".
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: LargePersonGroupListOptionalParams):
        Promise<LargePersonGroupListResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupListOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.LargePersonGroupListResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupListResponse"
          />&gt;
  - name: >-
      list(LargePersonGroupListOptionalParams,
      ServiceCallback<LargePersonGroup[]>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.list_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options: LargePersonGroupListOptionalParams, callback:
        ServiceCallback<LargePersonGroup[]>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupListOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroup"
            />[]&gt;
          description: The callback
  - name: list(ServiceCallback<LargePersonGroup[]>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.list_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<LargePersonGroup[]>)'
      parameters:
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroup"
            />[]&gt;
          description: The callback
  - name: train(string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.train'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Queue a large person group training task, the training task may not be
      started immediately.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function train(largePersonGroupId: string, options?:
        RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: train(string, RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.train_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function train(largePersonGroupId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: train(string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.train_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function train(largePersonGroupId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: update(string, LargePersonGroupUpdateOptionalParams)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.update'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Update an existing large person group's display name and userData. The
      properties which does not

      appear in request body will not be updated.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(largePersonGroupId: string, options?:
        LargePersonGroupUpdateOptionalParams): Promise<RestResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupUpdateOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: >-
      update(string, LargePersonGroupUpdateOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.update_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(largePersonGroupId: string, options:
        LargePersonGroupUpdateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: update(string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupOperations.update_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(largePersonGroupId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
