### YamlMime:TSType
name: LargePersonGroupPerson
uid: '@azure/cognitiveservices-face.LargePersonGroupPerson'
package: '@azure/cognitiveservices-face'
summary: Class representing a LargePersonGroupPerson.
fullName: LargePersonGroupPerson
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: LargePersonGroupPerson(FaceClientContext)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.constructor'
    package: '@azure/cognitiveservices-face'
    summary: Create a LargePersonGroupPerson.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new LargePersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/cognitiveservices-face.FaceClientContext" />
          description: Reference to the service client.
methods:
  - name: >-
      addFaceFromStream(string, string, HttpRequestBody,
      LargePersonGroupPersonAddFaceFromStreamOptionalParams)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Add a face to a person into a large person group for face identification
      or verification. To

      deal with an image contains multiple faces, input face can be specified as
      an image with a

      targetFace rectangle. It returns a persistedFaceId representing the added
      face. No image will be

      stored. Only the extracted face feature will be stored on server until
      [LargePersonGroup

      PersonFace -

      Delete](https://docs.microsoft.com/rest/api/faceapi/largepersongroupperson/deleteface),

      [LargePersonGroup Person -

      Delete](https://docs.microsoft.com/rest/api/faceapi/largepersongroupperson/delete)
      or

      [LargePersonGroup -
      Delete](https://docs.microsoft.com/rest/api/faceapi/largepersongroup/delete)

      is called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl).

      * Higher face image quality means better recognition precision. Please
      consider high-quality

      faces: frontal, clear, and face size is 200x200 pixels (100 pixels between
      eyes) or bigger.

      * Each person entry can hold up to 248 faces.

      * JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size is

      from 1KB to 6MB.

      * "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as an

      error. If the provided "targetFace" rectangle is not returned from [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl),
      there’s no guarantee to

      detect and add the face successfully.

      * Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose,
      or large occlusions

      will cause failures.

      * Adding/deleting faces to/from a same person will be processed
      sequentially. Adding/deleting

      faces to/from different persons are processed in parallel.

      * The minimum detectable face size is 36x36 pixels in an image no larger
      than 1920x1080 pixels.

      Images with dimensions higher than 1920x1080 pixels will need a
      proportionally larger minimum

      face size.

      * Different 'detectionModel' values can be provided. To use and compare
      different detection

      models, please refer to [How to specify a detection

      model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromStream(largePersonGroupId: string, personId: string,
        image: HttpRequestBody, options?:
        LargePersonGroupPersonAddFaceFromStreamOptionalParams):
        Promise<LargePersonGroupPersonAddFaceFromStreamResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: image
          type: <xref uid="@azure/ms-rest-js.HttpRequestBody" />
          description: An image stream.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonAddFaceFromStreamOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.LargePersonGroupPersonAddFaceFromStreamResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonAddFaceFromStreamResponse"
          />&gt;
  - name: >-
      addFaceFromStream(string, string, HttpRequestBody,
      LargePersonGroupPersonAddFaceFromStreamOptionalParams,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromStream(largePersonGroupId: string, personId: string,
        image: HttpRequestBody, options:
        LargePersonGroupPersonAddFaceFromStreamOptionalParams, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: image
          type: <xref uid="@azure/ms-rest-js.HttpRequestBody" />
          description: An image stream.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonAddFaceFromStreamOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace" />&gt;
          description: The callback
  - name: >-
      addFaceFromStream(string, string, HttpRequestBody,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromStream(largePersonGroupId: string, personId: string,
        image: HttpRequestBody, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: image
          type: <xref uid="@azure/ms-rest-js.HttpRequestBody" />
          description: An image stream.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace" />&gt;
          description: The callback
  - name: >-
      addFaceFromUrl(string, string, string,
      LargePersonGroupPersonAddFaceFromUrlOptionalParams)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Add a face to a person into a large person group for face identification
      or verification. To

      deal with an image contains multiple faces, input face can be specified as
      an image with a

      targetFace rectangle. It returns a persistedFaceId representing the added
      face. No image will be

      stored. Only the extracted face feature will be stored on server until
      [LargePersonGroup

      PersonFace -

      Delete](https://docs.microsoft.com/rest/api/faceapi/largepersongroupperson/deleteface),

      [LargePersonGroup Person -

      Delete](https://docs.microsoft.com/rest/api/faceapi/largepersongroupperson/delete)
      or

      [LargePersonGroup -
      Delete](https://docs.microsoft.com/rest/api/faceapi/largepersongroup/delete)

      is called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl).

      * Higher face image quality means better recognition precision. Please
      consider high-quality

      faces: frontal, clear, and face size is 200x200 pixels (100 pixels between
      eyes) or bigger.

      * Each person entry can hold up to 248 faces.

      * JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size is

      from 1KB to 6MB.

      * "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as an

      error. If the provided "targetFace" rectangle is not returned from [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl),
      there’s no guarantee to

      detect and add the face successfully.

      * Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose,
      or large occlusions

      will cause failures.

      * Adding/deleting faces to/from a same person will be processed
      sequentially. Adding/deleting

      faces to/from different persons are processed in parallel.

      * The minimum detectable face size is 36x36 pixels in an image no larger
      than 1920x1080 pixels.

      Images with dimensions higher than 1920x1080 pixels will need a
      proportionally larger minimum

      face size.

      * Different 'detectionModel' values can be provided. To use and compare
      different detection

      models, please refer to [How to specify a detection

      model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromUrl(largePersonGroupId: string, personId: string,
        url: string, options?:
        LargePersonGroupPersonAddFaceFromUrlOptionalParams):
        Promise<LargePersonGroupPersonAddFaceFromUrlResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: url
          type: string
          description: Publicly reachable URL of an image
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonAddFaceFromUrlOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.LargePersonGroupPersonAddFaceFromUrlResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonAddFaceFromUrlResponse"
          />&gt;
  - name: >-
      addFaceFromUrl(string, string, string,
      LargePersonGroupPersonAddFaceFromUrlOptionalParams,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromUrl(largePersonGroupId: string, personId: string,
        url: string, options:
        LargePersonGroupPersonAddFaceFromUrlOptionalParams, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: url
          type: string
          description: Publicly reachable URL of an image
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonAddFaceFromUrlOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace" />&gt;
          description: The callback
  - name: addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromUrl(largePersonGroupId: string, personId: string,
        url: string, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: url
          type: string
          description: Publicly reachable URL of an image
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace" />&gt;
          description: The callback
  - name: create(string, LargePersonGroupPersonCreateOptionalParams)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create'
    package: '@azure/cognitiveservices-face'
    summary: Create a new person in a specified large person group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(largePersonGroupId: string, options?:
        LargePersonGroupPersonCreateOptionalParams):
        Promise<LargePersonGroupPersonCreateResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonCreateOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.LargePersonGroupPersonCreateResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonCreateResponse"
          />&gt;
  - name: >-
      create(string, LargePersonGroupPersonCreateOptionalParams,
      ServiceCallback<Person>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(largePersonGroupId: string, options:
        LargePersonGroupPersonCreateOptionalParams, callback:
        ServiceCallback<Person>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonCreateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.Person" />&gt;
          description: The callback
  - name: create(string, ServiceCallback<Person>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.create_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(largePersonGroupId: string, callback:
        ServiceCallback<Person>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.Person" />&gt;
          description: The callback
  - name: deleteFace(string, string, string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Delete a face from a person in a large person group by specified
      largePersonGroupId, personId

      and persistedFaceId.

      <br /> Adding/deleting faces to/from a same person will be processed
      sequentially.

      Adding/deleting faces to/from different persons are processed in parallel.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options?: RequestOptionsBase):
        Promise<RestResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: >-
      deleteFace(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteFace(string, string, string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteFace_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteMethod(string, string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Delete an existing person from a large person group. The persistedFaceId,
      userData, person name

      and face feature in the person entry will all be deleted.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, personId: string,
        options?: RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, personId: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteMethod(string, string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(largePersonGroupId: string, personId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: get(string, string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Retrieve a person's name and userData, and the persisted faceIds
      representing the registered

      person face feature.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(largePersonGroupId: string, personId: string, options?:
        RequestOptionsBase): Promise<LargePersonGroupPersonGetResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.LargePersonGroupPersonGetResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonGetResponse"
          />&gt;
  - name: get(string, string, RequestOptionsBase, ServiceCallback<Person>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(largePersonGroupId: string, personId: string, options:
        RequestOptionsBase, callback: ServiceCallback<Person>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.Person" />&gt;
          description: The callback
  - name: get(string, string, ServiceCallback<Person>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.get_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(largePersonGroupId: string, personId: string, callback:
        ServiceCallback<Person>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.Person" />&gt;
          description: The callback
  - name: getFace(string, string, string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Retrieve information about a persisted face (specified by persistedFaceId,
      personId and its

      belonging largePersonGroupId).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options?: RequestOptionsBase):
        Promise<LargePersonGroupPersonGetFaceResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.LargePersonGroupPersonGetFaceResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonGetFaceResponse"
          />&gt;
  - name: >-
      getFace(string, string, string, RequestOptionsBase,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options: RequestOptionsBase, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace" />&gt;
          description: The callback
  - name: getFace(string, string, string, ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.getFace_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace" />&gt;
          description: The callback
  - name: list(string, LargePersonGroupPersonListOptionalParams)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list'
    package: '@azure/cognitiveservices-face'
    summary: >-
      List all persons in a large person group, and retrieve person information
      (including personId,

      name, userData and persistedFaceIds of registered faces of the person).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(largePersonGroupId: string, options?:
        LargePersonGroupPersonListOptionalParams):
        Promise<LargePersonGroupPersonListResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonListOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.LargePersonGroupPersonListResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonListResponse"
          />&gt;
  - name: >-
      list(string, LargePersonGroupPersonListOptionalParams,
      ServiceCallback<Person[]>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(largePersonGroupId: string, options:
        LargePersonGroupPersonListOptionalParams, callback:
        ServiceCallback<Person[]>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonListOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.Person" />[]&gt;
          description: The callback
  - name: list(string, ServiceCallback<Person[]>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.list_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(largePersonGroupId: string, callback:
        ServiceCallback<Person[]>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.Person" />[]&gt;
          description: The callback
  - name: update(string, string, LargePersonGroupPersonUpdateOptionalParams)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update'
    package: '@azure/cognitiveservices-face'
    summary: Update name or userData of a person.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(largePersonGroupId: string, personId: string, options?:
        LargePersonGroupPersonUpdateOptionalParams): Promise<RestResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonUpdateOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: >-
      update(string, string, LargePersonGroupPersonUpdateOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(largePersonGroupId: string, personId: string, options:
        LargePersonGroupPersonUpdateOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: update(string, string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.update_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(largePersonGroupId: string, personId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: >-
      updateFace(string, string, string,
      LargePersonGroupPersonUpdateFaceOptionalParams)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace'
    package: '@azure/cognitiveservices-face'
    summary: Update a person persisted face's userData field.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options?:
        LargePersonGroupPersonUpdateFaceOptionalParams): Promise<RestResponse>
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonUpdateFaceOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: >-
      updateFace(string, string, string,
      LargePersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, options:
        LargePersonGroupPersonUpdateFaceOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargePersonGroupPersonUpdateFaceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: updateFace(string, string, string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargePersonGroupPerson.updateFace_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateFace(largePersonGroupId: string, personId: string,
        persistedFaceId: string, callback: ServiceCallback<void>)
      parameters:
        - id: largePersonGroupId
          type: string
          description: Id referencing a particular large person group.
        - id: personId
          type: string
          description: Id referencing a particular person.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
