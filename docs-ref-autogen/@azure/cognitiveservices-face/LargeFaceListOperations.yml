### YamlMime:TSType
name: LargeFaceListOperations
uid: '@azure/cognitiveservices-face.LargeFaceListOperations'
package: '@azure/cognitiveservices-face'
summary: Class representing a LargeFaceListOperations.
fullName: LargeFaceListOperations
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: LargeFaceListOperations(FaceClientContext)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.constructor'
    package: '@azure/cognitiveservices-face'
    summary: Create a LargeFaceListOperations.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new LargeFaceListOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/cognitiveservices-face.FaceClientContext" />
          description: Reference to the service client.
methods:
  - name: >-
      addFaceFromStream(string, HttpRequestBody,
      LargeFaceListAddFaceFromStreamOptionalParams)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Add a face to a specified large face list, up to 1,000,000 faces.

      <br /> To deal with an image contains multiple faces, input face can be
      specified as an image

      with a targetFace rectangle. It returns a persistedFaceId representing the
      added face. No image

      will be stored. Only the extracted face feature will be stored on server
      until [LargeFaceList

      Face -
      Delete](https://docs.microsoft.com/rest/api/faceapi/largefacelist/deleteface)
      or

      [LargeFaceList -
      Delete](https://docs.microsoft.com/rest/api/faceapi/largefacelist/delete)
      is

      called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl).

      * Higher face image quality means better recognition precision. Please
      consider high-quality

      faces: frontal, clear, and face size is 200x200 pixels (100 pixels between
      eyes) or bigger.

      * JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size is

      from 1KB to 6MB.

      * "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as an

      error. If the provided "targetFace" rectangle is not returned from [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl),
      there’s no guarantee to

      detect and add the face successfully.

      * Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose,
      or large occlusions

      will cause failures.

      * Adding/deleting faces to/from a same face list are processed
      sequentially and to/from

      different face lists are in parallel.

      * The minimum detectable face size is 36x36 pixels in an image no larger
      than 1920x1080 pixels.

      Images with dimensions higher than 1920x1080 pixels will need a
      proportionally larger minimum

      face size.

      * Different 'detectionModel' values can be provided. To use and compare
      different detection

      models, please refer to [How to specify a detection

      model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model).


      Quota:

      * Free-tier subscription quota: 1,000 faces per large face list.

      * S0-tier subscription quota: 1,000,000 faces per large face list.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromStream(largeFaceListId: string, image:
        HttpRequestBody, options?:
        LargeFaceListAddFaceFromStreamOptionalParams):
        Promise<LargeFaceListAddFaceFromStreamResponse>
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: image
          type: <xref uid="@azure/ms-rest-js.HttpRequestBody" />
          description: An image stream.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListAddFaceFromStreamOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.LargeFaceListAddFaceFromStreamResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListAddFaceFromStreamResponse"
          />&gt;
  - name: >-
      addFaceFromStream(string, HttpRequestBody,
      LargeFaceListAddFaceFromStreamOptionalParams,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromStream(largeFaceListId: string, image:
        HttpRequestBody, options: LargeFaceListAddFaceFromStreamOptionalParams,
        callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: image
          type: <xref uid="@azure/ms-rest-js.HttpRequestBody" />
          description: An image stream.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListAddFaceFromStreamOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace" />&gt;
          description: The callback
  - name: addFaceFromStream(string, HttpRequestBody, ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromStream(largeFaceListId: string, image:
        HttpRequestBody, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: image
          type: <xref uid="@azure/ms-rest-js.HttpRequestBody" />
          description: An image stream.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace" />&gt;
          description: The callback
  - name: addFaceFromUrl(string, string, LargeFaceListAddFaceFromUrlOptionalParams)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Add a face to a specified large face list, up to 1,000,000 faces.

      <br /> To deal with an image contains multiple faces, input face can be
      specified as an image

      with a targetFace rectangle. It returns a persistedFaceId representing the
      added face. No image

      will be stored. Only the extracted face feature will be stored on server
      until [LargeFaceList

      Face -
      Delete](https://docs.microsoft.com/rest/api/faceapi/largefacelist/deleteface)
      or

      [LargeFaceList -
      Delete](https://docs.microsoft.com/rest/api/faceapi/largefacelist/delete)
      is

      called.

      <br /> Note persistedFaceId is different from faceId generated by [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl).

      * Higher face image quality means better recognition precision. Please
      consider high-quality

      faces: frontal, clear, and face size is 200x200 pixels (100 pixels between
      eyes) or bigger.

      * JPEG, PNG, GIF (the first frame), and BMP format are supported. The
      allowed image file size is

      from 1KB to 6MB.

      * "targetFace" rectangle should contain one face. Zero or multiple faces
      will be regarded as an

      error. If the provided "targetFace" rectangle is not returned from [Face -

      Detect](https://docs.microsoft.com/rest/api/faceapi/face/detectwithurl),
      there’s no guarantee to

      detect and add the face successfully.

      * Out of detectable face size (36x36 - 4096x4096 pixels), large head-pose,
      or large occlusions

      will cause failures.

      * Adding/deleting faces to/from a same face list are processed
      sequentially and to/from

      different face lists are in parallel.

      * The minimum detectable face size is 36x36 pixels in an image no larger
      than 1920x1080 pixels.

      Images with dimensions higher than 1920x1080 pixels will need a
      proportionally larger minimum

      face size.

      * Different 'detectionModel' values can be provided. To use and compare
      different detection

      models, please refer to [How to specify a detection

      model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)


      Quota:

      * Free-tier subscription quota: 1,000 faces per large face list.

      * S0-tier subscription quota: 1,000,000 faces per large face list.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromUrl(largeFaceListId: string, url: string, options?:
        LargeFaceListAddFaceFromUrlOptionalParams):
        Promise<LargeFaceListAddFaceFromUrlResponse>
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: url
          type: string
          description: Publicly reachable URL of an image
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListAddFaceFromUrlOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.LargeFaceListAddFaceFromUrlResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListAddFaceFromUrlResponse"
          />&gt;
  - name: >-
      addFaceFromUrl(string, string, LargeFaceListAddFaceFromUrlOptionalParams,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromUrl(largeFaceListId: string, url: string, options:
        LargeFaceListAddFaceFromUrlOptionalParams, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: url
          type: string
          description: Publicly reachable URL of an image
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListAddFaceFromUrlOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace" />&gt;
          description: The callback
  - name: addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function addFaceFromUrl(largeFaceListId: string, url: string, callback:
        ServiceCallback<PersistedFace>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: url
          type: string
          description: Publicly reachable URL of an image
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace" />&gt;
          description: The callback
  - name: create(string, string, LargeFaceListCreateOptionalParams)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.create'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Create an empty large face list with user-specified largeFaceListId, name,
      an optional userData

      and recognitionModel.

      <br /> Large face list is a list of faces, up to 1,000,000 faces, and used
      by [Face - Find

      Similar](https://docs.microsoft.com/rest/api/faceapi/face/findsimilar).

      <br /> After creation, user should use [LargeFaceList Face -

      Add](https://docs.microsoft.com/rest/api/faceapi/largefacelist/addfacefromurl)
      to import the

      faces and [LargeFaceList -

      Train](https://docs.microsoft.com/rest/api/faceapi/largefacelist/train) to
      make it ready for

      [Face - Find
      Similar](https://docs.microsoft.com/rest/api/faceapi/face/findsimilar). No
      image

      will be stored. Only the extracted face features are stored on server
      until [LargeFaceList -

      Delete](https://docs.microsoft.com/rest/api/faceapi/largefacelist/delete)
      is called.

      <br /> Find Similar is used for scenario like finding celebrity-like
      faces, similar face

      filtering, or as a light way face identification. But if the actual use is
      to identify person,

      please use
      [PersonGroup](https://docs.microsoft.com/rest/api/faceapi/persongroup) /

      [LargePersonGroup](https://docs.microsoft.com/rest/api/faceapi/largepersongroup)
      and [Face -

      Identify](https://docs.microsoft.com/rest/api/faceapi/face/identify).

      <br/>'recognitionModel' should be specified to associate with this large
      face list. The default

      value for 'recognitionModel' is 'recognition_01', if the latest model
      needed, please explicitly

      specify the model you need in this parameter. New faces that are added to
      an existing large face

      list will use the recognition model that's already associated with the
      collection. Existing face

      features in a large face list can't be updated to features extracted by
      another version of

      recognition model. Please refer to [Specify a recognition

      model](https://docs.microsoft.com/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model).


      Large face list quota:

      * Free-tier subscription quota: 64 large face lists.

      * S0-tier subscription quota: 1,000,000 large face lists.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(largeFaceListId: string, name: string, options?:
        LargeFaceListCreateOptionalParams): Promise<RestResponse>
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: name
          type: string
          description: User defined name, maximum length is 128.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListCreateOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: >-
      create(string, string, LargeFaceListCreateOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.create_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(largeFaceListId: string, name: string, options:
        LargeFaceListCreateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: name
          type: string
          description: User defined name, maximum length is 128.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListCreateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: create(string, string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.create_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(largeFaceListId: string, name: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: name
          type: string
          description: User defined name, maximum length is 128.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteFace(string, string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Delete a face from a large face list by specified largeFaceListId and
      persistedFaceId.

      <br /> Adding/deleting faces to/from a same large face list are processed
      sequentially and

      to/from different large face lists are in parallel.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteFace(largeFaceListId: string, persistedFaceId: string,
        options?: RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: deleteFace(string, string, RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteFace(largeFaceListId: string, persistedFaceId: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteFace(string, string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteFace_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteFace(largeFaceListId: string, persistedFaceId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteMethod(string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod'
    package: '@azure/cognitiveservices-face'
    summary: Delete a specified large face list.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(largeFaceListId: string, options?:
        RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(largeFaceListId: string, options:
        RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteMethod(string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.deleteMethod_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(largeFaceListId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: get(string, LargeFaceListGetOptionalParams)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.get'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Retrieve a large face list’s largeFaceListId, name, userData and
      recognitionModel.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(largeFaceListId: string, options?:
        LargeFaceListGetOptionalParams): Promise<LargeFaceListGetResponse>
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListGetOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.LargeFaceListGetResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListGetResponse"
          />&gt;
  - name: >-
      get(string, LargeFaceListGetOptionalParams,
      ServiceCallback<LargeFaceList>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.get_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(largeFaceListId: string, options:
        LargeFaceListGetOptionalParams, callback:
        ServiceCallback<LargeFaceList>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListGetOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceList" />&gt;
          description: The callback
  - name: get(string, ServiceCallback<LargeFaceList>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.get_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(largeFaceListId: string, callback:
        ServiceCallback<LargeFaceList>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceList" />&gt;
          description: The callback
  - name: getFace(string, string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getFace'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Retrieve information about a persisted face (specified by persistedFaceId
      and its belonging

      largeFaceListId).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getFace(largeFaceListId: string, persistedFaceId: string,
        options?: RequestOptionsBase): Promise<LargeFaceListGetFaceResponse>
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.LargeFaceListGetFaceResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListGetFaceResponse"
          />&gt;
  - name: >-
      getFace(string, string, RequestOptionsBase,
      ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getFace(largeFaceListId: string, persistedFaceId: string,
        options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace" />&gt;
          description: The callback
  - name: getFace(string, string, ServiceCallback<PersistedFace>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getFace_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getFace(largeFaceListId: string, persistedFaceId: string,
        callback: ServiceCallback<PersistedFace>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace" />&gt;
          description: The callback
  - name: getTrainingStatus(string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus'
    package: '@azure/cognitiveservices-face'
    summary: Retrieve the training status of a large face list (completed or ongoing).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getTrainingStatus(largeFaceListId: string, options?:
        RequestOptionsBase): Promise<LargeFaceListGetTrainingStatusResponse>
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.LargeFaceListGetTrainingStatusResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListGetTrainingStatusResponse"
          />&gt;
  - name: >-
      getTrainingStatus(string, RequestOptionsBase,
      ServiceCallback<TrainingStatus>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getTrainingStatus(largeFaceListId: string, options:
        RequestOptionsBase, callback: ServiceCallback<TrainingStatus>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.TrainingStatus" />&gt;
          description: The callback
  - name: getTrainingStatus(string, ServiceCallback<TrainingStatus>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getTrainingStatus(largeFaceListId: string, callback:
        ServiceCallback<TrainingStatus>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.TrainingStatus" />&gt;
          description: The callback
  - name: list(LargeFaceListListOptionalParams)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.list'
    package: '@azure/cognitiveservices-face'
    summary: >-
      List large face lists’ information of largeFaceListId, name, userData and
      recognitionModel. <br

      />

      To get face information inside largeFaceList use [LargeFaceList Face -

      Get](https://docs.microsoft.com/rest/api/faceapi/largefacelist/getface)<br
      />

      * Large face lists are stored in alphabetical order of largeFaceListId.

      * "start" parameter (string, optional) is a user-provided largeFaceListId
      value that returned

      entries have larger ids by string comparison. "start" set to empty to
      indicate return from the

      first item.

      * "top" parameter (int, optional) specifies the number of entries to
      return. A maximal of 1000

      entries can be returned in one call. To fetch more, you can specify
      "start" with the last

      returned entry’s Id of the current call.

      <br />

      For example, total 5 large person lists: "list1", ..., "list5".

      <br /> "start=&top=" will return all 5 lists.

      <br /> "start=&top=2" will return "list1", "list2".

      <br /> "start=list2&top=3" will return "list3", "list4", "list5".
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: LargeFaceListListOptionalParams):
        Promise<LargeFaceListListResponse>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListListOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.LargeFaceListListResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListListResponse"
          />&gt;
  - name: list(LargeFaceListListOptionalParams, ServiceCallback<LargeFaceList[]>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.list_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options: LargeFaceListListOptionalParams, callback:
        ServiceCallback<LargeFaceList[]>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListListOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceList"
            />[]&gt;
          description: The callback
  - name: list(ServiceCallback<LargeFaceList[]>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.list_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<LargeFaceList[]>)'
      parameters:
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceList"
            />[]&gt;
          description: The callback
  - name: listFaces(string, LargeFaceListListFacesOptionalParams)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces'
    package: '@azure/cognitiveservices-face'
    summary: >-
      List all faces in a large face list, and retrieve face information
      (including userData and

      persistedFaceIds of registered faces of the face).
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listFaces(largeFaceListId: string, options?:
        LargeFaceListListFacesOptionalParams):
        Promise<LargeFaceListListFacesResponse>
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListListFacesOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.LargeFaceListListFacesResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListListFacesResponse"
          />&gt;
  - name: >-
      listFaces(string, LargeFaceListListFacesOptionalParams,
      ServiceCallback<PersistedFace[]>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listFaces(largeFaceListId: string, options:
        LargeFaceListListFacesOptionalParams, callback:
        ServiceCallback<PersistedFace[]>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListListFacesOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace"
            />[]&gt;
          description: The callback
  - name: listFaces(string, ServiceCallback<PersistedFace[]>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.listFaces_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listFaces(largeFaceListId: string, callback:
        ServiceCallback<PersistedFace[]>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/cognitiveservices-face.FaceModels.PersistedFace"
            />[]&gt;
          description: The callback
  - name: train(string, RequestOptionsBase)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.train'
    package: '@azure/cognitiveservices-face'
    summary: >-
      Queue a large face list training task, the training task may not be
      started immediately.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function train(largeFaceListId: string, options?: RequestOptionsBase):
        Promise<RestResponse>
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: train(string, RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.train_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function train(largeFaceListId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: train(string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.train_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function train(largeFaceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: update(string, LargeFaceListUpdateOptionalParams)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.update'
    package: '@azure/cognitiveservices-face'
    summary: Update information of a large face list.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(largeFaceListId: string, options?:
        LargeFaceListUpdateOptionalParams): Promise<RestResponse>
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListUpdateOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: update(string, LargeFaceListUpdateOptionalParams, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.update_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(largeFaceListId: string, options:
        LargeFaceListUpdateOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListUpdateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: update(string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.update_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(largeFaceListId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: updateFace(string, string, LargeFaceListUpdateFaceOptionalParams)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace'
    package: '@azure/cognitiveservices-face'
    summary: Update a persisted face's userData field.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateFace(largeFaceListId: string, persistedFaceId: string,
        options?: LargeFaceListUpdateFaceOptionalParams): Promise<RestResponse>
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListUpdateFaceOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: >-
      updateFace(string, string, LargeFaceListUpdateFaceOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_2'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateFace(largeFaceListId: string, persistedFaceId: string,
        options: LargeFaceListUpdateFaceOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: options
          type: >-
            <xref
            uid="@azure/cognitiveservices-face.FaceModels.LargeFaceListUpdateFaceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: updateFace(string, string, ServiceCallback<void>)
    uid: '@azure/cognitiveservices-face.LargeFaceListOperations.updateFace_1'
    package: '@azure/cognitiveservices-face'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateFace(largeFaceListId: string, persistedFaceId: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: largeFaceListId
          type: string
          description: Id referencing a particular large face list.
        - id: persistedFaceId
          type: string
          description: Id referencing a particular persistedFaceId of an existing face.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
