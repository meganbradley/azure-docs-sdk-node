### YamlMime:TSType
name: SupportTickets
uid: '@azure/arm-support.SupportTickets'
package: '@azure/arm-support'
summary: Interface representing a SupportTickets.
fullName: SupportTickets
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreate(string, SupportTicketDetails,
      SupportTicketsCreateOptionalParams)
    uid: '@azure/arm-support.SupportTickets.beginCreate'
    package: '@azure/arm-support'
    summary: >-
      Creates a new support ticket for Subscription and Service limits (Quota),
      Technical, Billing, and

      Subscription Management issues for the specified subscription. Learn the

      [prerequisites](https://aka.ms/supportAPI) required to create a support
      ticket.<br/><br/>Always call

      the Services and ProblemClassifications API to get the most recent set of
      services and problem

      categories required for support ticket creation.<br/><br/>Adding
      attachments is not currently

      supported via the API. To add a file to an existing support ticket, visit
      the [Manage support

      ticket](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/managesupportrequest)

      page in the Azure portal, select the support ticket, and use the file
      upload control to add a new

      file.<br/><br/>Providing consent to share diagnostic information with
      Azure support is currently not

      supported via the API. The Azure support engineer working on your ticket
      will reach out to you for

      consent if your issue requires gathering diagnostic information from your
      Azure

      resources.<br/><br/>**Creating a support ticket for on-behalf-of**:
      Include

      _x-ms-authorization-auxiliary_ header to provide an auxiliary token as per

      [documentation](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant).

      The primary token will be from the tenant for whom a support ticket is
      being raised against the

      subscription, i.e. Cloud solution provider (CSP) customer tenant. The
      auxiliary token will be from

      the Cloud solution provider (CSP) partner tenant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(supportTicketName: string,
        createSupportTicketParameters: SupportTicketDetails, options?:
        SupportTicketsCreateOptionalParams):
        Promise<SimplePollerLike<OperationState<SupportTicketDetails>,
        SupportTicketDetails>>
      parameters:
        - id: supportTicketName
          type: string
          description: Support ticket name.
        - id: createSupportTicketParameters
          type: <xref uid="@azure/arm-support.SupportTicketDetails" />
          description: Support ticket request payload.
        - id: options
          type: <xref uid="@azure/arm-support.SupportTicketsCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/core-lro.SimplePollerLike" />&lt;<xref
          uid="@azure/core-lro.OperationState" />&lt;<xref
          uid="@azure/arm-support.SupportTicketDetails" />&gt;, <xref
          uid="@azure/arm-support.SupportTicketDetails" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, SupportTicketDetails,
      SupportTicketsCreateOptionalParams)
    uid: '@azure/arm-support.SupportTickets.beginCreateAndWait'
    package: '@azure/arm-support'
    summary: >-
      Creates a new support ticket for Subscription and Service limits (Quota),
      Technical, Billing, and

      Subscription Management issues for the specified subscription. Learn the

      [prerequisites](https://aka.ms/supportAPI) required to create a support
      ticket.<br/><br/>Always call

      the Services and ProblemClassifications API to get the most recent set of
      services and problem

      categories required for support ticket creation.<br/><br/>Adding
      attachments is not currently

      supported via the API. To add a file to an existing support ticket, visit
      the [Manage support

      ticket](https://portal.azure.com/#blade/Microsoft_Azure_Support/HelpAndSupportBlade/managesupportrequest)

      page in the Azure portal, select the support ticket, and use the file
      upload control to add a new

      file.<br/><br/>Providing consent to share diagnostic information with
      Azure support is currently not

      supported via the API. The Azure support engineer working on your ticket
      will reach out to you for

      consent if your issue requires gathering diagnostic information from your
      Azure

      resources.<br/><br/>**Creating a support ticket for on-behalf-of**:
      Include

      _x-ms-authorization-auxiliary_ header to provide an auxiliary token as per

      [documentation](https://docs.microsoft.com/azure/azure-resource-manager/management/authenticate-multi-tenant).

      The primary token will be from the tenant for whom a support ticket is
      being raised against the

      subscription, i.e. Cloud solution provider (CSP) customer tenant. The
      auxiliary token will be from

      the Cloud solution provider (CSP) partner tenant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(supportTicketName: string,
        createSupportTicketParameters: SupportTicketDetails, options?:
        SupportTicketsCreateOptionalParams): Promise<SupportTicketDetails>
      parameters:
        - id: supportTicketName
          type: string
          description: Support ticket name.
        - id: createSupportTicketParameters
          type: <xref uid="@azure/arm-support.SupportTicketDetails" />
          description: Support ticket request payload.
        - id: options
          type: <xref uid="@azure/arm-support.SupportTicketsCreateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-support.SupportTicketDetails" />&gt;
  - name: >-
      checkNameAvailability(CheckNameAvailabilityInput,
      SupportTicketsCheckNameAvailabilityOptionalParams)
    uid: '@azure/arm-support.SupportTickets.checkNameAvailability'
    package: '@azure/arm-support'
    summary: >-
      Check the availability of a resource name. This API should be used to
      check the uniqueness of the

      name for support ticket creation for the selected subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(checkNameAvailabilityInput:
        CheckNameAvailabilityInput, options?:
        SupportTicketsCheckNameAvailabilityOptionalParams):
        Promise<CheckNameAvailabilityOutput>
      parameters:
        - id: checkNameAvailabilityInput
          type: <xref uid="@azure/arm-support.CheckNameAvailabilityInput" />
          description: Input to check.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-support.SupportTicketsCheckNameAvailabilityOptionalParams"
            />
          description: The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-support.CheckNameAvailabilityOutput"
          />&gt;
  - name: get(string, SupportTicketsGetOptionalParams)
    uid: '@azure/arm-support.SupportTickets.get'
    package: '@azure/arm-support'
    summary: >-
      Get ticket details for an Azure subscription. Support ticket data is
      available for 18 months after

      ticket creation. If a ticket was created more than 18 months ago, a
      request for data might cause an

      error.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(supportTicketName: string, options?:
        SupportTicketsGetOptionalParams): Promise<SupportTicketDetails>
      parameters:
        - id: supportTicketName
          type: string
          description: Support ticket name.
        - id: options
          type: <xref uid="@azure/arm-support.SupportTicketsGetOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-support.SupportTicketDetails" />&gt;
  - name: list(SupportTicketsListOptionalParams)
    uid: '@azure/arm-support.SupportTickets.list'
    package: '@azure/arm-support'
    summary: >-
      Lists all the support tickets for an Azure subscription. You can also
      filter the support tickets by

      _Status_, _CreatedDate_, _ServiceId_, and _ProblemClassificationId_ using
      the $filter parameter.

      Output will be a paged result with _nextLink_, using which you can
      retrieve the next set of support

      tickets. <br/><br/>Support ticket data is available for 18 months after
      ticket creation. If a ticket

      was created more than 18 months ago, a request for data might cause an
      error.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: SupportTicketsListOptionalParams):
        PagedAsyncIterableIterator<SupportTicketDetails, SupportTicketDetails[],
        PageSettings>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-support.SupportTicketsListOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure/arm-support.SupportTicketDetails" />, <xref
          uid="@azure/arm-support.SupportTicketDetails" />[], <xref
          uid="@azure/core-paging.PageSettings" />&gt;
  - name: update(string, UpdateSupportTicket, SupportTicketsUpdateOptionalParams)
    uid: '@azure/arm-support.SupportTickets.update'
    package: '@azure/arm-support'
    summary: >-
      This API allows you to update the severity level, ticket status, advanced
      diagnostic consent and

      your contact information in the support ticket.<br/><br/>Note: The
      severity levels cannot be changed

      if a support ticket is actively being worked upon by an Azure support
      engineer. In such a case,

      contact your support engineer to request severity update by adding a new
      communication using the

      Communications API.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(supportTicketName: string, updateSupportTicket:
        UpdateSupportTicket, options?: SupportTicketsUpdateOptionalParams):
        Promise<SupportTicketDetails>
      parameters:
        - id: supportTicketName
          type: string
          description: Support ticket name.
        - id: updateSupportTicket
          type: <xref uid="@azure/arm-support.UpdateSupportTicket" />
          description: UpdateSupportTicket object.
        - id: options
          type: <xref uid="@azure/arm-support.SupportTicketsUpdateOptionalParams" />
          description: The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-support.SupportTicketDetails" />&gt;
