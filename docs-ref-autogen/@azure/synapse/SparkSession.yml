### YamlMime:TSType
name: SparkSession
uid: '@azure/synapse.SparkSession'
package: '@azure/synapse'
summary: Class representing a SparkSession.
fullName: SparkSession
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: SparkSession(SynapseClientContext)
    uid: '@azure/synapse.SparkSession.constructor'
    package: '@azure/synapse'
    summary: Create a SparkSession.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new SparkSession(client: SynapseClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/synapse.SynapseClientContext" />
          description: Reference to the service client.
methods:
  - name: >-
      create(string, string, ExtendedLivySessionRequest,
      ServiceCallback<ExtendedLivySessionResponse>)
    uid: '@azure/synapse.SparkSession.create_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(workspaceName: string, sparkPoolName: string,
        livyRequest: ExtendedLivySessionRequest, callback:
        ServiceCallback<ExtendedLivySessionResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: livyRequest
          type: >-
            <xref uid="@azure/synapse.SynapseModels.ExtendedLivySessionRequest"
            />
          description: Livy compatible batch job request payload.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.ExtendedLivySessionResponse"
            />&gt;
          description: The callback
  - name: >-
      create(string, string, ExtendedLivySessionRequest,
      SparkSessionCreateOptionalParams)
    uid: '@azure/synapse.SparkSession.create'
    package: '@azure/synapse'
    summary: Create new spark session.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(workspaceName: string, sparkPoolName: string,
        livyRequest: ExtendedLivySessionRequest, options?:
        SparkSessionCreateOptionalParams): Promise<SparkSessionCreateResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: livyRequest
          type: >-
            <xref uid="@azure/synapse.SynapseModels.ExtendedLivySessionRequest"
            />
          description: Livy compatible batch job request payload.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse.SynapseModels.SparkSessionCreateOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.SparkSessionCreateResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.SparkSessionCreateResponse" />&gt;
  - name: >-
      create(string, string, ExtendedLivySessionRequest,
      SparkSessionCreateOptionalParams,
      ServiceCallback<ExtendedLivySessionResponse>)
    uid: '@azure/synapse.SparkSession.create_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(workspaceName: string, sparkPoolName: string,
        livyRequest: ExtendedLivySessionRequest, options:
        SparkSessionCreateOptionalParams, callback:
        ServiceCallback<ExtendedLivySessionResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: livyRequest
          type: >-
            <xref uid="@azure/synapse.SynapseModels.ExtendedLivySessionRequest"
            />
          description: Livy compatible batch job request payload.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse.SynapseModels.SparkSessionCreateOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.ExtendedLivySessionResponse"
            />&gt;
          description: The callback
  - name: >-
      createStatement(string, string, number, LivyStatementRequestBody,
      RequestOptionsBase)
    uid: '@azure/synapse.SparkSession.createStatement'
    package: '@azure/synapse'
    summary: Create statement within a spark session.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, livyRequest: LivyStatementRequestBody, options?:
        RequestOptionsBase): Promise<SparkSessionCreateStatementResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: livyRequest
          type: <xref uid="@azure/synapse.SynapseModels.LivyStatementRequestBody" />
          description: Livy compatible batch job request payload.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.SparkSessionCreateStatementResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.SparkSessionCreateStatementResponse"
          />&gt;
  - name: >-
      createStatement(string, string, number, LivyStatementRequestBody,
      RequestOptionsBase, ServiceCallback<LivyStatementResponseBody>)
    uid: '@azure/synapse.SparkSession.createStatement_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, livyRequest: LivyStatementRequestBody, options:
        RequestOptionsBase, callback:
        ServiceCallback<LivyStatementResponseBody>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: livyRequest
          type: <xref uid="@azure/synapse.SynapseModels.LivyStatementRequestBody" />
          description: Livy compatible batch job request payload.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.LivyStatementResponseBody" />&gt;
          description: The callback
  - name: >-
      createStatement(string, string, number, LivyStatementRequestBody,
      ServiceCallback<LivyStatementResponseBody>)
    uid: '@azure/synapse.SparkSession.createStatement_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, livyRequest: LivyStatementRequestBody, callback:
        ServiceCallback<LivyStatementResponseBody>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: livyRequest
          type: <xref uid="@azure/synapse.SynapseModels.LivyStatementRequestBody" />
          description: Livy compatible batch job request payload.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.LivyStatementResponseBody" />&gt;
          description: The callback
  - name: deleteMethod(string, string, number, RequestOptionsBase)
    uid: '@azure/synapse.SparkSession.deleteMethod'
    package: '@azure/synapse'
    summary: Cancels a running spark session.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(workspaceName: string, sparkPoolName: string,
        sessionId: number, options?: RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: |-
            Name of the spark pool. "ondemand"
            targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: >-
      deleteMethod(string, string, number, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/synapse.SparkSession.deleteMethod_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(workspaceName: string, sparkPoolName: string,
        sessionId: number, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: |-
            Name of the spark pool. "ondemand"
            targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteMethod(string, string, number, ServiceCallback<void>)
    uid: '@azure/synapse.SparkSession.deleteMethod_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(workspaceName: string, sparkPoolName: string,
        sessionId: number, callback: ServiceCallback<void>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: |-
            Name of the spark pool. "ondemand"
            targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteStatement(string, string, number, number, RequestOptionsBase)
    uid: '@azure/synapse.SparkSession.deleteStatement'
    package: '@azure/synapse'
    summary: Kill a statement within a session.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, statementId: number, options?: RequestOptionsBase):
        Promise<SparkSessionDeleteStatementResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: statementId
          type: number
          description: Identifier for the statement.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.SparkSessionDeleteStatementResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.SparkSessionDeleteStatementResponse"
          />&gt;
  - name: >-
      deleteStatement(string, string, number, number, RequestOptionsBase,
      ServiceCallback<LivyStatementCancellationResponse>)
    uid: '@azure/synapse.SparkSession.deleteStatement_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, statementId: number, options: RequestOptionsBase,
        callback: ServiceCallback<LivyStatementCancellationResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: statementId
          type: number
          description: Identifier for the statement.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.LivyStatementCancellationResponse"
            />&gt;
          description: The callback
  - name: >-
      deleteStatement(string, string, number, number,
      ServiceCallback<LivyStatementCancellationResponse>)
    uid: '@azure/synapse.SparkSession.deleteStatement_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, statementId: number, callback:
        ServiceCallback<LivyStatementCancellationResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: statementId
          type: number
          description: Identifier for the statement.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.LivyStatementCancellationResponse"
            />&gt;
          description: The callback
  - name: get(string, string, number, ServiceCallback<ExtendedLivySessionResponse>)
    uid: '@azure/synapse.SparkSession.get_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(workspaceName: string, sparkPoolName: string, sessionId:
        number, callback: ServiceCallback<ExtendedLivySessionResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.ExtendedLivySessionResponse"
            />&gt;
          description: The callback
  - name: get(string, string, number, SparkSessionGetOptionalParams)
    uid: '@azure/synapse.SparkSession.get'
    package: '@azure/synapse'
    summary: Gets a single spark session.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(workspaceName: string, sparkPoolName: string, sessionId:
        number, options?: SparkSessionGetOptionalParams):
        Promise<SparkSessionGetResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse.SynapseModels.SparkSessionGetOptionalParams" />
          description: The optional parameters
      return:
        description: Promise<Models.SparkSessionGetResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.SparkSessionGetResponse" />&gt;
  - name: >-
      get(string, string, number, SparkSessionGetOptionalParams,
      ServiceCallback<ExtendedLivySessionResponse>)
    uid: '@azure/synapse.SparkSession.get_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(workspaceName: string, sparkPoolName: string, sessionId:
        number, options: SparkSessionGetOptionalParams, callback:
        ServiceCallback<ExtendedLivySessionResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse.SynapseModels.SparkSessionGetOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.ExtendedLivySessionResponse"
            />&gt;
          description: The callback
  - name: getStatement(string, string, number, number, RequestOptionsBase)
    uid: '@azure/synapse.SparkSession.getStatement'
    package: '@azure/synapse'
    summary: Gets a single statement within a spark session.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, statementId: number, options?: RequestOptionsBase):
        Promise<SparkSessionGetStatementResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: statementId
          type: number
          description: Identifier for the statement.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.SparkSessionGetStatementResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.SparkSessionGetStatementResponse"
          />&gt;
  - name: >-
      getStatement(string, string, number, number, RequestOptionsBase,
      ServiceCallback<LivyStatementResponseBody>)
    uid: '@azure/synapse.SparkSession.getStatement_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, statementId: number, options: RequestOptionsBase,
        callback: ServiceCallback<LivyStatementResponseBody>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: statementId
          type: number
          description: Identifier for the statement.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.LivyStatementResponseBody" />&gt;
          description: The callback
  - name: >-
      getStatement(string, string, number, number,
      ServiceCallback<LivyStatementResponseBody>)
    uid: '@azure/synapse.SparkSession.getStatement_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getStatement(workspaceName: string, sparkPoolName: string,
        sessionId: number, statementId: number, callback:
        ServiceCallback<LivyStatementResponseBody>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: statementId
          type: number
          description: Identifier for the statement.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.LivyStatementResponseBody" />&gt;
          description: The callback
  - name: list(string, string, ServiceCallback<ExtendedLivyListSessionResponse>)
    uid: '@azure/synapse.SparkSession.list_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(workspaceName: string, sparkPoolName: string, callback:
        ServiceCallback<ExtendedLivyListSessionResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.ExtendedLivyListSessionResponse"
            />&gt;
          description: The callback
  - name: list(string, string, SparkSessionListOptionalParams)
    uid: '@azure/synapse.SparkSession.list'
    package: '@azure/synapse'
    summary: List all spark sessions which are running under a particular spark pool.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(workspaceName: string, sparkPoolName: string, options?:
        SparkSessionListOptionalParams): Promise<SparkSessionListResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse.SynapseModels.SparkSessionListOptionalParams" />
          description: The optional parameters
      return:
        description: Promise<Models.SparkSessionListResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.SparkSessionListResponse" />&gt;
  - name: >-
      list(string, string, SparkSessionListOptionalParams,
      ServiceCallback<ExtendedLivyListSessionResponse>)
    uid: '@azure/synapse.SparkSession.list_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(workspaceName: string, sparkPoolName: string, options:
        SparkSessionListOptionalParams, callback:
        ServiceCallback<ExtendedLivyListSessionResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse.SynapseModels.SparkSessionListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.ExtendedLivyListSessionResponse"
            />&gt;
          description: The callback
  - name: listStatements(string, string, number, RequestOptionsBase)
    uid: '@azure/synapse.SparkSession.listStatements'
    package: '@azure/synapse'
    summary: Gets a list of statements within a spark session.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listStatements(workspaceName: string, sparkPoolName: string,
        sessionId: number, options?: RequestOptionsBase):
        Promise<SparkSessionListStatementsResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.SparkSessionListStatementsResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.SparkSessionListStatementsResponse"
          />&gt;
  - name: >-
      listStatements(string, string, number, RequestOptionsBase,
      ServiceCallback<LivyStatementsResponseBody>)
    uid: '@azure/synapse.SparkSession.listStatements_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listStatements(workspaceName: string, sparkPoolName: string,
        sessionId: number, options: RequestOptionsBase, callback:
        ServiceCallback<LivyStatementsResponseBody>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.LivyStatementsResponseBody" />&gt;
          description: The callback
  - name: >-
      listStatements(string, string, number,
      ServiceCallback<LivyStatementsResponseBody>)
    uid: '@azure/synapse.SparkSession.listStatements_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listStatements(workspaceName: string, sparkPoolName: string,
        sessionId: number, callback:
        ServiceCallback<LivyStatementsResponseBody>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.LivyStatementsResponseBody" />&gt;
          description: The callback
  - name: resetTimeout(string, string, number, RequestOptionsBase)
    uid: '@azure/synapse.SparkSession.resetTimeout'
    package: '@azure/synapse'
    summary: >-
      Sends a keep alive call to the current session to reset the session
      timeout.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function resetTimeout(workspaceName: string, sparkPoolName: string,
        sessionId: number, options?: RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: |-
            Name of the spark pool. "ondemand"
            targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: >-
      resetTimeout(string, string, number, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/synapse.SparkSession.resetTimeout_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function resetTimeout(workspaceName: string, sparkPoolName: string,
        sessionId: number, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: |-
            Name of the spark pool. "ondemand"
            targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: resetTimeout(string, string, number, ServiceCallback<void>)
    uid: '@azure/synapse.SparkSession.resetTimeout_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function resetTimeout(workspaceName: string, sparkPoolName: string,
        sessionId: number, callback: ServiceCallback<void>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: |-
            Name of the spark pool. "ondemand"
            targets the ondemand pool.
        - id: sessionId
          type: number
          description: Identifier for the session.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
