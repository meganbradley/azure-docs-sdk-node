### YamlMime:TSType
name: Monitoring
uid: '@azure/synapse.Monitoring'
package: '@azure/synapse'
summary: Class representing a Monitoring.
fullName: Monitoring
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: Monitoring(SynapseClientContext)
    uid: '@azure/synapse.Monitoring.constructor'
    package: '@azure/synapse'
    summary: Create a Monitoring.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new Monitoring(client: SynapseClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/synapse.SynapseClientContext" />
          description: Reference to the service client.
methods:
  - name: getApplicationDetails(string, string, string, RequestOptionsBase)
    uid: '@azure/synapse.Monitoring.getApplicationDetails'
    package: '@azure/synapse'
    summary: >-
      Get one spark application details given the workspace name, pool name and
      livyid.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getApplicationDetails(workspaceName: string, poolName: string,
        livyId: string, options?: RequestOptionsBase):
        Promise<MonitoringGetApplicationDetailsResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: poolName
          type: string
          description: The spark pool name.
        - id: livyId
          type: string
          description: The livy id.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.MonitoringGetApplicationDetailsResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.MonitoringGetApplicationDetailsResponse"
          />&gt;
  - name: >-
      getApplicationDetails(string, string, string, RequestOptionsBase,
      ServiceCallback<SparkJobListViewResponse>)
    uid: '@azure/synapse.Monitoring.getApplicationDetails_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getApplicationDetails(workspaceName: string, poolName: string,
        livyId: string, options: RequestOptionsBase, callback:
        ServiceCallback<SparkJobListViewResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: poolName
          type: string
          description: The spark pool name.
        - id: livyId
          type: string
          description: The livy id.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.SparkJobListViewResponse" />&gt;
          description: The callback
  - name: >-
      getApplicationDetails(string, string, string,
      ServiceCallback<SparkJobListViewResponse>)
    uid: '@azure/synapse.Monitoring.getApplicationDetails_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getApplicationDetails(workspaceName: string, poolName: string,
        livyId: string, callback: ServiceCallback<SparkJobListViewResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: poolName
          type: string
          description: The spark pool name.
        - id: livyId
          type: string
          description: The livy id.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.SparkJobListViewResponse" />&gt;
          description: The callback
  - name: >-
      getHistoryServerData(string, string, string, string, string,
      RequestOptionsBase)
    uid: '@azure/synapse.Monitoring.getHistoryServerData'
    package: '@azure/synapse'
    summary: >-
      Get History Server Data for a given workspace, pool, livyid, appid and
      attemptId
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getHistoryServerData(workspaceName: string, poolName: string,
        livyId: string, appId: string, attemptId: string, options?:
        RequestOptionsBase): Promise<MonitoringGetHistoryServerDataResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: poolName
          type: string
          description: The spark pool name.
        - id: livyId
          type: string
          description: The livy id.
        - id: appId
          type: string
          description: The application id.
        - id: attemptId
          type: string
          description: The attempt id.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.MonitoringGetHistoryServerDataResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.MonitoringGetHistoryServerDataResponse"
          />&gt;
  - name: >-
      getHistoryServerData(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<HistoryServerDataResponse>)
    uid: '@azure/synapse.Monitoring.getHistoryServerData_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getHistoryServerData(workspaceName: string, poolName: string,
        livyId: string, appId: string, attemptId: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<HistoryServerDataResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: poolName
          type: string
          description: The spark pool name.
        - id: livyId
          type: string
          description: The livy id.
        - id: appId
          type: string
          description: The application id.
        - id: attemptId
          type: string
          description: The attempt id.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.HistoryServerDataResponse" />&gt;
          description: The callback
  - name: >-
      getHistoryServerData(string, string, string, string, string,
      ServiceCallback<HistoryServerDataResponse>)
    uid: '@azure/synapse.Monitoring.getHistoryServerData_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getHistoryServerData(workspaceName: string, poolName: string,
        livyId: string, appId: string, attemptId: string, callback:
        ServiceCallback<HistoryServerDataResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: poolName
          type: string
          description: The spark pool name.
        - id: livyId
          type: string
          description: The livy id.
        - id: appId
          type: string
          description: The application id.
        - id: attemptId
          type: string
          description: The attempt id.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.HistoryServerDataResponse" />&gt;
          description: The callback
  - name: >-
      getHistoryServerDiagnostic(string, string, string, string, string,
      RequestOptionsBase)
    uid: '@azure/synapse.Monitoring.getHistoryServerDiagnostic'
    package: '@azure/synapse'
    summary: >-
      Get History Server Diagnostic Data for a given workspace, pool, livyid,
      appid and attemptId
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getHistoryServerDiagnostic(workspaceName: string, poolName:
        string, livyId: string, appId: string, attemptId: string, options?:
        RequestOptionsBase):
        Promise<MonitoringGetHistoryServerDiagnosticResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: poolName
          type: string
          description: The spark pool name.
        - id: livyId
          type: string
          description: The livy id.
        - id: appId
          type: string
          description: The application id.
        - id: attemptId
          type: string
          description: The attempt id.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.MonitoringGetHistoryServerDiagnosticResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.MonitoringGetHistoryServerDiagnosticResponse"
          />&gt;
  - name: >-
      getHistoryServerDiagnostic(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<HistoryServerDiagnosticResponse>)
    uid: '@azure/synapse.Monitoring.getHistoryServerDiagnostic_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getHistoryServerDiagnostic(workspaceName: string, poolName:
        string, livyId: string, appId: string, attemptId: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<HistoryServerDiagnosticResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: poolName
          type: string
          description: The spark pool name.
        - id: livyId
          type: string
          description: The livy id.
        - id: appId
          type: string
          description: The application id.
        - id: attemptId
          type: string
          description: The attempt id.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.HistoryServerDiagnosticResponse"
            />&gt;
          description: The callback
  - name: >-
      getHistoryServerDiagnostic(string, string, string, string, string,
      ServiceCallback<HistoryServerDiagnosticResponse>)
    uid: '@azure/synapse.Monitoring.getHistoryServerDiagnostic_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getHistoryServerDiagnostic(workspaceName: string, poolName:
        string, livyId: string, appId: string, attemptId: string, callback:
        ServiceCallback<HistoryServerDiagnosticResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: poolName
          type: string
          description: The spark pool name.
        - id: livyId
          type: string
          description: The livy id.
        - id: appId
          type: string
          description: The application id.
        - id: attemptId
          type: string
          description: The attempt id.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.HistoryServerDiagnosticResponse"
            />&gt;
          description: The callback
  - name: >-
      getHistoryServerGraph(string, string, string, string, string,
      RequestOptionsBase)
    uid: '@azure/synapse.Monitoring.getHistoryServerGraph'
    package: '@azure/synapse'
    summary: >-
      Get History Server Graph Data for a given workspace, pool, livyid, appid
      and attemptId
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getHistoryServerGraph(workspaceName: string, poolName: string,
        livyId: string, appId: string, attemptId: string, options?:
        RequestOptionsBase): Promise<MonitoringGetHistoryServerGraphResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: poolName
          type: string
          description: The spark pool name.
        - id: livyId
          type: string
          description: The livy id.
        - id: appId
          type: string
          description: The application id.
        - id: attemptId
          type: string
          description: The attempt id.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.MonitoringGetHistoryServerGraphResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.MonitoringGetHistoryServerGraphResponse"
          />&gt;
  - name: >-
      getHistoryServerGraph(string, string, string, string, string,
      RequestOptionsBase, ServiceCallback<HistoryServerGraphResponse>)
    uid: '@azure/synapse.Monitoring.getHistoryServerGraph_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getHistoryServerGraph(workspaceName: string, poolName: string,
        livyId: string, appId: string, attemptId: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<HistoryServerGraphResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: poolName
          type: string
          description: The spark pool name.
        - id: livyId
          type: string
          description: The livy id.
        - id: appId
          type: string
          description: The application id.
        - id: attemptId
          type: string
          description: The attempt id.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.HistoryServerGraphResponse" />&gt;
          description: The callback
  - name: >-
      getHistoryServerGraph(string, string, string, string, string,
      ServiceCallback<HistoryServerGraphResponse>)
    uid: '@azure/synapse.Monitoring.getHistoryServerGraph_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getHistoryServerGraph(workspaceName: string, poolName: string,
        livyId: string, appId: string, attemptId: string, callback:
        ServiceCallback<HistoryServerGraphResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: poolName
          type: string
          description: The spark pool name.
        - id: livyId
          type: string
          description: The livy id.
        - id: appId
          type: string
          description: The application id.
        - id: attemptId
          type: string
          description: The attempt id.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.HistoryServerGraphResponse" />&gt;
          description: The callback
  - name: getHistoryServerProperties(string, RequestOptionsBase)
    uid: '@azure/synapse.Monitoring.getHistoryServerProperties'
    package: '@azure/synapse'
    summary: Get History server properties.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getHistoryServerProperties(workspaceName: string, options?:
        RequestOptionsBase):
        Promise<MonitoringGetHistoryServerPropertiesResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.MonitoringGetHistoryServerPropertiesResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.MonitoringGetHistoryServerPropertiesResponse"
          />&gt;
  - name: >-
      getHistoryServerProperties(string, RequestOptionsBase,
      ServiceCallback<HistoryServerPropertiesResponse>)
    uid: '@azure/synapse.Monitoring.getHistoryServerProperties_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getHistoryServerProperties(workspaceName: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<HistoryServerPropertiesResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.HistoryServerPropertiesResponse"
            />&gt;
          description: The callback
  - name: >-
      getHistoryServerProperties(string,
      ServiceCallback<HistoryServerPropertiesResponse>)
    uid: '@azure/synapse.Monitoring.getHistoryServerProperties_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getHistoryServerProperties(workspaceName: string, callback:
        ServiceCallback<HistoryServerPropertiesResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.HistoryServerPropertiesResponse"
            />&gt;
          description: The callback
  - name: getSparkJobList(string, RequestOptionsBase)
    uid: '@azure/synapse.Monitoring.getSparkJobList'
    package: '@azure/synapse'
    summary: Get list of spark applications for the workspace.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getSparkJobList(workspaceName: string, options?:
        RequestOptionsBase): Promise<MonitoringGetSparkJobListResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<Models.MonitoringGetSparkJobListResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.MonitoringGetSparkJobListResponse"
          />&gt;
  - name: >-
      getSparkJobList(string, RequestOptionsBase,
      ServiceCallback<SparkJobListViewResponse>)
    uid: '@azure/synapse.Monitoring.getSparkJobList_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getSparkJobList(workspaceName: string, options:
        RequestOptionsBase, callback: ServiceCallback<SparkJobListViewResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.SparkJobListViewResponse" />&gt;
          description: The callback
  - name: getSparkJobList(string, ServiceCallback<SparkJobListViewResponse>)
    uid: '@azure/synapse.Monitoring.getSparkJobList_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getSparkJobList(workspaceName: string, callback:
        ServiceCallback<SparkJobListViewResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.SparkJobListViewResponse" />&gt;
          description: The callback
