### YamlMime:TSType
name: SparkBatch
uid: '@azure/synapse.SparkBatch'
package: '@azure/synapse'
summary: Class representing a SparkBatch.
fullName: SparkBatch
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: SparkBatch(SynapseClientContext)
    uid: '@azure/synapse.SparkBatch.constructor'
    package: '@azure/synapse'
    summary: Create a SparkBatch.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new SparkBatch(client: SynapseClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/synapse.SynapseClientContext" />
          description: Reference to the service client.
methods:
  - name: >-
      create(string, string, ExtendedLivyBatchRequest,
      ServiceCallback<ExtendedLivyBatchResponse>)
    uid: '@azure/synapse.SparkBatch.create_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(workspaceName: string, sparkPoolName: string,
        livyRequest: ExtendedLivyBatchRequest, callback:
        ServiceCallback<ExtendedLivyBatchResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: livyRequest
          type: <xref uid="@azure/synapse.SynapseModels.ExtendedLivyBatchRequest" />
          description: Livy compatible batch job request payload.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.ExtendedLivyBatchResponse" />&gt;
          description: The callback
  - name: >-
      create(string, string, ExtendedLivyBatchRequest,
      SparkBatchCreateOptionalParams)
    uid: '@azure/synapse.SparkBatch.create'
    package: '@azure/synapse'
    summary: Create new spark batch job.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(workspaceName: string, sparkPoolName: string,
        livyRequest: ExtendedLivyBatchRequest, options?:
        SparkBatchCreateOptionalParams): Promise<SparkBatchCreateResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: livyRequest
          type: <xref uid="@azure/synapse.SynapseModels.ExtendedLivyBatchRequest" />
          description: Livy compatible batch job request payload.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse.SynapseModels.SparkBatchCreateOptionalParams" />
          description: The optional parameters
      return:
        description: Promise<Models.SparkBatchCreateResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.SparkBatchCreateResponse" />&gt;
  - name: >-
      create(string, string, ExtendedLivyBatchRequest,
      SparkBatchCreateOptionalParams,
      ServiceCallback<ExtendedLivyBatchResponse>)
    uid: '@azure/synapse.SparkBatch.create_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(workspaceName: string, sparkPoolName: string,
        livyRequest: ExtendedLivyBatchRequest, options:
        SparkBatchCreateOptionalParams, callback:
        ServiceCallback<ExtendedLivyBatchResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: livyRequest
          type: <xref uid="@azure/synapse.SynapseModels.ExtendedLivyBatchRequest" />
          description: Livy compatible batch job request payload.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse.SynapseModels.SparkBatchCreateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.ExtendedLivyBatchResponse" />&gt;
          description: The callback
  - name: deleteMethod(string, string, number, RequestOptionsBase)
    uid: '@azure/synapse.SparkBatch.deleteMethod'
    package: '@azure/synapse'
    summary: Cancels a running spark batch job.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(workspaceName: string, sparkPoolName: string,
        batchId: number, options?: RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: batchId
          type: number
          description: Identifier for the batch job.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;<xref uid="@azure/ms-rest-js.RestResponse" />&gt;
  - name: >-
      deleteMethod(string, string, number, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/synapse.SparkBatch.deleteMethod_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(workspaceName: string, sparkPoolName: string,
        batchId: number, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: batchId
          type: number
          description: Identifier for the batch job.
        - id: options
          type: <xref uid="@azure/ms-rest-js.RequestOptionsBase" />
          description: The optional parameters
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: deleteMethod(string, string, number, ServiceCallback<void>)
    uid: '@azure/synapse.SparkBatch.deleteMethod_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(workspaceName: string, sparkPoolName: string,
        batchId: number, callback: ServiceCallback<void>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: batchId
          type: number
          description: Identifier for the batch job.
        - id: callback
          type: <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;void&gt;
          description: The callback
  - name: get(string, string, number, ServiceCallback<ExtendedLivyBatchResponse>)
    uid: '@azure/synapse.SparkBatch.get_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(workspaceName: string, sparkPoolName: string, batchId:
        number, callback: ServiceCallback<ExtendedLivyBatchResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: batchId
          type: number
          description: Identifier for the batch job.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.ExtendedLivyBatchResponse" />&gt;
          description: The callback
  - name: get(string, string, number, SparkBatchGetOptionalParams)
    uid: '@azure/synapse.SparkBatch.get'
    package: '@azure/synapse'
    summary: Gets a single spark batch job.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(workspaceName: string, sparkPoolName: string, batchId:
        number, options?: SparkBatchGetOptionalParams):
        Promise<SparkBatchGetResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: batchId
          type: number
          description: Identifier for the batch job.
        - id: options
          type: >-
            <xref uid="@azure/synapse.SynapseModels.SparkBatchGetOptionalParams"
            />
          description: The optional parameters
      return:
        description: Promise<Models.SparkBatchGetResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.SparkBatchGetResponse" />&gt;
  - name: >-
      get(string, string, number, SparkBatchGetOptionalParams,
      ServiceCallback<ExtendedLivyBatchResponse>)
    uid: '@azure/synapse.SparkBatch.get_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(workspaceName: string, sparkPoolName: string, batchId:
        number, options: SparkBatchGetOptionalParams, callback:
        ServiceCallback<ExtendedLivyBatchResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: batchId
          type: number
          description: Identifier for the batch job.
        - id: options
          type: >-
            <xref uid="@azure/synapse.SynapseModels.SparkBatchGetOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.ExtendedLivyBatchResponse" />&gt;
          description: The callback
  - name: list(string, string, ServiceCallback<ExtendedLivyListBatchResponse>)
    uid: '@azure/synapse.SparkBatch.list_1'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(workspaceName: string, sparkPoolName: string, callback:
        ServiceCallback<ExtendedLivyListBatchResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.ExtendedLivyListBatchResponse"
            />&gt;
          description: The callback
  - name: list(string, string, SparkBatchListOptionalParams)
    uid: '@azure/synapse.SparkBatch.list'
    package: '@azure/synapse'
    summary: List all spark batch jobs which are running under a particular spark pool.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(workspaceName: string, sparkPoolName: string, options?:
        SparkBatchListOptionalParams): Promise<SparkBatchListResponse>
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse.SynapseModels.SparkBatchListOptionalParams" />
          description: The optional parameters
      return:
        description: Promise<Models.SparkBatchListResponse>
        type: >-
          Promise&lt;<xref
          uid="@azure/synapse.SynapseModels.SparkBatchListResponse" />&gt;
  - name: >-
      list(string, string, SparkBatchListOptionalParams,
      ServiceCallback<ExtendedLivyListBatchResponse>)
    uid: '@azure/synapse.SparkBatch.list_2'
    package: '@azure/synapse'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(workspaceName: string, sparkPoolName: string, options:
        SparkBatchListOptionalParams, callback:
        ServiceCallback<ExtendedLivyListBatchResponse>)
      parameters:
        - id: workspaceName
          type: string
          description: The name of the workspace to execute operations on.
        - id: sparkPoolName
          type: string
          description: Name of the spark pool. "ondemand" targets the ondemand pool.
        - id: options
          type: >-
            <xref
            uid="@azure/synapse.SynapseModels.SparkBatchListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            <xref uid="@azure/ms-rest-js.ServiceCallback" />&lt;<xref
            uid="@azure/synapse.SynapseModels.ExtendedLivyListBatchResponse"
            />&gt;
          description: The callback
