### YamlMime:TSType
name: CommonCallAdapter
uid: '@azure/communication-react.CommonCallAdapter'
package: '@azure/communication-react'
summary: >-
  [CallComposite](xref:@azure/communication-react.CallComposite) Adapter
  interface.
fullName: CommonCallAdapter
remarks: ''
isDeprecated: false
type: interface
inheritedMethods:
  - name: askDevicePermission(PermissionConstraints)
    uid: '@azure/communication-react.CommonCallAdapter.askDevicePermission'
    package: '@azure/communication-react'
    summary: Ask for permissions of devices.
    remarks: Browser permission window will pop up if permissions are not granted yet
    isDeprecated: false
    syntax:
      content: >-
        function askDevicePermission(constrain: PermissionConstraints):
        Promise<void>
      parameters:
        - id: constrain
          type: <xref uid="@azure/communication-calling.PermissionConstraints" />
          description: >-
            Define constraints for accessing local devices
            <xref:%40azure%2Fcommunication-calling%23PermissionConstraints>
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterDeviceManagement.askDevicePermission](xref:@azure/communication-react.CallAdapterDeviceManagement.askDevicePermission)
  - name: createStreamView(string, VideoStreamOptions)
    uid: '@azure/communication-react.CommonCallAdapter.createStreamView'
    package: '@azure/communication-react'
    summary: Create the html view for a stream.
    remarks: This method is implemented for composite
    isDeprecated: false
    syntax:
      content: >-
        function createStreamView(remoteUserId?: string, options?:
        VideoStreamOptions): Promise<void | CreateVideoStreamViewResult>
      parameters:
        - id: remoteUserId
          type: string
          description: >-
            Id of the participant to render, leave it undefined to create the
            local camera view
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            <xref:%40azure%2Fcommunication-calling%23VideoStreamOptions>
      return:
        description: ''
        type: >-
          Promise&lt;void | <xref
          uid="@azure/communication-react.CreateVideoStreamViewResult" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.createStreamView](xref:@azure/communication-react.CallAdapterCallOperations.createStreamView)
  - name: dispose()
    uid: '@azure/communication-react.CommonCallAdapter.dispose'
    package: '@azure/communication-react'
    summary: Dispose of the Composite
    remarks: ''
    isDeprecated: false
    syntax:
      content: function dispose()
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Disposable.dispose](xref:@azure/communication-react.Disposable.dispose)
  - name: disposeStreamView(string, VideoStreamOptions)
    uid: '@azure/communication-react.CommonCallAdapter.disposeStreamView'
    package: '@azure/communication-react'
    summary: Dispose the html view for a stream.
    remarks: This method is implemented for composite
    isDeprecated: false
    syntax:
      content: >-
        function disposeStreamView(remoteUserId?: string, options?:
        VideoStreamOptions): Promise<void>
      parameters:
        - id: remoteUserId
          type: string
          description: >-
            Id of the participant to render, leave it undefined to dispose the
            local camera view
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            <xref:%40azure%2Fcommunication-calling%23VideoStreamOptions>
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.disposeStreamView](xref:@azure/communication-react.CallAdapterCallOperations.disposeStreamView)
  - name: getState()
    uid: '@azure/communication-react.CommonCallAdapter.getState'
    package: '@azure/communication-react'
    summary: Get the current State
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getState(): CallAdapterState'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.CallAdapterState" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AdapterState.getState](xref:@azure/communication-react.AdapterState.getState)
  - name: leaveCall(boolean)
    uid: '@azure/communication-react.CommonCallAdapter.leaveCall'
    package: '@azure/communication-react'
    summary: Leave the call
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function leaveCall(forEveryone?: boolean): Promise<void>'
      parameters:
        - id: forEveryone
          type: boolean
          description: Whether to remove all participants when leaving
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.leaveCall](xref:@azure/communication-react.CallAdapterCallOperations.leaveCall)
  - name: mute()
    uid: '@azure/communication-react.CommonCallAdapter.mute'
    package: '@azure/communication-react'
    summary: Mute the current user during the call or disable microphone locally
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function mute(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.mute](xref:@azure/communication-react.CallAdapterCallOperations.mute)
  - name: off("callEnded", CallEndedListener)
    uid: '@azure/communication-react.CommonCallAdapter.off_7'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'callEnded' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "callEnded", listener: CallEndedListener)'
      parameters:
        - id: event
          type: '"callEnded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallEndedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.off](xref:@azure/communication-react.CallAdapterSubscribers.off)
  - name: off("callIdChanged", CallIdChangedListener)
    uid: '@azure/communication-react.CommonCallAdapter.off_3'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'callIdChanged' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "callIdChanged", listener: CallIdChangedListener)'
      parameters:
        - id: event
          type: '"callIdChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallIdChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.off](xref:@azure/communication-react.CallAdapterSubscribers.off)
  - name: off("diagnosticChanged", DiagnosticChangedEventListner)
    uid: '@azure/communication-react.CommonCallAdapter.off_8'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'diagnosticChanged' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "diagnosticChanged", listener:
        DiagnosticChangedEventListner)
      parameters:
        - id: event
          type: '"diagnosticChanged"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.DiagnosticChangedEventListner"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.off](xref:@azure/communication-react.CallAdapterSubscribers.off)
  - name: off("displayNameChanged", DisplayNameChangedListener)
    uid: '@azure/communication-react.CommonCallAdapter.off_5'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'displayNameChanged' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "displayNameChanged", listener:
        DisplayNameChangedListener)
      parameters:
        - id: event
          type: '"displayNameChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.DisplayNameChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.off](xref:@azure/communication-react.CallAdapterSubscribers.off)
  - name: 'off("error", (e: AdapterError) => void)'
    uid: '@azure/communication-react.CommonCallAdapter.off_11'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'error' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "error", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.off](xref:@azure/communication-react.CallAdapterSubscribers.off)
  - name: >-
      off("isLocalScreenSharingActiveChanged",
      IsLocalScreenSharingActiveChangedListener)
    uid: '@azure/communication-react.CommonCallAdapter.off_4'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'isLocalScreenSharingActiveChanged' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isLocalScreenSharingActiveChanged", listener:
        IsLocalScreenSharingActiveChangedListener)
      parameters:
        - id: event
          type: '"isLocalScreenSharingActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsLocalScreenSharingActiveChangedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.off](xref:@azure/communication-react.CallAdapterSubscribers.off)
  - name: off("isMutedChanged", IsMutedChangedListener)
    uid: '@azure/communication-react.CommonCallAdapter.off_2'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'isMutedChanged' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "isMutedChanged", listener: IsMutedChangedListener)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsMutedChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.off](xref:@azure/communication-react.CallAdapterSubscribers.off)
  - name: off("isSpeakingChanged", IsSpeakingChangedListener)
    uid: '@azure/communication-react.CommonCallAdapter.off_6'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'isSpeakingChanged' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isSpeakingChanged", listener:
        IsSpeakingChangedListener)
      parameters:
        - id: event
          type: '"isSpeakingChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsSpeakingChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.off](xref:@azure/communication-react.CallAdapterSubscribers.off)
  - name: off("participantsJoined", ParticipantsJoinedListener)
    uid: '@azure/communication-react.CommonCallAdapter.off'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'participantsJoined' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "participantsJoined", listener:
        ParticipantsJoinedListener)
      parameters:
        - id: event
          type: '"participantsJoined"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsJoinedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.off](xref:@azure/communication-react.CallAdapterSubscribers.off)
  - name: off("participantsLeft", ParticipantsLeftListener)
    uid: '@azure/communication-react.CommonCallAdapter.off_1'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'participantsLeft' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "participantsLeft", listener:
        ParticipantsLeftListener)
      parameters:
        - id: event
          type: '"participantsLeft"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsLeftListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.off](xref:@azure/communication-react.CallAdapterSubscribers.off)
  - name: off("selectedMicrophoneChanged", PropertyChangedEvent)
    uid: '@azure/communication-react.CommonCallAdapter.off_9'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'selectedMicrophoneChanged' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "selectedMicrophoneChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedMicrophoneChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-calling.PropertyChangedEvent" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.off](xref:@azure/communication-react.CallAdapterSubscribers.off)
  - name: off("selectedSpeakerChanged", PropertyChangedEvent)
    uid: '@azure/communication-react.CommonCallAdapter.off_10'
    package: '@azure/communication-react'
    summary: Unsubscribe function for 'selectedSpeakerChanged' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "selectedSpeakerChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedSpeakerChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-calling.PropertyChangedEvent" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.off](xref:@azure/communication-react.CallAdapterSubscribers.off)
  - name: 'offStateChange((state: CallAdapterState) => void)'
    uid: '@azure/communication-react.CommonCallAdapter.offStateChange'
    package: '@azure/communication-react'
    summary: Unsubscribes the handler to stateChanged events.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function offStateChange(handler: (state: CallAdapterState) => void)'
      parameters:
        - id: handler
          type: '(state: CallAdapterState) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AdapterState.offStateChange](xref:@azure/communication-react.AdapterState.offStateChange)
  - name: on("callEnded", CallEndedListener)
    uid: '@azure/communication-react.CommonCallAdapter.on_7'
    package: '@azure/communication-react'
    summary: Subscribe function for 'callEnded' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "callEnded", listener: CallEndedListener)'
      parameters:
        - id: event
          type: '"callEnded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallEndedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.on](xref:@azure/communication-react.CallAdapterSubscribers.on)
  - name: on("callIdChanged", CallIdChangedListener)
    uid: '@azure/communication-react.CommonCallAdapter.on_3'
    package: '@azure/communication-react'
    summary: Subscribe function for 'callIdChanged' event.
    remarks: The event will be triggered when callId of current user changed.
    isDeprecated: false
    syntax:
      content: 'function on(event: "callIdChanged", listener: CallIdChangedListener)'
      parameters:
        - id: event
          type: '"callIdChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallIdChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.on](xref:@azure/communication-react.CallAdapterSubscribers.on)
  - name: on("diagnosticChanged", DiagnosticChangedEventListner)
    uid: '@azure/communication-react.CommonCallAdapter.on_8'
    package: '@azure/communication-react'
    summary: >-
      Subscribe function for 'diagnosticChanged' event.


      This event fires whenever there is a change in user facing diagnostics
      about the ongoing call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "diagnosticChanged", listener:
        DiagnosticChangedEventListner)
      parameters:
        - id: event
          type: '"diagnosticChanged"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.DiagnosticChangedEventListner"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.on](xref:@azure/communication-react.CallAdapterSubscribers.on)
  - name: on("displayNameChanged", DisplayNameChangedListener)
    uid: '@azure/communication-react.CommonCallAdapter.on_5'
    package: '@azure/communication-react'
    summary: Subscribe function for 'displayNameChanged' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "displayNameChanged", listener:
        DisplayNameChangedListener)
      parameters:
        - id: event
          type: '"displayNameChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.DisplayNameChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.on](xref:@azure/communication-react.CallAdapterSubscribers.on)
  - name: 'on("error", (e: AdapterError) => void)'
    uid: '@azure/communication-react.CommonCallAdapter.on_11'
    package: '@azure/communication-react'
    summary: Subscribe function for 'error' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "error", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.on](xref:@azure/communication-react.CallAdapterSubscribers.on)
  - name: >-
      on("isLocalScreenSharingActiveChanged",
      IsLocalScreenSharingActiveChangedListener)
    uid: '@azure/communication-react.CommonCallAdapter.on_4'
    package: '@azure/communication-react'
    summary: Subscribe function for 'isLocalScreenSharingActiveChanged' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isLocalScreenSharingActiveChanged", listener:
        IsLocalScreenSharingActiveChangedListener)
      parameters:
        - id: event
          type: '"isLocalScreenSharingActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsLocalScreenSharingActiveChangedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.on](xref:@azure/communication-react.CallAdapterSubscribers.on)
  - name: on("isMutedChanged", IsMutedChangedListener)
    uid: '@azure/communication-react.CommonCallAdapter.on_2'
    package: '@azure/communication-react'
    summary: Subscribe function for 'isMutedChanged' event.
    remarks: >-
      The event will be triggered whenever current user or remote user mute
      state changed
    isDeprecated: false
    syntax:
      content: 'function on(event: "isMutedChanged", listener: IsMutedChangedListener)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsMutedChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.on](xref:@azure/communication-react.CallAdapterSubscribers.on)
  - name: on("isSpeakingChanged", IsSpeakingChangedListener)
    uid: '@azure/communication-react.CommonCallAdapter.on_6'
    package: '@azure/communication-react'
    summary: Subscribe function for 'isSpeakingChanged' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isSpeakingChanged", listener:
        IsSpeakingChangedListener)
      parameters:
        - id: event
          type: '"isSpeakingChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsSpeakingChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.on](xref:@azure/communication-react.CallAdapterSubscribers.on)
  - name: on("participantsJoined", ParticipantsJoinedListener)
    uid: '@azure/communication-react.CommonCallAdapter.on'
    package: '@azure/communication-react'
    summary: Subscribe function for 'participantsJoined' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "participantsJoined", listener:
        ParticipantsJoinedListener)
      parameters:
        - id: event
          type: '"participantsJoined"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsJoinedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.on](xref:@azure/communication-react.CallAdapterSubscribers.on)
  - name: on("participantsLeft", ParticipantsLeftListener)
    uid: '@azure/communication-react.CommonCallAdapter.on_1'
    package: '@azure/communication-react'
    summary: Subscribe function for 'participantsLeft' event.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "participantsLeft", listener:
        ParticipantsLeftListener)
      parameters:
        - id: event
          type: '"participantsLeft"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsLeftListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.on](xref:@azure/communication-react.CallAdapterSubscribers.on)
  - name: on("selectedMicrophoneChanged", PropertyChangedEvent)
    uid: '@azure/communication-react.CommonCallAdapter.on_9'
    package: '@azure/communication-react'
    summary: |-
      Subscribe function for 'selectedMicrophoneChanged' event.

      This event fires whenever the user selects a new microphone device.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "selectedMicrophoneChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedMicrophoneChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-calling.PropertyChangedEvent" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.on](xref:@azure/communication-react.CallAdapterSubscribers.on)
  - name: on("selectedSpeakerChanged", PropertyChangedEvent)
    uid: '@azure/communication-react.CommonCallAdapter.on_10'
    package: '@azure/communication-react'
    summary: |-
      Subscribe function for 'selectedSpeakerChanged' event.

      This event fires whenever the user selects a new speaker device.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "selectedSpeakerChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedSpeakerChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-calling.PropertyChangedEvent" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterSubscribers.on](xref:@azure/communication-react.CallAdapterSubscribers.on)
  - name: 'onStateChange((state: CallAdapterState) => void)'
    uid: '@azure/communication-react.CommonCallAdapter.onStateChange'
    package: '@azure/communication-react'
    summary: Subscribes the handler to stateChanged events.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function onStateChange(handler: (state: CallAdapterState) => void)'
      parameters:
        - id: handler
          type: '(state: CallAdapterState) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AdapterState.onStateChange](xref:@azure/communication-react.AdapterState.onStateChange)
  - name: queryCameras()
    uid: '@azure/communication-react.CommonCallAdapter.queryCameras'
    package: '@azure/communication-react'
    summary: Query for available camera devices.
    remarks: This method should be called after askDevicePermission()
    isDeprecated: false
    syntax:
      content: 'function queryCameras(): Promise<VideoDeviceInfo[]>'
      return:
        description: >-
          An array of video device information entities
          <xref:%40azure%2Fcommunication-calling%23VideoDeviceInfo>
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.VideoDeviceInfo"
          />[]&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterDeviceManagement.queryCameras](xref:@azure/communication-react.CallAdapterDeviceManagement.queryCameras)
  - name: queryMicrophones()
    uid: '@azure/communication-react.CommonCallAdapter.queryMicrophones'
    package: '@azure/communication-react'
    summary: Query for available microphone devices.
    remarks: This method should be called after askDevicePermission()
    isDeprecated: false
    syntax:
      content: 'function queryMicrophones(): Promise<AudioDeviceInfo[]>'
      return:
        description: >-
          An array of audio device information entities
          <xref:%40azure%2Fcommunication-calling%23AudioDeviceInfo>
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.AudioDeviceInfo"
          />[]&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterDeviceManagement.queryMicrophones](xref:@azure/communication-react.CallAdapterDeviceManagement.queryMicrophones)
  - name: querySpeakers()
    uid: '@azure/communication-react.CommonCallAdapter.querySpeakers'
    package: '@azure/communication-react'
    summary: Query for available microphone devices.
    remarks: This method should be called after askDevicePermission()
    isDeprecated: false
    syntax:
      content: 'function querySpeakers(): Promise<AudioDeviceInfo[]>'
      return:
        description: >-
          An array of audio device information entities
          <xref:%40azure%2Fcommunication-calling%23AudioDeviceInfo>
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.AudioDeviceInfo"
          />[]&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterDeviceManagement.querySpeakers](xref:@azure/communication-react.CallAdapterDeviceManagement.querySpeakers)
  - name: removeParticipant(string)
    uid: '@azure/communication-react.CommonCallAdapter.removeParticipant'
    package: '@azure/communication-react'
    summary: Remove a participant from the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeParticipant(userId: string): Promise<void>'
      parameters:
        - id: userId
          type: string
          description: Id of the participant to be removed
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.removeParticipant](xref:@azure/communication-react.CallAdapterCallOperations.removeParticipant)
  - name: setCamera(VideoDeviceInfo, VideoStreamOptions)
    uid: '@azure/communication-react.CommonCallAdapter.setCamera'
    package: '@azure/communication-react'
    summary: Set the camera to use in the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setCamera(sourceInfo: VideoDeviceInfo, options?:
        VideoStreamOptions): Promise<void>
      parameters:
        - id: sourceInfo
          type: <xref uid="@azure/communication-calling.VideoDeviceInfo" />
          description: >-
            Camera device to choose, pick one returned by 
            [queryCameras](xref:@azure/communication-react.CallAdapterDeviceManagement.queryCameras)
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how the camera stream is rendered
            <xref:%40azure%2Fcommunication-calling%23VideoStreamOptions>
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterDeviceManagement.setCamera](xref:@azure/communication-react.CallAdapterDeviceManagement.setCamera)
  - name: setMicrophone(AudioDeviceInfo)
    uid: '@azure/communication-react.CommonCallAdapter.setMicrophone'
    package: '@azure/communication-react'
    summary: Set the microphone to use in the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setMicrophone(sourceInfo: AudioDeviceInfo): Promise<void>'
      parameters:
        - id: sourceInfo
          type: <xref uid="@azure/communication-calling.AudioDeviceInfo" />
          description: >-
            Microphone device to choose, pick one returned by
            [queryMicrophones](xref:@azure/communication-react.CallAdapterDeviceManagement.queryMicrophones)
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterDeviceManagement.setMicrophone](xref:@azure/communication-react.CallAdapterDeviceManagement.setMicrophone)
  - name: setSpeaker(AudioDeviceInfo)
    uid: '@azure/communication-react.CommonCallAdapter.setSpeaker'
    package: '@azure/communication-react'
    summary: Set the speaker to use in the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setSpeaker(sourceInfo: AudioDeviceInfo): Promise<void>'
      parameters:
        - id: sourceInfo
          type: <xref uid="@azure/communication-calling.AudioDeviceInfo" />
          description: >-
            Speaker device to choose, pick one returned by
            [querySpeakers](xref:@azure/communication-react.CallAdapterDeviceManagement.querySpeakers)
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterDeviceManagement.setSpeaker](xref:@azure/communication-react.CallAdapterDeviceManagement.setSpeaker)
  - name: startCamera(VideoStreamOptions)
    uid: '@azure/communication-react.CommonCallAdapter.startCamera'
    package: '@azure/communication-react'
    summary: >-
      Start the camera

      This method will start rendering a local camera view when the call is not
      active
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startCamera(options?: VideoStreamOptions): Promise<void>'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            <xref:%40azure%2Fcommunication-calling%23VideoStreamOptions>
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.startCamera](xref:@azure/communication-react.CallAdapterCallOperations.startCamera)
  - name: startScreenShare()
    uid: '@azure/communication-react.CommonCallAdapter.startScreenShare'
    package: '@azure/communication-react'
    summary: Start sharing the screen during a call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startScreenShare(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.startScreenShare](xref:@azure/communication-react.CallAdapterCallOperations.startScreenShare)
  - name: stopCamera()
    uid: '@azure/communication-react.CommonCallAdapter.stopCamera'
    package: '@azure/communication-react'
    summary: >-
      Stop the camera

      This method will stop rendering a local camera view when the call is not
      active
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopCamera(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.stopCamera](xref:@azure/communication-react.CallAdapterCallOperations.stopCamera)
  - name: stopScreenShare()
    uid: '@azure/communication-react.CommonCallAdapter.stopScreenShare'
    package: '@azure/communication-react'
    summary: Stop sharing the screen
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopScreenShare(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.stopScreenShare](xref:@azure/communication-react.CallAdapterCallOperations.stopScreenShare)
  - name: unmute()
    uid: '@azure/communication-react.CommonCallAdapter.unmute'
    package: '@azure/communication-react'
    summary: Unmute the current user during the call or enable microphone locally
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function unmute(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallAdapterCallOperations.unmute](xref:@azure/communication-react.CallAdapterCallOperations.unmute)
methods:
  - name: joinCall(boolean)
    uid: '@azure/communication-react.CommonCallAdapter.joinCall'
    package: '@azure/communication-react'
    summary: Join the call with microphone initially on/off.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function joinCall(microphoneOn?: boolean)'
      parameters:
        - id: microphoneOn
          type: boolean
          description: Whether microphone is initially enabled
  - name: startCall(string[], StartCallOptions)
    uid: '@azure/communication-react.CommonCallAdapter.startCall'
    package: '@azure/communication-react'
    summary: Start the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startCall(participants: string[], options?: StartCallOptions)'
      parameters:
        - id: participants
          type: string[]
          description: An array of participant ids to join
        - id: options
          type: <xref uid="@azure/communication-calling.StartCallOptions" />
          description: ''
extends: >-
  <xref uid="@azure/communication-react.AdapterState" />&lt;<xref
  uid="@azure/communication-react.CallAdapterState" />&gt;,<xref
  uid="@azure/communication-react.Disposable" />,<xref
  uid="@azure/communication-react.CallAdapterCallOperations" />,<xref
  uid="@azure/communication-react.CallAdapterDeviceManagement" />,<xref
  uid="@azure/communication-react.CallAdapterSubscribers" />
