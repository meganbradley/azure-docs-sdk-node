### YamlMime:TSType
name: CallWithChatAdapter
uid: '@azure/communication-react.CallWithChatAdapter'
package: '@azure/communication-react'
summary: >-
  [CallWithChatComposite](xref:@azure/communication-react.CallWithChatComposite)
  Adapter interface.
fullName: CallWithChatAdapter
remarks: ''
isDeprecated: false
type: interface
inheritedMethods:
  - name: askDevicePermission(PermissionConstraints)
    uid: '@azure/communication-react.CallWithChatAdapter.askDevicePermission'
    package: '@azure/communication-react'
    summary: Ask for permissions of devices.
    remarks: Browser permission window will pop up if permissions are not granted yet.
    isDeprecated: false
    syntax:
      content: >-
        function askDevicePermission(constrain: PermissionConstraints):
        Promise<void>
      parameters:
        - id: constrain
          type: <xref uid="@azure/communication-calling.PermissionConstraints" />
          description: >-
            Define constraints for accessing local devices
            <xref:%40azure%2Fcommunication-calling%23PermissionConstraints>
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.askDevicePermission](xref:@azure/communication-react.CallWithChatAdapterManagement.askDevicePermission)
  - name: createStreamView(string, VideoStreamOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.createStreamView'
    package: '@azure/communication-react'
    summary: Create the html view for a stream.
    remarks: This method is implemented for composite.
    isDeprecated: false
    syntax:
      content: >-
        function createStreamView(remoteUserId?: string, options?:
        VideoStreamOptions): Promise<void | CreateVideoStreamViewResult>
      parameters:
        - id: remoteUserId
          type: string
          description: >-
            Id of the participant to render, leave it undefined to create the
            local camera view
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            <xref:%40azure%2Fcommunication-calling%23VideoStreamOptions>
      return:
        description: ''
        type: >-
          Promise&lt;void | <xref
          uid="@azure/communication-react.CreateVideoStreamViewResult" />&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.createStreamView](xref:@azure/communication-react.CallWithChatAdapterManagement.createStreamView)
  - name: deleteMessage(string)
    uid: '@azure/communication-react.CallWithChatAdapter.deleteMessage'
    package: '@azure/communication-react'
    summary: Delete a message in the thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function deleteMessage(messageId: string): Promise<void>'
      parameters:
        - id: messageId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.deleteMessage](xref:@azure/communication-react.CallWithChatAdapterManagement.deleteMessage)
  - name: dispose()
    uid: '@azure/communication-react.CallWithChatAdapter.dispose'
    package: '@azure/communication-react'
    summary: Dispose of the Composite
    remarks: ''
    isDeprecated: false
    syntax:
      content: function dispose()
    inheritanceDescription: >-
      <b>Inherited From</b>
      [Disposable.dispose](xref:@azure/communication-react.Disposable.dispose)
  - name: disposeStreamView(string, VideoStreamOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.disposeStreamView'
    package: '@azure/communication-react'
    summary: Dispose the html view for a stream.
    remarks: This method is implemented for composite.
    isDeprecated: false
    syntax:
      content: >-
        function disposeStreamView(remoteUserId?: string, options?:
        VideoStreamOptions): Promise<void>
      parameters:
        - id: remoteUserId
          type: string
          description: >-
            Id of the participant to render, leave it undefined to dispose the
            local camera view
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            <xref:%40azure%2Fcommunication-calling%23VideoStreamOptions>
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.disposeStreamView](xref:@azure/communication-react.CallWithChatAdapterManagement.disposeStreamView)
  - name: fetchInitialData()
    uid: '@azure/communication-react.CallWithChatAdapter.fetchInitialData'
    package: '@azure/communication-react'
    summary: |-
      Fetch initial state for the Chat adapter.

      Performs the minimal fetch necessary for ChatComposite and API methods.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function fetchInitialData(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.fetchInitialData](xref:@azure/communication-react.CallWithChatAdapterManagement.fetchInitialData)
  - name: getState()
    uid: '@azure/communication-react.CallWithChatAdapter.getState'
    package: '@azure/communication-react'
    summary: Get the current State
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getState(): CallWithChatAdapterState'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.CallWithChatAdapterState" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AdapterState.getState](xref:@azure/communication-react.AdapterState.getState)
  - name: joinCall(boolean)
    uid: '@azure/communication-react.CallWithChatAdapter.joinCall'
    package: '@azure/communication-react'
    summary: Join the call with microphone initially on/off.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function joinCall(microphoneOn?: boolean): undefined | Call'
      parameters:
        - id: microphoneOn
          type: boolean
          description: Whether microphone is initially enabled
      return:
        description: ''
        type: undefined | <xref uid="@azure/communication-calling.Call" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.joinCall](xref:@azure/communication-react.CallWithChatAdapterManagement.joinCall)
  - name: leaveCall(boolean)
    uid: '@azure/communication-react.CallWithChatAdapter.leaveCall'
    package: '@azure/communication-react'
    summary: Leave the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function leaveCall(forEveryone?: boolean): Promise<void>'
      parameters:
        - id: forEveryone
          type: boolean
          description: Whether to remove all participants when leaving
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.leaveCall](xref:@azure/communication-react.CallWithChatAdapterManagement.leaveCall)
  - name: loadPreviousChatMessages(number)
    uid: '@azure/communication-react.CallWithChatAdapter.loadPreviousChatMessages'
    package: '@azure/communication-react'
    summary: Load more previous messages in the chat thread history.
    remarks: This method is usually used to control incremental fetch/infinite scroll.
    isDeprecated: false
    syntax:
      content: >-
        function loadPreviousChatMessages(messagesToLoad: number):
        Promise<boolean>
      parameters:
        - id: messagesToLoad
          type: number
          description: ''
      return:
        description: ''
        type: Promise&lt;boolean&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.loadPreviousChatMessages](xref:@azure/communication-react.CallWithChatAdapterManagement.loadPreviousChatMessages)
  - name: mute()
    uid: '@azure/communication-react.CallWithChatAdapter.mute'
    package: '@azure/communication-react'
    summary: Mute the current user during the call or disable microphone locally.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function mute(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.mute](xref:@azure/communication-react.CallWithChatAdapterManagement.mute)
  - name: off("callEnded", CallEndedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "callEnded", listener: CallEndedListener)'
      parameters:
        - id: event
          type: '"callEnded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallEndedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: 'off("callError", (e: AdapterError) => void)'
    uid: '@azure/communication-react.CallWithChatAdapter.off_10'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "callError", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"callError"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("callIdChanged", CallIdChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "callIdChanged", listener: CallIdChangedListener)'
      parameters:
        - id: event
          type: '"callIdChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallIdChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("callParticipantsJoined", ParticipantsJoinedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "callParticipantsJoined", listener:
        ParticipantsJoinedListener)
      parameters:
        - id: event
          type: '"callParticipantsJoined"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsJoinedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("callParticipantsLeft", ParticipantsLeftListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_7'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "callParticipantsLeft", listener:
        ParticipantsLeftListener)
      parameters:
        - id: event
          type: '"callParticipantsLeft"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsLeftListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: 'off("chatError", (e: AdapterError) => void)'
    uid: '@azure/communication-react.CallWithChatAdapter.off_16'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "chatError", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"chatError"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("chatParticipantsAdded", ParticipantsAddedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_14'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "chatParticipantsAdded", listener:
        ParticipantsAddedListener)
      parameters:
        - id: event
          type: '"chatParticipantsAdded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsAddedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("chatParticipantsRemoved", ParticipantsRemovedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_15'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "chatParticipantsRemoved", listener:
        ParticipantsRemovedListener)
      parameters:
        - id: event
          type: '"chatParticipantsRemoved"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.ParticipantsRemovedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("displayNameChanged", DisplayNameChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "displayNameChanged", listener:
        DisplayNameChangedListener)
      parameters:
        - id: event
          type: '"displayNameChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.DisplayNameChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: >-
      off("isLocalScreenSharingActiveChanged",
      IsLocalScreenSharingActiveChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isLocalScreenSharingActiveChanged", listener:
        IsLocalScreenSharingActiveChangedListener)
      parameters:
        - id: event
          type: '"isLocalScreenSharingActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsLocalScreenSharingActiveChangedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("isMutedChanged", IsMutedChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "isMutedChanged", listener: IsMutedChangedListener)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsMutedChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("isSpeakingChanged", IsSpeakingChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isSpeakingChanged", listener:
        IsSpeakingChangedListener)
      parameters:
        - id: event
          type: '"isSpeakingChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsSpeakingChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("messageRead", MessageReadListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_13'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("messageReceived", MessageReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_11'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "messageReceived", listener:
        MessageReceivedListener)
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("messageSent", MessageReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.off_12'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageSent", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("selectedMicrophoneChanged", PropertyChangedEvent)
    uid: '@azure/communication-react.CallWithChatAdapter.off_8'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "selectedMicrophoneChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedMicrophoneChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-calling.PropertyChangedEvent" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: off("selectedSpeakerChanged", PropertyChangedEvent)
    uid: '@azure/communication-react.CallWithChatAdapter.off_9'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "selectedSpeakerChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedSpeakerChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-calling.PropertyChangedEvent" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.off](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.off)
  - name: 'offStateChange((state: CallWithChatAdapterState) => void)'
    uid: '@azure/communication-react.CallWithChatAdapter.offStateChange'
    package: '@azure/communication-react'
    summary: Unsubscribes the handler to stateChanged events.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function offStateChange(handler: (state: CallWithChatAdapterState) =>
        void)
      parameters:
        - id: handler
          type: '(state: CallWithChatAdapterState) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AdapterState.offStateChange](xref:@azure/communication-react.AdapterState.offStateChange)
  - name: on("callEnded", CallEndedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "callEnded", listener: CallEndedListener)'
      parameters:
        - id: event
          type: '"callEnded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallEndedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: 'on("callError", (e: AdapterError) => void)'
    uid: '@azure/communication-react.CallWithChatAdapter.on_10'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "callError", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"callError"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("callIdChanged", CallIdChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "callIdChanged", listener: CallIdChangedListener)'
      parameters:
        - id: event
          type: '"callIdChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallIdChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("callParticipantsJoined", ParticipantsJoinedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "callParticipantsJoined", listener:
        ParticipantsJoinedListener)
      parameters:
        - id: event
          type: '"callParticipantsJoined"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsJoinedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("callParticipantsLeft", ParticipantsLeftListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_7'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "callParticipantsLeft", listener:
        ParticipantsLeftListener)
      parameters:
        - id: event
          type: '"callParticipantsLeft"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsLeftListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: 'on("chatError", (e: AdapterError) => void)'
    uid: '@azure/communication-react.CallWithChatAdapter.on_16'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "chatError", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"chatError"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("chatParticipantsAdded", ParticipantsAddedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_14'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "chatParticipantsAdded", listener:
        ParticipantsAddedListener)
      parameters:
        - id: event
          type: '"chatParticipantsAdded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsAddedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("chatParticipantsRemoved", ParticipantsRemovedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_15'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "chatParticipantsRemoved", listener:
        ParticipantsRemovedListener)
      parameters:
        - id: event
          type: '"chatParticipantsRemoved"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.ParticipantsRemovedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("displayNameChanged", DisplayNameChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "displayNameChanged", listener:
        DisplayNameChangedListener)
      parameters:
        - id: event
          type: '"displayNameChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.DisplayNameChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: >-
      on("isLocalScreenSharingActiveChanged",
      IsLocalScreenSharingActiveChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isLocalScreenSharingActiveChanged", listener:
        IsLocalScreenSharingActiveChangedListener)
      parameters:
        - id: event
          type: '"isLocalScreenSharingActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsLocalScreenSharingActiveChangedListener"
            />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("isMutedChanged", IsMutedChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "isMutedChanged", listener: IsMutedChangedListener)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsMutedChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("isSpeakingChanged", IsSpeakingChangedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isSpeakingChanged", listener:
        IsSpeakingChangedListener)
      parameters:
        - id: event
          type: '"isSpeakingChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsSpeakingChangedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("messageRead", MessageReadListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_13'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("messageReceived", MessageReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_11'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageReceived", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("messageSent", MessageReceivedListener)
    uid: '@azure/communication-react.CallWithChatAdapter.on_12'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageSent", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("selectedMicrophoneChanged", PropertyChangedEvent)
    uid: '@azure/communication-react.CallWithChatAdapter.on_8'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "selectedMicrophoneChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedMicrophoneChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-calling.PropertyChangedEvent" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: on("selectedSpeakerChanged", PropertyChangedEvent)
    uid: '@azure/communication-react.CallWithChatAdapter.on_9'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "selectedSpeakerChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedSpeakerChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-calling.PropertyChangedEvent" />
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterSubscriptions.on](xref:@azure/communication-react.CallWithChatAdapterSubscriptions.on)
  - name: 'onStateChange((state: CallWithChatAdapterState) => void)'
    uid: '@azure/communication-react.CallWithChatAdapter.onStateChange'
    package: '@azure/communication-react'
    summary: Subscribes the handler to stateChanged events.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function onStateChange(handler: (state: CallWithChatAdapterState) =>
        void)
      parameters:
        - id: handler
          type: '(state: CallWithChatAdapterState) =&gt; void'
          description: ''
    inheritanceDescription: >-
      <b>Inherited From</b>
      [AdapterState.onStateChange](xref:@azure/communication-react.AdapterState.onStateChange)
  - name: queryCameras()
    uid: '@azure/communication-react.CallWithChatAdapter.queryCameras'
    package: '@azure/communication-react'
    summary: Query for available camera devices.
    remarks: This method should be called after askDevicePermission()
    isDeprecated: false
    syntax:
      content: 'function queryCameras(): Promise<VideoDeviceInfo[]>'
      return:
        description: >-
          An array of video device information entities
          <xref:%40azure%2Fcommunication-calling%23VideoDeviceInfo>
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.VideoDeviceInfo"
          />[]&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.queryCameras](xref:@azure/communication-react.CallWithChatAdapterManagement.queryCameras)
  - name: queryMicrophones()
    uid: '@azure/communication-react.CallWithChatAdapter.queryMicrophones'
    package: '@azure/communication-react'
    summary: Query for available microphone devices.
    remarks: This method should be called after askDevicePermission()
    isDeprecated: false
    syntax:
      content: 'function queryMicrophones(): Promise<AudioDeviceInfo[]>'
      return:
        description: >-
          An array of audio device information entities
          <xref:%40azure%2Fcommunication-calling%23AudioDeviceInfo>
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.AudioDeviceInfo"
          />[]&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.queryMicrophones](xref:@azure/communication-react.CallWithChatAdapterManagement.queryMicrophones)
  - name: querySpeakers()
    uid: '@azure/communication-react.CallWithChatAdapter.querySpeakers'
    package: '@azure/communication-react'
    summary: Query for available microphone devices.
    remarks: This method should be called after askDevicePermission()
    isDeprecated: false
    syntax:
      content: 'function querySpeakers(): Promise<AudioDeviceInfo[]>'
      return:
        description: >-
          An array of audio device information entities
          <xref:%40azure%2Fcommunication-calling%23AudioDeviceInfo>
        type: >-
          Promise&lt;<xref uid="@azure/communication-calling.AudioDeviceInfo"
          />[]&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.querySpeakers](xref:@azure/communication-react.CallWithChatAdapterManagement.querySpeakers)
  - name: removeParticipant(string)
    uid: '@azure/communication-react.CallWithChatAdapter.removeParticipant'
    package: '@azure/communication-react'
    summary: Remove a participant from a Call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeParticipant(userId: string): Promise<void>'
      parameters:
        - id: userId
          type: string
          description: UserId of the participant to remove.
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.removeParticipant](xref:@azure/communication-react.CallWithChatAdapterManagement.removeParticipant)
  - name: sendMessage(string, SendMessageOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.sendMessage'
    package: '@azure/communication-react'
    summary: Send a message in the thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function sendMessage(content: string, options?: SendMessageOptions):
        Promise<void>
      parameters:
        - id: content
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/communication-chat.SendMessageOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.sendMessage](xref:@azure/communication-react.CallWithChatAdapterManagement.sendMessage)
  - name: sendReadReceipt(string)
    uid: '@azure/communication-react.CallWithChatAdapter.sendReadReceipt'
    package: '@azure/communication-react'
    summary: Send a read receipt for a message.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function sendReadReceipt(chatMessageId: string): Promise<void>'
      parameters:
        - id: chatMessageId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.sendReadReceipt](xref:@azure/communication-react.CallWithChatAdapterManagement.sendReadReceipt)
  - name: sendTypingIndicator()
    uid: '@azure/communication-react.CallWithChatAdapter.sendTypingIndicator'
    package: '@azure/communication-react'
    summary: Send typing indicator in the thread.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function sendTypingIndicator(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.sendTypingIndicator](xref:@azure/communication-react.CallWithChatAdapterManagement.sendTypingIndicator)
  - name: setCamera(VideoDeviceInfo, VideoStreamOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.setCamera'
    package: '@azure/communication-react'
    summary: Set the camera to use in the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setCamera(sourceInfo: VideoDeviceInfo, options?:
        VideoStreamOptions): Promise<void>
      parameters:
        - id: sourceInfo
          type: <xref uid="@azure/communication-calling.VideoDeviceInfo" />
          description: >-
            Camera device to choose, pick one returned by 
            [queryCameras](xref:@azure/communication-react.CallAdapterDeviceManagement.queryCameras)
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how the camera stream is rendered
            <xref:%40azure%2Fcommunication-calling%23VideoStreamOptions>
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.setCamera](xref:@azure/communication-react.CallWithChatAdapterManagement.setCamera)
  - name: setMicrophone(AudioDeviceInfo)
    uid: '@azure/communication-react.CallWithChatAdapter.setMicrophone'
    package: '@azure/communication-react'
    summary: Set the microphone to use in the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setMicrophone(sourceInfo: AudioDeviceInfo): Promise<void>'
      parameters:
        - id: sourceInfo
          type: <xref uid="@azure/communication-calling.AudioDeviceInfo" />
          description: >-
            Microphone device to choose, pick one returned by
            [queryMicrophones](xref:@azure/communication-react.CallAdapterDeviceManagement.queryMicrophones)
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.setMicrophone](xref:@azure/communication-react.CallWithChatAdapterManagement.setMicrophone)
  - name: setSpeaker(AudioDeviceInfo)
    uid: '@azure/communication-react.CallWithChatAdapter.setSpeaker'
    package: '@azure/communication-react'
    summary: Set the speaker to use in the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setSpeaker(sourceInfo: AudioDeviceInfo): Promise<void>'
      parameters:
        - id: sourceInfo
          type: <xref uid="@azure/communication-calling.AudioDeviceInfo" />
          description: >-
            Speaker device to choose, pick one returned by
            [querySpeakers](xref:@azure/communication-react.CallAdapterDeviceManagement.querySpeakers)
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.setSpeaker](xref:@azure/communication-react.CallWithChatAdapterManagement.setSpeaker)
  - name: startCall(string[], StartCallOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.startCall'
    package: '@azure/communication-react'
    summary: Start the call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startCall(participants: string[], options?: StartCallOptions):
        undefined | Call
      parameters:
        - id: participants
          type: string[]
          description: An array of participant ids to join
        - id: options
          type: <xref uid="@azure/communication-calling.StartCallOptions" />
          description: ''
      return:
        description: ''
        type: undefined | <xref uid="@azure/communication-calling.Call" />
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.startCall](xref:@azure/communication-react.CallWithChatAdapterManagement.startCall)
  - name: startCamera(VideoStreamOptions)
    uid: '@azure/communication-react.CallWithChatAdapter.startCamera'
    package: '@azure/communication-react'
    summary: >-
      Start the camera.


      This method will start rendering a local camera view when the call is not
      active.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startCamera(options?: VideoStreamOptions): Promise<void>'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: >-
            Options to control how video streams are rendered
            <xref:%40azure%2Fcommunication-calling%23VideoStreamOptions>
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.startCamera](xref:@azure/communication-react.CallWithChatAdapterManagement.startCamera)
  - name: startScreenShare()
    uid: '@azure/communication-react.CallWithChatAdapter.startScreenShare'
    package: '@azure/communication-react'
    summary: Start sharing the screen during a call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startScreenShare(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.startScreenShare](xref:@azure/communication-react.CallWithChatAdapterManagement.startScreenShare)
  - name: stopCamera()
    uid: '@azure/communication-react.CallWithChatAdapter.stopCamera'
    package: '@azure/communication-react'
    summary: >-
      Stop the camera.


      This method will stop rendering a local camera view when the call is not
      active.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopCamera(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.stopCamera](xref:@azure/communication-react.CallWithChatAdapterManagement.stopCamera)
  - name: stopScreenShare()
    uid: '@azure/communication-react.CallWithChatAdapter.stopScreenShare'
    package: '@azure/communication-react'
    summary: Stop sharing the screen.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopScreenShare(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.stopScreenShare](xref:@azure/communication-react.CallWithChatAdapterManagement.stopScreenShare)
  - name: unmute()
    uid: '@azure/communication-react.CallWithChatAdapter.unmute'
    package: '@azure/communication-react'
    summary: Unmute the current user during the call or enable microphone locally.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function unmute(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.unmute](xref:@azure/communication-react.CallWithChatAdapterManagement.unmute)
  - name: updateMessage(string, string, Record<string, string>)
    uid: '@azure/communication-react.CallWithChatAdapter.updateMessage'
    package: '@azure/communication-react'
    summary: Update a message content.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateMessage(messageId: string, content: string, metadata?:
        Record<string, string>): Promise<void>
      parameters:
        - id: messageId
          type: string
          description: ''
        - id: content
          type: string
          description: ''
        - id: metadata
          type: Record&lt;string, string&gt;
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
    inheritanceDescription: >-
      <b>Inherited From</b>
      [CallWithChatAdapterManagement.updateMessage](xref:@azure/communication-react.CallWithChatAdapterManagement.updateMessage)
extends: >-
  <xref uid="@azure/communication-react.CallWithChatAdapterManagement" />,<xref
  uid="@azure/communication-react.AdapterState" />&lt;<xref
  uid="@azure/communication-react.CallWithChatAdapterState" />&gt;,<xref
  uid="@azure/communication-react.Disposable" />,<xref
  uid="@azure/communication-react.CallWithChatAdapterSubscriptions" />
