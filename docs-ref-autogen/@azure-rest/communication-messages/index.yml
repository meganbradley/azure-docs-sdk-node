### YamlMime:TSPackage
uid: '@azure-rest/communication-messages'
name: '@azure-rest/communication-messages'
summary: ''
type: package
interfaces:
  - '@azure-rest/communication-messages.ClientRequestIdHeaderOutput'
  - '@azure-rest/communication-messages.GetMedia'
  - '@azure-rest/communication-messages.GetMedia200Headers'
  - '@azure-rest/communication-messages.GetMedia200Response'
  - '@azure-rest/communication-messages.GetMediaDefaultHeaders'
  - '@azure-rest/communication-messages.GetMediaDefaultResponse'
  - '@azure-rest/communication-messages.GetMediaHeaderParam'
  - '@azure-rest/communication-messages.GetMediaHeaders'
  - '@azure-rest/communication-messages.ListTemplates'
  - '@azure-rest/communication-messages.ListTemplates200Headers'
  - '@azure-rest/communication-messages.ListTemplates200Response'
  - '@azure-rest/communication-messages.ListTemplatesDefaultHeaders'
  - '@azure-rest/communication-messages.ListTemplatesDefaultResponse'
  - '@azure-rest/communication-messages.ListTemplatesHeaderParam'
  - '@azure-rest/communication-messages.ListTemplatesHeaders'
  - '@azure-rest/communication-messages.ListTemplatesQueryParam'
  - '@azure-rest/communication-messages.ListTemplatesQueryParamProperties'
  - '@azure-rest/communication-messages.MediaNotificationContent'
  - '@azure-rest/communication-messages.MessageReceiptOutput'
  - '@azure-rest/communication-messages.MessageTemplate'
  - '@azure-rest/communication-messages.MessageTemplateBindingsParent'
  - '@azure-rest/communication-messages.MessageTemplateDocument'
  - '@azure-rest/communication-messages.MessageTemplateImage'
  - '@azure-rest/communication-messages.MessageTemplateItemOutputParent'
  - '@azure-rest/communication-messages.MessageTemplateLocation'
  - '@azure-rest/communication-messages.MessageTemplateQuickAction'
  - '@azure-rest/communication-messages.MessageTemplateText'
  - '@azure-rest/communication-messages.MessageTemplateValueParent'
  - '@azure-rest/communication-messages.MessageTemplateVideo'
  - '@azure-rest/communication-messages.NotificationContentParent'
  - '@azure-rest/communication-messages.PagingOptions'
  - '@azure-rest/communication-messages.RepeatabilityRequestHeadersOutput'
  - '@azure-rest/communication-messages.RepeatabilityResponseHeadersOutput'
  - '@azure-rest/communication-messages.Routes'
  - '@azure-rest/communication-messages.Send'
  - '@azure-rest/communication-messages.Send202Headers'
  - '@azure-rest/communication-messages.Send202Response'
  - '@azure-rest/communication-messages.SendBodyParam'
  - '@azure-rest/communication-messages.SendDefaultHeaders'
  - '@azure-rest/communication-messages.SendDefaultResponse'
  - '@azure-rest/communication-messages.SendHeaderParam'
  - '@azure-rest/communication-messages.SendHeaders'
  - '@azure-rest/communication-messages.SendMessageResultOutput'
  - '@azure-rest/communication-messages.TemplateNotificationContent'
  - '@azure-rest/communication-messages.TextNotificationContent'
  - '@azure-rest/communication-messages.WhatsAppMessageTemplateBindings'
  - '@azure-rest/communication-messages.WhatsAppMessageTemplateBindingsButton'
  - '@azure-rest/communication-messages.WhatsAppMessageTemplateBindingsComponent'
  - '@azure-rest/communication-messages.WhatsAppMessageTemplateItemOutput'
typeAliases:
  - '@azure-rest/communication-messages.GetArrayType'
  - '@azure-rest/communication-messages.GetMediaParameters'
  - '@azure-rest/communication-messages.GetPage'
  - '@azure-rest/communication-messages.ListTemplatesParameters'
  - '@azure-rest/communication-messages.MessageTemplateBindings'
  - '@azure-rest/communication-messages.MessageTemplateItemOutput'
  - '@azure-rest/communication-messages.MessageTemplateValue'
  - '@azure-rest/communication-messages.MessagesServiceClient'
  - '@azure-rest/communication-messages.NotificationContent'
  - '@azure-rest/communication-messages.PagedMessageTemplateItemOutput'
  - '@azure-rest/communication-messages.PaginateReturn'
  - '@azure-rest/communication-messages.RepeatabilityResultOutput'
  - '@azure-rest/communication-messages.SendParameters'
functions:
  - name: default(string, ClientOptions)
    uid: '@azure-rest/communication-messages.default'
    package: '@azure-rest/communication-messages'
    summary: Initialize a new instance of `MessagesServiceClient`
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(connectionString: string, options?: ClientOptions):
        MessagesServiceClient
      parameters:
        - id: connectionString
          type: string
          description: The connectionString or url of your Communication Services resource.
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: the parameter for all optional parameters
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/communication-messages.MessagesServiceClient"
          />
  - name: default(string, KeyCredential | TokenCredential, ClientOptions)
    uid: '@azure-rest/communication-messages.default_1'
    package: '@azure-rest/communication-messages'
    summary: Initialize a new instance of `MessagesServiceClient`
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function default(endpoint: string, credential: KeyCredential |
        TokenCredential, options?: ClientOptions): MessagesServiceClient
      parameters:
        - id: endpoint
          type: string
          description: The endpoint of your Communication Services resource.
        - id: credential
          type: >-
            <xref uid="@azure/core-auth.KeyCredential" /> | <xref
            uid="@azure/core-auth.TokenCredential" />
          description: The key or token credential.
        - id: options
          type: <xref uid="@azure-rest/core-client.ClientOptions" />
          description: the parameter for all optional parameters
      return:
        description: ''
        type: >-
          <xref uid="@azure-rest/communication-messages.MessagesServiceClient"
          />
  - name: isUnexpected(GetMedia200Response | GetMediaDefaultResponse)
    uid: '@azure-rest/communication-messages.isUnexpected'
    package: '@azure-rest/communication-messages'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: GetMedia200Response |
        GetMediaDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref uid="@azure-rest/communication-messages.GetMedia200Response"
            /> | <xref
            uid="@azure-rest/communication-messages.GetMediaDefaultResponse" />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(Send202Response | SendDefaultResponse)
    uid: '@azure-rest/communication-messages.isUnexpected_1'
    package: '@azure-rest/communication-messages'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: Send202Response | SendDefaultResponse):
        response
      parameters:
        - id: response
          type: >-
            <xref uid="@azure-rest/communication-messages.Send202Response" /> |
            <xref uid="@azure-rest/communication-messages.SendDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: isUnexpected(ListTemplates200Response | ListTemplatesDefaultResponse)
    uid: '@azure-rest/communication-messages.isUnexpected_2'
    package: '@azure-rest/communication-messages'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function isUnexpected(response: ListTemplates200Response |
        ListTemplatesDefaultResponse): response
      parameters:
        - id: response
          type: >-
            <xref
            uid="@azure-rest/communication-messages.ListTemplates200Response" />
            | <xref
            uid="@azure-rest/communication-messages.ListTemplatesDefaultResponse"
            />
          description: ''
      return:
        description: ''
        type: response
  - name: paginate<TResponse>(Client, TResponse, PagingOptions<TResponse>)
    uid: '@azure-rest/communication-messages.paginate'
    package: '@azure-rest/communication-messages'
    summary: >-
      Helper to paginate results from an initial response that follows the
      specification of Autorest `x-ms-pageable` extension
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function paginate<TResponse>(client: Client, initialResponse: TResponse,
        options?: PagingOptions<TResponse>):
        PagedAsyncIterableIterator<PaginateReturn<TResponse>>
      parameters:
        - id: client
          type: <xref uid="@azure-rest/core-client.Client" />
          description: Client to use for sending the next page requests
        - id: initialResponse
          type: TResponse
          description: >-
            Initial response containing the nextLink and current page of
            elements
        - id: options
          type: >-
            <xref uid="@azure-rest/communication-messages.PagingOptions"
            />&lt;TResponse&gt;
          description: ''
      return:
        description: '- PagedAsyncIterableIterator to iterate the elements'
        type: >-
          <xref uid="@azure/core-paging.PagedAsyncIterableIterator" />&lt;<xref
          uid="@azure-rest/communication-messages.PaginateReturn"
          />&lt;TResponse&gt;&gt;
